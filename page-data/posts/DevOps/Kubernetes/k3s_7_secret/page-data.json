{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/DevOps/Kubernetes/k3s_7_secret/","result":{"data":{"markdownRemark":{"id":"df9bb52a-2328-5c01-a25b-870413c2fc5a","html":"<h1 id=\"1-secret-이란\" style=\"position:relative;\"><a href=\"#1-secret-%EC%9D%B4%EB%9E%80\" aria-label=\"1 secret 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Secret 이란?</h1>\n<p><mark>Secret은 쿠버네티스 클러스터에서 비밀번호와 같은 민감한 데이터를 관리하기 위한 객체이다.</mark> 쿠버네티스 클러스터 내에서 마치 환경변수처럼 동작하기 때문에, 여러 Pod에서 독립적으로 값을 참조할 수 있다. 값을 yml 파일 등에 하드코딩 하지 않기 때문에 보안상의 이점이 있으며, Secret값을 하나의 공급원에서 관리할 수 있다는 편의성이 있다.</p>\n<p>ConfigMap도 환경변수를 포함한 다양한 설정파일을 관리할 수 있는 쿠버네티스 객체이다. 다만 Secret은 몇가지 보안기능을 추가 제공하며, 데이터를 Base64 인코딩하여 관리한다. 이때 Base64 인코딩은 암호화가 아니기 때문에 누구나 해독해서 값을 파악할 수 있다. 하지만 애초에 외부인이 쿠버네티스 클러스터에 접근할 수 있는 시나리오라면, 그때는 Secret이 문제가 아니라 그냥 총체적 난국일 것이다.</p>\n<p>다만 내부 사용자 중에서도 권한에 따라 Secret에 대한 접근을 제한하고 싶을 수 있다. 기본 설정대로라면 etcd에 Secret값이 저장되기 때문에 API 서버에 요청 권한이 있는 누구나 Secret값을 조회할 수 있고, 특정 namespace에 Pod 생성권한이 있는 사람도 속한 namespace의 Secret값을 조회할 수 있다. 따라서 Secret에 대한 내부 접근을 제한하기 위해서는 <a href=\"https://kubernetes.io/docs/concepts/configuration/secret/\">추가 보안 절차</a>가 필요하다.</p>\n<h1 id=\"2-secret-등록\" style=\"position:relative;\"><a href=\"#2-secret-%EB%93%B1%EB%A1%9D\" aria-label=\"2 secret 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Secret 등록</h1>\n<p>쿠버네티스는 주요 사용 시나리오에 대해 몇 가지 내장 타입을 제공한다. 각 타입마다 쿠버네티스가 내부적으로 유효성 검사 및 제약 조건을 부여한다. <mark>이번 포스팅에서는 DB 패스워드와 같은 일반 인증데이터를 Secret으로 등록할 것이기 때문에 <a href=\"https://kubernetes.io/docs/concepts/configuration/secret/#basic-authentication-secret\">Basic Auth</a>을 사용했다.</mark></p>\n<pre><code class=\"language-yml\">apiVersion: v1\nkind: Secret\nmetadata:\n  name: { 시크릿 이름 }\ntype: kubernetes.io/basic-auth\nstringData:\n  { MySQL 비밀번호 키 }: { MySQL 비밀번호 값 } # key는 이후 값을 참조하기 위한 용도로 자유롭게 지정\n</code></pre>\n<h1 id=\"3-secret-사용\" style=\"position:relative;\"><a href=\"#3-secret-%EC%82%AC%EC%9A%A9\" aria-label=\"3 secret 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Secret 사용</h1>\n<p>위에 생성한 Secret의 값을 <code>시크릿 이름</code>과 <code>키</code>로 참조할 수 있다. 아래 예시 코드에서 <code>secretKeyRef</code>항목이 이에 해당한다.</p>\n<pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql-dp\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n        - image: mysql\n          name: mysql\n          env:\n            - name: MYSQL_ROOT_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: { 시크릿 이름 } # 생성한 Secret의 이름\n                  key: { MySQL 비밀번호 키 } # 참조하려는 값의 키\n          volumeMounts:\n            - name: mysql-persistent-storage\n              mountPath: /var/lib/mysql\n      volumes:\n        - name: mysql-persistent-storage\n          persistentVolumeClaim:\n            claimName: mysql-pvc\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-svc\nspec:\n  type: NodePort\n  ports:\n    - port: 3306\n      nodePort: { 오픈할 노드포트 }\n  selector:\n    app: mysql\n</code></pre>\n<h1 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h1>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/concepts/configuration/secret/\">Kubernetes : \"Secrets\"</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#1-secret-%EC%9D%B4%EB%9E%80\">1. Secret 이란?</a></li>\n<li><a href=\"#2-secret-%EB%93%B1%EB%A1%9D\">2. Secret 등록</a></li>\n<li><a href=\"#3-secret-%EC%82%AC%EC%9A%A9\">3. Secret 사용</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">참고자료</a></li>\n</ul>","frontmatter":{"title":"k3s 배포하기 (7) : Secret 등록","createdAt":"2024-01-28","updatedAt":"2024-01-28","tags":["kubernetes","k3s","AWS","lightsail","DevOps","Secret"],"description":"AWS 인스턴스에 k3s 단일 노드 클러스터를 구축해본다. Secret을 이용하여 클러스터에서 쓰이는 민감 정보를 관리해보자","reference":null}},"allMarkdownRemark":{"nodes":[{"id":"353ab996-d3e6-5556-8c06-077b7b2f6370","excerpt":"1. 프로젝트 개요 백엔드 개발자 친구와 함께 쿠버네티스를 연습하기 위한 토이프로젝트를 만들었다. 명색이 쿠버네티스 프로젝트인데 MSA를 안할 수 없었다. 백엔드가 MSA로 바쁜데, 프론트가 가만히 있을 수 없어 Three.js…","parent":{"id":"9922ca6f-2e24-5b46-af05-3d732bdc680a","name":"k3s_1_intro","relativePath":"DevOps/Kubernetes/k3s_1_intro.md"},"frontmatter":{"title":"k3s 배포하기 (1) : 프로젝트 개요 & 사전 준비","createdAt":"2024-01-21","updatedAt":"2024-01-21"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_1_intro/"}},{"id":"8d4891d2-35c4-5d9e-ba8b-cbd3586aa466","excerpt":"프론트는 너무 간단하다. Next.js같은 풀스텍 프레임워크를 사용하면 좀 더 흥미로울 것 같다. 1. 도커 이미지 리액트 프로젝트를 빌드하면 정적 파일이 생성된다. 이러한 정적 컨텐츠를 서비스하기 위해서는 웹서버가 필요하다. 그래서 Nginx…","parent":{"id":"78f25f94-3f4b-51ed-8127-3ba754a426e0","name":"k3s_2_front","relativePath":"DevOps/Kubernetes/k3s_2_front.md"},"frontmatter":{"title":"k3s 배포하기 (2) : 프론트(React) 배포","createdAt":"2024-01-21","updatedAt":"2024-01-21"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_2_front/"}},{"id":"4fc2f125-d6bf-558f-a3ac-450a8111a5aa","excerpt":"본래 DB의 아이디와 패스워드는 쿠버네티스에서 Secret으로 관리하는 것을 권장한다. Secret 생성과 적용은 이후 포스팅에서 따로 다룰 예정이다. 1. PV, PVC 쿠버네티스에서는 파드가 죽으면 알아서 다시 띄워준다. 그런데 MySQL…","parent":{"id":"497e574b-50c4-5789-b252-f5e123645d29","name":"k3s_3_mysql","relativePath":"DevOps/Kubernetes/k3s_3_mysql.md"},"frontmatter":{"title":"k3s 배포하기 (3) : 데이터베이스(MySQL) 배포","createdAt":"2024-01-22","updatedAt":"2024-01-22"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_3_mysql/"}},{"id":"105f9b57-232d-5894-b19b-9530e548ea7a","excerpt":"본래 DB의 아이디와 패스워드는 쿠버네티스에서 Secret으로 관리하는 것을 권장한다. Secret 생성과 적용은 이후 포스팅에서 따로 다룰 예정이다. 1. MSA 구조 백엔드는 MSA 구조로 설계되어 총 3개의 Spring Boot…","parent":{"id":"fc9e8efe-87a2-5ae4-9522-a7be3b623338","name":"k3s_4_back","relativePath":"DevOps/Kubernetes/k3s_4_back.md"},"frontmatter":{"title":"k3s 배포하기 (4) : 백엔드(Redis, Spring, Kafka) 배포","createdAt":"2024-01-22","updatedAt":"2024-01-22"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_4_back/"}},{"id":"b074c93c-6fee-597f-84a0-4ae2ca498c4e","excerpt":"1. 인그레스 삽질기⚒️ 이 항목은 k3s를 사용할 경우 참고하지 않아도 되는 삽질기입니다. 우리는 k3s…","parent":{"id":"cf6e57cc-27bd-5a23-a936-4c1be07c330f","name":"k3s_5_ingress","relativePath":"DevOps/Kubernetes/k3s_5_ingress.md"},"frontmatter":{"title":"k3s 배포하기 (5) : Traefik 인그레스 설정","createdAt":"2024-01-23","updatedAt":"2024-01-23"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_5_ingress/"}},{"id":"6f01b89a-ec71-5dfa-b6a3-8bf60f330a93","excerpt":"1. Cert Manager Cert Manager는 쿠버네티스에서 SSL/TLS 인증서를 관리하기 위한 오픈 소스 도구이다. Let's Encrypt와 같은 인증 기관을 사용하여 인증서를 발급하고 갱신하는 작업을 자동화한다. 개인적으로 Certbot…","parent":{"id":"fee655a1-4c88-55d5-b977-a0a4688b4e3b","name":"k3s_6_cert_manager","relativePath":"DevOps/Kubernetes/k3s_6_cert_manager.md"},"frontmatter":{"title":"k3s 배포하기 (6) : Cert Manager 등록","createdAt":"2024-01-23","updatedAt":"2024-01-23"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_6_cert_manager/"}},{"id":"df9bb52a-2328-5c01-a25b-870413c2fc5a","excerpt":"1. Secret 이란? Secret은 쿠버네티스 클러스터에서 비밀번호와 같은 민감한 데이터를 관리하기 위한 객체이다. 쿠버네티스 클러스터 내에서 마치 환경변수처럼 동작하기 때문에, 여러 Pod에서 독립적으로 값을 참조할 수 있다. 값을 yml…","parent":{"id":"176dffb2-6e59-5b17-aa12-1724f04ed480","name":"k3s_7_secret","relativePath":"DevOps/Kubernetes/k3s_7_secret.md"},"frontmatter":{"title":"k3s 배포하기 (7) : Secret 등록","createdAt":"2024-01-28","updatedAt":"2024-01-28"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_7_secret/"}}]}},"pageContext":{"pagePath":"/posts/DevOps/Kubernetes/k3s_7_secret/","siblingPostsPathRegex":"/^(?!.*README).*DevOps\\/Kubernetes\\/.*$/","relativeDirectory":"Kubernetes","id":"df9bb52a-2328-5c01-a25b-870413c2fc5a","parent":{"id":"176dffb2-6e59-5b17-aa12-1724f04ed480","name":"k3s_7_secret","relativePath":"DevOps/Kubernetes/k3s_7_secret.md"},"fields":{"slug":"/posts/DevOps/Kubernetes/k3s_7_secret/"}}},"staticQueryHashes":["24302420","4059933791"],"slicesMap":{}}