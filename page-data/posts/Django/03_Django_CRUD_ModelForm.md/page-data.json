{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/Django/03_Django_CRUD_ModelForm.md/","result":{"data":{"markdownRemark":{"id":"ade014fc-d912-54fa-8675-d122aa8f44ad","html":"<ul>\n<li><a href=\"#1-model-form\">1. Model Form</a>\n<ul>\n<li><a href=\"#11-model-class\">1.1. Model Class</a></li>\n<li><a href=\"#12-form-class\">1.2. Form Class</a></li>\n<li><a href=\"#13-modeform-class\">1.3. ModeForm Class</a></li>\n</ul>\n</li>\n<li><a href=\"#2-create\">2. Create</a>\n<ul>\n<li><a href=\"#21-urlspy\">2.1. urls.py</a></li>\n<li><a href=\"#22-viewspy\">2.2. views.py</a></li>\n<li><a href=\"#23-templateshtml\">2.3. templates.html</a></li>\n</ul>\n</li>\n<li><a href=\"#3-read\">3. Read</a>\n<ul>\n<li><a href=\"#31-urlspy\">3.1. urls.py</a></li>\n<li><a href=\"#32-viewspy\">3.2. views.py</a></li>\n<li><a href=\"#33-templateshtml\">3.3. templates.html</a></li>\n</ul>\n</li>\n<li><a href=\"#4-update\">4. Update</a>\n<ul>\n<li><a href=\"#41-urlspy\">4.1. urls.py</a></li>\n<li><a href=\"#42-viewspy\">4.2. views.py</a></li>\n<li><a href=\"#43-templateshtml\">4.3. templates.html</a></li>\n</ul>\n</li>\n<li><a href=\"#5-delete\">5. Delete</a>\n<ul>\n<li><a href=\"#51-urlspy\">5.1. urls.py</a></li>\n<li><a href=\"#52-viewspy\">5.2. views.py</a></li>\n<li><a href=\"#53-templateshtml\">5.3. templates.html</a></li>\n</ul>\n</li>\n<li><a href=\"#6-handling-http-request-methods\">6. Handling HTTP Request Methods</a>\n<ul>\n<li><a href=\"#61-view-decoarators\">6.1. View Decoarators</a></li>\n<li><a href=\"#62-urlspy\">6.2. urls.py</a></li>\n<li><a href=\"#63-viewspy\">6.3. views.py</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"1-model-form\" style=\"position:relative;\"><a href=\"#1-model-form\" aria-label=\"1 model form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Model Form</h1>\n<h2 id=\"11-model-class\" style=\"position:relative;\"><a href=\"#11-model-class\" aria-label=\"11 model class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. Model Class</h2>\n<pre><code class=\"language-python\"># articles/models.py\nfrom django.db import models\n\n# Article inherits model.Model\nclass Article(models.Model):\n    title = models.CharField(max_length=10)\n    content = models.TextField()\n</code></pre>\n<h2 id=\"12-form-class\" style=\"position:relative;\"><a href=\"#12-form-class\" aria-label=\"12 form class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. Form Class</h2>\n<p><strong>In a similar way that a model class’s fields map to database fields, a form class’s fields map to HTML form &#x3C;input> elements.</strong></p>\n<ul>\n<li>\n<p><strong>is_valid()</strong><br>\nA Form instance has an <strong>is_valid() method</strong>, which runs validation routines for all its fields. When this method is called, if all fields contain valid data, it will:</p>\n<ul>\n<li>return True</li>\n<li>place the form’s data in its cleaned_data attribute.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p><strong>Widgets</strong><br>\n<a href=\"https://docs.djangoproject.com/en/4.1/ref/forms/widgets/\">Django Widgets 공식문서</a><br>\nEach form field has a corresponding Widget class, which in turn corresponds to an HTML form widget such as &#x3C;input type=\"text\">.</p>\n</li>\n<li>\n<p><strong>Form rendering options</strong></p>\n<ul>\n<li><strong>as_div</strong>: will render them wrapped in &#x3C;div> tags.</li>\n<li><strong>as_table</strong>: will render them as table cells wrapped in &#x3C;tr> tags.</li>\n<li><strong>as_p</strong>: will render them wrapped in &#x3C;p> tags.</li>\n<li><strong>as_ul</strong>: will render them wrapped in &#x3C;li> tags.</li>\n</ul>\n</li>\n</ul>\n<p>Example</p>\n<pre><code class=\"language-python\"># articles/forms.py\nfrom django import forms\n\nclass ArticleForm(forms.Form):\n    NATION_A = 'kr'\n    NATION_B = 'ch'\n    NATION_C = 'jp'\n    NATIONS_CHOICES = [\n        (NATION_A, '한국'), # (value, showing)\n        (NATION_B, '중국'),\n        (NATION_C, '일본'),\n    ]\n    title = forms.CharField(max_length=10)\n    content = forms.CharField(widget=forms.Textarea())\n    nation = forms.ChoiceField(choices=NATIONS_CHOICES)\n</code></pre>\n<h2 id=\"13-modeform-class\" style=\"position:relative;\"><a href=\"#13-modeform-class\" aria-label=\"13 modeform class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3. ModeForm Class</h2>\n<p><strong>The form Class that map closely to Django models.</strong></p>\n<pre><code class=\"language-python\"># articles/forms.py\nfrom django import forms\nfrom .models import Article\n\nclass ArticleForm(forms.ModelForm):\n    title = forms.CharField(\n        label = 'Title',\n        widget=forms.TextInput(\n            attrs={\n                'class': 'my-title',\n                'placeholder': 'Enter the title',\n            }\n        )\n    )\n\n    content = forms.CharField(\n        label = 'Content',\n        widget=forms.Textarea(\n            attrs={\n                'class': 'my-content',\n                'placeholder': 'Enter the content',\n                'rows': 5,\n                'cols': 50,\n            }\n            error_message={\n                'required': 'Please enter your content'\n            }\n        )\n    )\n\n    class Meta:\n        model = Article\n        fields = '__all__'\n        # fields = ('title', 'content',)\n        # exclude = ('title', )\n</code></pre>\n<h1 id=\"2-create\" style=\"position:relative;\"><a href=\"#2-create\" aria-label=\"2 create permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Create</h1>\n<h2 id=\"21-urlspy\" style=\"position:relative;\"><a href=\"#21-urlspy\" aria-label=\"21 urlspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. urls.py</h2>\n<pre><code class=\"language-python\">app_name = 'articles'\nurlpatterns = [\n    path('new/', views.new, name='new'),\n    path('create/', views.create, name='create'),\n]\n</code></pre>\n<h2 id=\"22-viewspy\" style=\"position:relative;\"><a href=\"#22-viewspy\" aria-label=\"22 viewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. views.py</h2>\n<pre><code class=\"language-python\">from .forms import ArticleForm\n\ndef new(request):\n    form  = ArticleForm()\n    context = {\n        'form': form,\n    }\n    return render(request, 'articles/new.html', context)\n\ndef create(request):\n    form = ArticleForm(request.POST)\n    if form.is_valid():\n        article = form.save()\n        return redirect('articles:detail', article.pk)\n    # the reason is saved in form.errors\n    # print(f'Error: {form.errors}')\n\n    # also by hand over the form again, the error message can be printed on the new.html\n    context = {\n        'form': form,\n    }\n    return render(request, 'articles/new.html', context)\n</code></pre>\n<h2 id=\"23-templateshtml\" style=\"position:relative;\"><a href=\"#23-templateshtml\" aria-label=\"23 templateshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3. templates.html</h2>\n<p><strong>new.html</strong></p>\n<pre><code class=\"language-django\">&#x3C;h1>NEW&#x3C;/h1>\n&#x3C;form action=\"{% url 'articles:create' %}\" method=\"POST\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    &#x3C;input type=\"submit\">\n&#x3C;/form>\n</code></pre>\n<h1 id=\"3-read\" style=\"position:relative;\"><a href=\"#3-read\" aria-label=\"3 read permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Read</h1>\n<h2 id=\"31-urlspy\" style=\"position:relative;\"><a href=\"#31-urlspy\" aria-label=\"31 urlspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. urls.py</h2>\n<pre><code class=\"language-python\">app_name = 'articles'\nurlpatterns = [\n    path('index/', views.index, name='index'),\n    path('&#x3C;int:pk>/', views.detail, name='detail'),\n]\n</code></pre>\n<h2 id=\"32-viewspy\" style=\"position:relative;\"><a href=\"#32-viewspy\" aria-label=\"32 viewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. views.py</h2>\n<pre><code class=\"language-python\">def index(request):\n    articles = Article.objects.all()\n    context = {\n        'articles': articles,\n    }\n    return render(request, 'articles/index.html', context)\n\ndef detail(request, pk):\n    article = Article.objects.get(pk=pk)\n    context = {\n        'article': article,\n    }\n    return render(request, 'articles/detail.html', context)\n</code></pre>\n<h2 id=\"33-templateshtml\" style=\"position:relative;\"><a href=\"#33-templateshtml\" aria-label=\"33 templateshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3. templates.html</h2>\n<p><strong>index.html</strong></p>\n<pre><code class=\"language-django\">&#x3C;h1>Articles&#x3C;/h1>\n&#x3C;hr>\n{% for article in articles %}\n    &#x3C;p> title: {{ article.title }} &#x3C;/p>\n    &#x3C;p> content: {{ article.content }} &#x3C;/p>\n    &#x3C;hr>\n{% endfor %}\n</code></pre>\n<p><strong>detail.html</strong></p>\n<pre><code class=\"language-django\">&#x3C;h1>DETAIL&#x3C;/h1>\n&#x3C;h3>{{ article.pk }}th article&#x3C;/h3>\n&#x3C;hr>\n&#x3C;p> title: {{ article.title }} &#x3C;/p>\n&#x3C;p> content: {{ article.content }} &#x3C;/p>\n&#x3C;p> created at: {{ article.created_at }} &#x3C;/p>\n&#x3C;p> updated at: {{ article.updated_at }} &#x3C;/p>\n&#x3C;hr>\n</code></pre>\n<h1 id=\"4-update\" style=\"position:relative;\"><a href=\"#4-update\" aria-label=\"4 update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Update</h1>\n<h2 id=\"41-urlspy\" style=\"position:relative;\"><a href=\"#41-urlspy\" aria-label=\"41 urlspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1. urls.py</h2>\n<pre><code class=\"language-python\">app_name = 'articles'\nurlpatterns = [\n    path('&#x3C;int:pk>/edit/', views.edit, name='edit'),\n    path('&#x3C;int:pk>/update/', views.update, name='update'),\n]\n</code></pre>\n<h2 id=\"42-viewspy\" style=\"position:relative;\"><a href=\"#42-viewspy\" aria-label=\"42 viewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2. views.py</h2>\n<pre><code class=\"language-python\">def edit(request, pk):\n    article = Article.objects.get(pk=pk)\n    # make hte instance based on another data\n    form = ArticleFrom(instance=aritcle)\n    context = {\n        'form': form,\n    }\n    return render(request, 'articles/edit.html', context)\n\ndef update(request, pk):\n    article = Article.objects.get(pk=pk)\n    form = ArticleForm(request.POST, instance=article)\n    if form.is_Valid():\n        form.save()\n        return redirect('articles:detial', article.pk)\n    context = {\n        'form': form,\n    }\n    return render(request, 'articles/edit.html', context)\n</code></pre>\n<h2 id=\"43-templateshtml\" style=\"position:relative;\"><a href=\"#43-templateshtml\" aria-label=\"43 templateshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3. templates.html</h2>\n<p><strong>edit.html</strong></p>\n<pre><code class=\"language-django\">&#x3C;h1>EDIT&#x3C;/h1>\n&#x3C;form action=\"{% url 'articles:update' article.pk %}\" method=\"POST\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    &#x3C;input type=\"submit\">\n&#x3C;/form>\n</code></pre>\n<h1 id=\"5-delete\" style=\"position:relative;\"><a href=\"#5-delete\" aria-label=\"5 delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Delete</h1>\n<h2 id=\"51-urlspy\" style=\"position:relative;\"><a href=\"#51-urlspy\" aria-label=\"51 urlspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1. urls.py</h2>\n<pre><code class=\"language-python\">app_name = 'articles'\nurlpatterns = [\n    path('&#x3C;int:pk>/delete/', views.delete, name='delete'),\n]\n</code></pre>\n<h2 id=\"52-viewspy\" style=\"position:relative;\"><a href=\"#52-viewspy\" aria-label=\"52 viewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2. views.py</h2>\n<pre><code class=\"language-python\">def delete(request, pk):\n    article = Article.objects.get(pk=pk)\n    article.delete()\n    return redirect('articles:index')\n</code></pre>\n<h2 id=\"53-templateshtml\" style=\"position:relative;\"><a href=\"#53-templateshtml\" aria-label=\"53 templateshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.3. templates.html</h2>\n<p><strong>detail.html</strong></p>\n<pre><code class=\"language-django\">&#x3C;h1>DETAIL&#x3C;/h1>\n&#x3C;h3>{{ article.pk }}th article&#x3C;/h3>\n&#x3C;hr>\n&#x3C;p> title: {{ article.title }} &#x3C;/p>\n&#x3C;p> content: {{ article.content }} &#x3C;/p>\n&#x3C;p> created at: {{ article.created_at }} &#x3C;/p>\n&#x3C;p> updated at: {{ article.updated_at }} &#x3C;/p>\n&#x3C;hr>\n&#x3C;form action=\"{% url 'articles:delete' article.pk %}\" method=\"POST\">\n    {% csrf_token %}\n    &#x3C;input type=\"submit\" value=\"DELETE\">\n&#x3C;/form>\n</code></pre>\n<h1 id=\"6-handling-http-request-methods\" style=\"position:relative;\"><a href=\"#6-handling-http-request-methods\" aria-label=\"6 handling http request methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Handling HTTP Request Methods</h1>\n<p><strong>By distinguishing the request method, url and view codes can be written more concisely.</strong></p>\n<h2 id=\"61-view-decoarators\" style=\"position:relative;\"><a href=\"#61-view-decoarators\" aria-label=\"61 view decoarators permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.1. View Decoarators</h2>\n<p><code>from django.views.decorators.http import</code></p>\n<ul>\n<li><code>@require_http_methods(['',])</code>\n<ul>\n<li>Allow only the methods in the list</li>\n</ul>\n</li>\n<li><code>@require_POST</code>\n<ul>\n<li>Allow POST only</li>\n</ul>\n</li>\n<li><code>@require_safe</code>\n<ul>\n<li>Allow GET only</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"62-urlspy\" style=\"position:relative;\"><a href=\"#62-urlspy\" aria-label=\"62 urlspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.2. urls.py</h2>\n<pre><code class=\"language-python\">app_name = 'articles'\nurlpatterns = [\n    path('create/', views.create, name='create'),\n    path('index/', views.index, name='index'),\n    path('&#x3C;int:pk>/', views.detail, name='detail'),\n    path('&#x3C;int:pk>/update/', views.update, name='update'),\n    path('&#x3C;int:pk>/delete/', views.delete, name='delete'),\n]\n</code></pre>\n<h2 id=\"63-viewspy\" style=\"position:relative;\"><a href=\"#63-viewspy\" aria-label=\"63 viewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.3. views.py</h2>\n<pre><code class=\"language-python\">from django.views.decorators.http import require_http_methods, require_safe, require_POST\nfrom .forms import ArticleForm\n\n# Create an Article\n@require_http_methods(['GET','POST'])\ndef create(request):\n    if request.method == 'POST':    # Post an article\n        form = ArticleForm(request.POST)\n        if form.is_valid():\n            article = form.save()\n            return redirect('articles:detail', article.pk)\n    else:                           # Get the article form\n        form  = ArticleForm()\n    context = {\n        'form': form,\n    }\n    return render(request, 'articles/create.html', context)\n\n# Read Article List\n@require_safe\ndef index(request):\n    articles = Article.objects.all()\n    context = {\n        'articles': articles,\n    }\n    return render(request, 'articles/index.html', context)\n\n# Read Article Detail\n@require_safe\ndef detail(request, pk):\n    article = Article.objects.get(pk=pk)\n    context = {\n        'article': article,\n    }\n    return render(request, 'articles/detail.html', context)\n\n# Update an Article\n@require_http_methods(['GET','POST'])\ndef update(request, pk):\n    article = Article.objects.get(pk=pk)\n    if request.method == 'POST':        # Update an article\n        form = ArticleForm(request.POST, instance=article)\n        if form.is_Valid():\n            form.save()\n            return redirect('articles:detail', article.pk)\n    else:                               # Get the article form with data\n        form = ArticleFrom(instance=aritcle)\n    context = {\n        'form': form,\n    }\n    return render(request, 'articles/update.html', context)\n\n# Delete an Article\n@require_POST\ndef delete(request, pk):\n    article = Article.objects.get(pk=pk)\n    if reqeust.mehtod == ' POST':\n        article.delete()\n        return redirect('articles:index')\n    return redirect('articles:detial', artilce.pk)\n</code></pre>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-model-form\">1. Model Form</a></p>\n<ul>\n<li><a href=\"#11-model-class\">1.1. Model Class</a></li>\n<li><a href=\"#12-form-class\">1.2. Form Class</a></li>\n<li><a href=\"#13-modeform-class\">1.3. ModeForm Class</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-create\">2. Create</a></p>\n<ul>\n<li><a href=\"#21-urlspy\">2.1. urls.py</a></li>\n<li><a href=\"#22-viewspy\">2.2. views.py</a></li>\n<li><a href=\"#23-templateshtml\">2.3. templates.html</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-read\">3. Read</a></p>\n<ul>\n<li><a href=\"#31-urlspy\">3.1. urls.py</a></li>\n<li><a href=\"#32-viewspy\">3.2. views.py</a></li>\n<li><a href=\"#33-templateshtml\">3.3. templates.html</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-update\">4. Update</a></p>\n<ul>\n<li><a href=\"#41-urlspy\">4.1. urls.py</a></li>\n<li><a href=\"#42-viewspy\">4.2. views.py</a></li>\n<li><a href=\"#43-templateshtml\">4.3. templates.html</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-delete\">5. Delete</a></p>\n<ul>\n<li><a href=\"#51-urlspy\">5.1. urls.py</a></li>\n<li><a href=\"#52-viewspy\">5.2. views.py</a></li>\n<li><a href=\"#53-templateshtml\">5.3. templates.html</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-handling-http-request-methods\">6. Handling HTTP Request Methods</a></p>\n<ul>\n<li><a href=\"#61-view-decoarators\">6.1. View Decoarators</a></li>\n<li><a href=\"#62-urlspy\">6.2. urls.py</a></li>\n<li><a href=\"#63-viewspy\">6.3. views.py</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Django CRUD with Model Form","createdAt":"2022-11-08","updatedAt":"2022-12-24","tags":null,"description":null,"reference":null}},"allMarkdownRemark":{"nodes":[{"id":"005a8113-20da-59f5-849d-0f9aef3a6f71","parent":{"id":"84f76b0b-ed0c-5bab-a01c-527db65b0400","name":"02_Django_CRUD","relativePath":"Django/02_Django_CRUD.md"},"frontmatter":{"title":"Django Basic CRUD","createdAt":"2022-11-08","updatedAt":"2022-12-24"},"excerpt":"0. Cross Site Request Forgery(CSRF) 0.1. What is CSRF 0.2. CSRF Token 1. Model 1.1. models.py 2. Create 2.1. urls.py 2.2. views.py 2.…"},{"id":"0de70fd0-12aa-50df-9b48-f01e0a227eaf","parent":{"id":"b2c5f3de-6374-5e40-965e-581fad21ff28","name":"01_Django_Basics_MTV","relativePath":"Django/01_Django_Basics_MTV.md"},"frontmatter":{"title":"Django Basics & MTV Design Pattern","createdAt":"2022-12-24","updatedAt":"2022-12-24"},"excerpt":"1. Django 1.1. Framework 1.2. Django 2. MTV Design Pattern 2.1. Design Pattern 2.2. MTV Design Pattern 3. Start Django 4. Django Folder…"},{"id":"ade014fc-d912-54fa-8675-d122aa8f44ad","parent":{"id":"4fde6c73-3e67-5377-b04a-dc5180c6ec82","name":"03_Django_CRUD_ModelForm","relativePath":"Django/03_Django_CRUD_ModelForm.md"},"frontmatter":{"title":"Django CRUD with Model Form","createdAt":"2022-11-08","updatedAt":"2022-12-24"},"excerpt":"1. Model Form 1.1. Model Class 1.2. Form Class 1.3. ModeForm Class 2. Create 2.1. urls.py 2.2. views.py 2.3. templates.html 3. Read 3.…"},{"id":"397c0d91-4c7a-5ab6-8e32-c5d7386727ea","parent":{"id":"c267c5b8-dc49-5713-ad34-8b2c2ac02a49","name":"10_Django_Fixtures","relativePath":"Django/10_Django_Fixtures.md"},"frontmatter":{"title":"Django Fixtures","createdAt":"2022-11-08","updatedAt":"2022-12-27"},"excerpt":"1. Fixtures 1.1. The Definition of Fixtures 1.2. The Default Path of Fixtures 1.3. Create Fixtures 1.4. Import Fixtures 1. Fixtures How to…"},{"id":"69420cc4-915c-5eb2-94aa-20d32c90a4b2","parent":{"id":"5154c6c2-58ed-5383-8571-bc8f9b666149","name":"04_Django_Authentication","relativePath":"Django/04_Django_Authentication.md"},"frontmatter":{"title":"Django Internal Authentication","createdAt":"2022-12-24","updatedAt":"2023-01-02"},"excerpt":"1. Overview 1.1. Authentication 1.2. Authorization 1.3. accounts App 2. Custom User Model 2.1. User Model 2.2. Custom User Model 2.3. User…"},{"id":"55874a3b-56f1-5093-a858-1586c85f9dc2","parent":{"id":"a84a604d-81a4-5ee7-9914-73ce3a3e7e74","name":"07_Django_Many_to_One","relativePath":"Django/07_Django_Many_to_One.md"},"frontmatter":{"title":"Django N:1 Realationship","createdAt":"2022-11-08","updatedAt":"2022-12-27"},"excerpt":"1. Many to One Relationship 1.1. Foreign Key 2. Comment : Article (N:1) 2.1. Create 2.2. Read 2.3. Delete 3. Article : User (N:1) 3.…"},{"id":"633d2abf-abb7-5325-92c0-54dbe1989fa6","parent":{"id":"976f6368-b1b7-5f0c-8a32-e5cfb6056227","name":"08_Django_Many_to_Many","relativePath":"Django/08_Django_Many_to_Many.md"},"frontmatter":{"title":"Django N:M Realationship","createdAt":"2022-11-08","updatedAt":"2022-12-27"},"excerpt":"1. Intro 1.1. Terms 1.2. The limits of N:1 Relationship 1.3. Intermediary Model 1.4. Many To Many Field 1.5. Many To Many Table 1.6. with…"},{"id":"f7ac871f-e347-59d7-8418-39557102d551","parent":{"id":"9f5cf10a-5b33-5d35-aa41-032787c3343b","name":"06_Django_QuerySet","relativePath":"Django/06_Django_QuerySet.md"},"frontmatter":{"title":"Django QuerySet","createdAt":"2022-12-24","updatedAt":"2022-12-25"},"excerpt":"1. QuerySet 1.1. Query 1.1. What is QuerySet 1.1.1. Check SQL Query 1.2. QuerySet API 1.3. QuerySet Evaluation and Caching 1.3.1. Evaluation…"},{"id":"b3d21f66-8f2b-59a8-81c4-587fe42f84f2","parent":{"id":"21cc89c1-794b-59d3-bb90-86f961c2bf51","name":"11_Django_REST_API","relativePath":"Django/11_Django_REST_API.md"},"frontmatter":{"title":"Django REST API","createdAt":"2022-11-08","updatedAt":"2022-12-28"},"excerpt":"1. HTTP 1.1. HTTP 정의 1.2. HTTP의 특징 1.3. HTTP Request Methods 1.3. HTTP Response Status Code 1.4. URI(Uniform Resource Indentifier) 1.5. URL…"},{"id":"255d6bb1-5984-5128-8fda-aa203cae6dcd","parent":{"id":"537a7f4b-d6af-50a5-9f04-a17b2eb274b5","name":"12_Django_REST_Authentication","relativePath":"Django/12_Django_REST_Authentication.md"},"frontmatter":{"title":"Django REST Authentication","createdAt":"2023-01-02","updatedAt":"2023-01-12"},"excerpt":"1. CORS 1.1. Same Origin Policy 1.2. Definition of Origin 1.3. CORS 1.3.1. django-cors-headers 2. Authentication 2.1. Authentication Class…"},{"id":"b1b31545-c67e-5d21-8254-dc52ed891c2b","parent":{"id":"e0689d95-499a-5f59-8d10-6132ecec9aef","name":"09_Django_Static_Media","relativePath":"Django/09_Django_Static_Media.md"},"frontmatter":{"title":"Django Static Files","createdAt":"2022-11-08","updatedAt":"2022-12-27"},"excerpt":"1. Static Files 1.1. Static Files 1.2. Static Files with Django 1.3. Deploy Static Files 1.3.1. STATIC_ROOT 1.3.2. Procedure 2. Media Files…"},{"id":"b97171dd-b5cf-5451-9b77-2e7a7840bcb7","parent":{"id":"cf91fadb-f3c3-5472-bbe0-45bb09d06c47","name":"05_SQLite3_SQL","relativePath":"Django/05_SQLite3_SQL.md"},"frontmatter":{"title":"SQL Basics","createdAt":"2022-12-28","updatedAt":"2022-12-28"},"excerpt":"1. Database 1.1. RDB 1.2. Structure 2. SQL 2.1. SQL 2.2. Types of SQL Commands 2.3. SQL Syntax 2.4. Import .csv to Table 3. DDL 3.1. CREATE…"}]}},"pageContext":{"pagePath":"posts/Django/03_Django_CRUD_ModelForm.md","regex":"/^(?!.*README).*Django.*$/","relativeDirectory":"Django","id":"ade014fc-d912-54fa-8675-d122aa8f44ad","parent":{"id":"4fde6c73-3e67-5377-b04a-dc5180c6ec82","name":"03_Django_CRUD_ModelForm","relativePath":"Django/03_Django_CRUD_ModelForm.md"}}},"staticQueryHashes":["3300660363","3571427910"],"slicesMap":{}}