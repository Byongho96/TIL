{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/Tools/Docker.md/","result":{"data":{"markdownRemark":{"id":"0bf473fe-71fc-5730-942f-5daabcc04cf7","html":"<ul>\n<li><a href=\"#0-docker\">0. Docker</a></li>\n<li><a href=\"#1-docker-image\">1. Docker Image</a>\n<ul>\n<li><a href=\"#11-%EA%B0%9C%EC%9A%94\">1.1. 개요</a></li>\n<li><a href=\"#12-dockerfile\">1.2. Dockerfile</a></li>\n<li><a href=\"#13-%EB%AA%85%EB%A0%B9%EC%96%B4\">1.3. 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"#2-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\">2. 컨테이너</a>\n<ul>\n<li><a href=\"#21-%EA%B0%9C%EC%9A%94\">2.1. 개요</a></li>\n<li><a href=\"#22-%EB%AA%85%EB%A0%B9%EC%96%B4\">2.2. 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"#3-dockerhub\">3. DockerHub</a>\n<ul>\n<li><a href=\"#31-%EA%B0%9C%EC%9A%94\">3.1. 개요</a></li>\n<li><a href=\"#32-%EB%AA%85%EB%A0%B9%EC%96%B4\">3.2. 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"#4-volume\">4. Volume</a>\n<ul>\n<li><a href=\"#41-%EA%B0%9C%EC%9A%94\">4.1. 개요</a></li>\n<li><a href=\"#42-%EB%AA%85%EB%A0%B9%EC%96%B4\">4.2. 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"#5-docker-compose\">5. Docker Compose</a>\n<ul>\n<li><a href=\"#51-%EA%B0%9C%EC%9A%94\">5.1. 개요</a></li>\n<li><a href=\"#52-yaml-%ED%8C%8C%EC%9D%BC\">5.2. YAML 파일</a></li>\n<li><a href=\"#53-%EB%AA%85%EB%A0%B9%EC%96%B4\">5.3. 명령어</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"0-docker\" style=\"position:relative;\"><a href=\"#0-docker\" aria-label=\"0 docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. Docker</h1>\n<p>Docker는 어플리케이션 소프트웨어를 컨테이너라 부르는 독립된 환경에서 실행시킬 수 있도록 한다. 컨테이너 내부에는 운영체제를 제외하고, 어플리케이션을 구동하기 위한 모든 정보를 담고 있다.</p>\n<p>Docker를 이용하면 환경에 구애받지 않고, 정형화된 방식으로 어플리케이션 배포를 진행할 수 있다. 또한 가상환경과 다르게 여러개에 컨테이너가 하나의 운영체제의 자원을 공유해서 사용할 수 있기 때문에, 보다 효율적으로 컴퓨터 자원을 사용할 수 있다.</p>\n<h1 id=\"1-docker-image\" style=\"position:relative;\"><a href=\"#1-docker-image\" aria-label=\"1 docker image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Docker Image</h1>\n<h2 id=\"11-개요\" style=\"position:relative;\"><a href=\"#11-%EA%B0%9C%EC%9A%94\" aria-label=\"11 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. 개요</h2>\n<p>도커 이미지는 어플리케이션을 실행하기 위한 코드, 라이브러리, 런타임 환경 등의 모든 정보에 더해, 컨테이너를 실행시켰을 때 수행할 명령어 정보도 담고 있다.</p>\n<p>다르게 설명하자면 도커 이미지는 실행하고자 하는 어플리케이션 프로젝트의 특정 시점을 담아 파일화 한것이며, 해당 이미지를 컨테이너로 실행시킴으로써 동일한 형태의 프로젝트를 여러 개 실행시킬 수 있다.</p>\n<p>도커 이미지는 DockeFile을 빌드함으로써 생성할 수 있다.</p>\n<h2 id=\"12-dockerfile\" style=\"position:relative;\"><a href=\"#12-dockerfile\" aria-label=\"12 dockerfile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. Dockerfile</h2>\n<p>도커 파일은 Docker Image를 만드는 명령문을 가지는 문서이다. 모든 도커 파일은 base 이미지를 바탕으로 생성되며, 이미 생성된 이미지를 확장하여 사용할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// base 이미지 지정</span>\nFROM <span class=\"token operator\">&lt;</span>이미지<span class=\"token operator\">></span><span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span>태그<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 컨테이너 내부 작업 디렉토리 지정</span>\n<span class=\"token comment\">// 이후 명령문들의 기준</span>\nWORKDIR <span class=\"token operator\">&lt;</span>내부 디렉토리<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// shell 커맨드</span>\nRUN <span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;커맨드>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;파라미터1>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;파라미터2>\"</span><span class=\"token punctuation\">]</span>\nRUN <span class=\"token operator\">&lt;</span>전체 커맨드<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 파일 및 폴더 복사</span>\nCOPY <span class=\"token operator\">&lt;</span>src<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>dest<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 빌드 및 컨테이너 동작 시 유효한 환경변수 지정</span>\nENV <span class=\"token operator\">&lt;</span>키<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>값<span class=\"token operator\">></span>\nENV <span class=\"token operator\">&lt;</span>키<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>값<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// docker build 커맨드에서 --build-arg 옵션을 통해 넘길 수 있는 인자를 정의</span>\nARG <span class=\"token operator\">&lt;</span>이름<span class=\"token operator\">></span>\nARG <span class=\"token operator\">&lt;</span>이름<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>기본값<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 컨테이너로 들어오는 트래픽을 리스닝할 포트 지정</span>\n<span class=\"token comment\">// 프로토콜 TCP(default) / UDP</span>\nEXPOSE <span class=\"token operator\">&lt;</span>포트<span class=\"token operator\">></span>\nEXPOSE <span class=\"token operator\">&lt;</span>포트<span class=\"token operator\">></span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span>프로토콜<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 컨테이너를 실행시킬 때 default로 실행시킬 shell 커맨드</span>\n<span class=\"token comment\">// docker run과 함께 커맨드 인자를 입력하면, 실행되지 않음</span>\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;커맨드>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"&lt;파라미터1>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"&lt;파라미터2>\"</span><span class=\"token punctuation\">]</span>\nCMD <span class=\"token operator\">&lt;</span>전체 커맨드<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 컨테이너를 실행시킬 때 항상 실행되어야 하는 shell 커맨드</span>\nENTRYPOINT <span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;커맨드>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;파라미터1>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;파라미터2>\"</span><span class=\"token punctuation\">]</span>\nENTRYPOINT <span class=\"token operator\">&lt;</span>전체 커맨드<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// CMD와 ENTRYPOINT 혼합</span>\n<span class=\"token comment\">// docker run docker_image -> index.js 실행</span>\n<span class=\"token comment\">// docker run docker_image main.js -> main.js 실행</span>\nENTRYPOINT <span class=\"token punctuation\">[</span><span class=\"token string\">\"node\"</span><span class=\"token punctuation\">]</span>\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"13-명령어\" style=\"position:relative;\"><a href=\"#13-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"13 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3. 명령어</h2>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>docker build -t [이미지명] [이미지 경로]</td>\n<td>Dockerfile로 이미지 빌드</td>\n</tr>\n<tr>\n<td>docker image inspect [이미지명]</td>\n<td>Docker이미지 상세 정보 조회</td>\n</tr>\n<tr>\n<td>docker image ls [옵션]</td>\n<td>Docker 이미지 목록 출력</td>\n</tr>\n<tr>\n<td>docker image pull [이미지명]</td>\n<td>Docker 이미지 다운로드</td>\n</tr>\n<tr>\n<td>docker image push [사용자명/이미지명]</td>\n<td>Docker 이미지 푸시</td>\n</tr>\n<tr>\n<td>docker image rm [이미지명]</td>\n<td>Docker 이미지 삭제</td>\n</tr>\n<tr>\n<td>docker image prune [옵션]</td>\n<td>사용하지 않는 docker 이미지 삭제</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"2-컨테이너\" style=\"position:relative;\"><a href=\"#2-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\" aria-label=\"2 컨테이너 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 컨테이너</h1>\n<h2 id=\"21-개요\" style=\"position:relative;\"><a href=\"#21-%EA%B0%9C%EC%9A%94\" aria-label=\"21 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. 개요</h2>\n<p>도커 컨테이너는 하나의 독립적인 어플리케이션 구동 환경이다. 하나의 이미지를 통해 여러 개의 컨테이너를 실행시킬 수 있다.</p>\n<h2 id=\"22-명령어\" style=\"position:relative;\"><a href=\"#22-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"22 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. 명령어</h2>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>docker run [옵션] [이미지명]</td>\n<td>Docker 임지로 컨테이너 실행</td>\n</tr>\n<tr>\n<td>docker ps</td>\n<td>실행중인 Docker 컨테이너 목록 출력</td>\n</tr>\n<tr>\n<td>docker ps -a</td>\n<td>모든 Docker 컨테이너 목록 출력</td>\n</tr>\n<tr>\n<td>docker start [컨테이너명/ID]</td>\n<td>Docker 컨테이너 실행</td>\n</tr>\n<tr>\n<td>docker stop [컨테이너명/ID]</td>\n<td>Docker 컨테이너 멈춤</td>\n</tr>\n<tr>\n<td>docker restart [컨테이너명/ID]</td>\n<td>Docker 컨테이너 재시작</td>\n</tr>\n<tr>\n<td>docker attach [컨테이너명/ID]</td>\n<td>Docker 컨테이너 접속</td>\n</tr>\n<tr>\n<td>docker exec -it [컨테이너명/ID] /bin/bash</td>\n<td>bash 언어를 사용하여 Docker 컨테이너 접속</td>\n</tr>\n<tr>\n<td>docker image pull [이미지명]</td>\n<td>Docker 이미지 다운로드</td>\n</tr>\n<tr>\n<td>docker image push [사용자명/이미지명]</td>\n<td>Docker 이미지 푸시</td>\n</tr>\n<tr>\n<td>docker rm [컨테이너명/ID]</td>\n<td>Docker 컨테이너 삭제</td>\n</tr>\n<tr>\n<td>docker prune [컨테이너명/ID]</td>\n<td>사용되지 않는 Docker 컨테이너 삭제</td>\n</tr>\n<tr>\n<td>docker logs [컨테이너명/ID]</td>\n<td>실행중인 Docker 로그 기록 조회</td>\n</tr>\n<tr>\n<td>docker logs -f [컨테이너명/ID]</td>\n<td>Docker 로그 기록 강제 조회</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>docker run 옵션\n<ul>\n<li><strong>-i, --interactive</strong><br>\n표준 입력(stdin)을 활성화</li>\n<li><strong>--name</strong><br>\n컨테이너 이름 설정</li>\n</ul>\n<ul>\n<li><strong>-d, --detach</strong><br>\nDetached 모드. 컨테이너를 백그라운드로 실행</li>\n<li><strong>-p, --publish</strong><br>\n호스트와 컨테이너의 포트를 연결\n[호스트 포트]:[컨테이너 포트]</li>\n<li><strong>-v, --volume</strong><br>\n컨테이너 마운트 설정\n[호스트 경로/볼륨]:[컨테이너 경로]</li>\n<li><strong>-u, --user</strong><br>\n컨테이너의 리눅스 사용자 계정 설정</li>\n<li><strong>-e, --env</strong><br>\n컨테이너 내 환경 변수를 설정</li>\n<li><strong>--restart</strong><br>\n프로세스 종료시 재시작 정책 설정</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"3-dockerhub\" style=\"position:relative;\"><a href=\"#3-dockerhub\" aria-label=\"3 dockerhub permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. DockerHub</h1>\n<h2 id=\"31-개요\" style=\"position:relative;\"><a href=\"#31-%EA%B0%9C%EC%9A%94\" aria-label=\"31 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. 개요</h2>\n<p>대표적인 도커 이미지 서버로써 도커 이미지를 서버에 저장하고, 필요 시에 다운받아 사용할 수 있따.</p>\n<h2 id=\"32-명령어\" style=\"position:relative;\"><a href=\"#32-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"32 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. 명령어</h2>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>docker login -u [ID]</td>\n<td>DockerHub 로그인</td>\n</tr>\n<tr>\n<td>docker search [이미지명]</td>\n<td>DockerHub에서 이미지 검색</td>\n</tr>\n<tr>\n<td>docker push [도커 허브 ID/이미지 명]:[태그]</td>\n<td>DockerHub에 이미지 업로드</td>\n</tr>\n<tr>\n<td>docker pull [이미지명]</td>\n<td>DockerHub에서 이미지 다운로드</td>\n</tr>\n<tr>\n<td>docker loguout</td>\n<td>DockerHub 로그아웃</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"4-volume\" style=\"position:relative;\"><a href=\"#4-volume\" aria-label=\"4 volume permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Volume</h1>\n<h2 id=\"41-개요\" style=\"position:relative;\"><a href=\"#41-%EA%B0%9C%EC%9A%94\" aria-label=\"41 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1. 개요</h2>\n<p>바인드 마운트와 도커 볼륨은 거의 유사하다. 두 방식 모드 호스트의 경로(디렉토리)를 도커 컨테이너 내부에서 공유해서 사용할 수 있다는 공통점이 있따. 다만 바인드 마운트는 호스트의 특정 경로를 설정해서 매핑해줄수 있는 한편, 볼륨은 지정된 경로 <code class=\"language-text\">/var/lib/docker/volumes/[볼륨이름]/_data</code> 에만 매핑이 가능하다. 볼륨은 장점은 도커 명령어를 통해 더 간편하게 관리가 가능하다.</p>\n<h2 id=\"42-명령어\" style=\"position:relative;\"><a href=\"#42-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"42 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2. 명령어</h2>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>docker volume create --name [볼륨 이름]</td>\n<td>도커 볼륨 생성</td>\n</tr>\n<tr>\n<td>docker volume ls</td>\n<td>도커 볼륨 조회</td>\n</tr>\n<tr>\n<td>docker volume inspect [볼륨 이름]</td>\n<td>도커 볼륨 정보 조회</td>\n</tr>\n<tr>\n<td>docker run -v [볼륨이름:컨테이너 경로] ...</td>\n<td>도커 볼륨 마운트</td>\n</tr>\n<tr>\n<td>docker container inspect [컨테이너 이름]</td>\n<td>도커 컨테이너의 볼륨 정보 조회</td>\n</tr>\n<tr>\n<td>ddocker volume rm [볼륨 이름]</td>\n<td>도커 볼륨 삭제</td>\n</tr>\n<tr>\n<td>docker volume prune</td>\n<td>사용하지 않는 도커 볼륨 삭제</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p><strong>도커 볼륨 정보 조회 결과</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"CreatedAt\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n\t\t<span class=\"token string\">\"Driver\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n\t\t<span class=\"token string\">\"Labels\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>,\n\t\t<span class=\"token string\">\"Mountpoint\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>볼륨의 호스트 소스 경로<span class=\"token punctuation\">]</span>,\n\t\t<span class=\"token string\">\"Name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>볼륨 이름<span class=\"token punctuation\">]</span>,\n\t\t<span class=\"token string\">\"Options\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>,\n\t\t<span class=\"token string\">\"Scope\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p><strong>도커 컨테이너의 볼륨 정보 조회 결과</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"Mounts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"Type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"volume\"</span>,\n\t\t<span class=\"token string\">\"Name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>볼륨 이름<span class=\"token punctuation\">]</span>,\n\t\t<span class=\"token string\">\"Source\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>볼륨 호스트 경로<span class=\"token punctuation\">]</span>,\n\t\t<span class=\"token string\">\"Destination\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>볼륨 컨테이너 마운트 경로<span class=\"token punctuation\">]</span>,\n\t\t<span class=\"token punctuation\">..</span>.\n\t<span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"Type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"bind\"</span>,\n    <span class=\"token string\">\"Source\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>호스트 경로<span class=\"token punctuation\">]</span>,\n    <span class=\"token string\">\"Destination\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>컨테이너 내부 경로<span class=\"token punctuation\">]</span>,\n    <span class=\"token punctuation\">..</span>.\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"5-docker-compose\" style=\"position:relative;\"><a href=\"#5-docker-compose\" aria-label=\"5 docker compose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Docker Compose</h1>\n<h2 id=\"51-개요\" style=\"position:relative;\"><a href=\"#51-%EA%B0%9C%EC%9A%94\" aria-label=\"51 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1. 개요</h2>\n<p>Docker Compose는 여러 개의 도커 컨테이너를 관리할 수 있는 명령어를 제공한다.\nYAML 파일을 작성함으로써 여러 개의 도커 컨테이너를 묶고, 컨테이너 간의 관계를 정의할 수 있고, Docker Compose는 이 yaml 파일을 인자로 받는 명령어를 제공한다.</p>\n<h2 id=\"52-yaml-파일\" style=\"position:relative;\"><a href=\"#52-yaml-%ED%8C%8C%EC%9D%BC\" aria-label=\"52 yaml 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2. YAML 파일</h2>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 사용하는 도커 버전에 따라 yaml 파일 포맷의 버전을 설정한다.</span>\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.2'</span>\n\n<span class=\"token comment\"># 어플리 케이션에 사용할 service 목록을 정의한다</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 기본 컨테이너 이름 (container_name 옵션이 없을 경우)</span>\n  <span class=\"token key atrule\">back</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 의존 관계 설정, 컨테이너 이름</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mysql\n\n    <span class=\"token comment\"># 빌드 옵션</span>\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> . <span class=\"token comment\"># 빌드할 파일들이 존재하는 경로를 지정</span>\n      <span class=\"token key atrule\">dockerfile</span><span class=\"token punctuation\">:</span> ./dir <span class=\"token comment\"># dockerfile이 여러개거나 context의 위치와 다를 경우</span>\n\n    <span class=\"token comment\"># 컨테이너를 실행할 이미지 이름 설정</span>\n    <span class=\"token comment\"># 빌드 옵션이 있을 경우, 빌드한 결과 이미지 이름으로 사용</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> imfine<span class=\"token punctuation\">-</span>back\n\n    <span class=\"token comment\"># 컨테이너 이름 지정</span>\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> imfine<span class=\"token punctuation\">-</span>back\n\n    <span class=\"token comment\"># 포트 매핑</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8000<span class=\"token punctuation\">:</span><span class=\"token number\">8000</span>\n\n    <span class=\"token comment\"># 볼륨 마운팅</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /etc/localtime<span class=\"token punctuation\">:</span>/etc/localtime\n\n    <span class=\"token comment\"># 환경변수 설정</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> WORDPRESS_DB_HOST<span class=\"token punctuation\">:</span>db<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n      <span class=\"token punctuation\">-</span> WORDPRESS_DB_NAME<span class=\"token punctuation\">:</span>db<span class=\"token punctuation\">:</span>word\n      <span class=\"token punctuation\">-</span> WORDPRESS_DB_USER<span class=\"token punctuation\">:</span>word_user\n      <span class=\"token punctuation\">-</span> WORDPRESS_DB_PASSWORD=123456\n\n  <span class=\"token key atrule\">mysql</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./db_data<span class=\"token punctuation\">:</span>/var/lib/mysql\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> MYSQL_ROOT_PASSWROD=123456\n      <span class=\"token punctuation\">-</span> MYSQL_DATABASE=word\n      <span class=\"token punctuation\">-</span> MYSQL_USER=word_user\n      <span class=\"token punctuation\">-</span> MYSQL_PASSWORD=123456</code></pre></div>\n<h2 id=\"53-명령어\" style=\"position:relative;\"><a href=\"#53-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"53 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.3. 명령어</h2>\n<p>docker-compose 명령어는 참조할 수 있는 docker-compose.yaml 파일이 존재해야 한다. 특정 yaml파일에 대한 결과를 보고 싶으면 인자로 넘겨준다.</p>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>docker-compose build</td>\n<td>docker-compose 파일에 정의된 이미지를 빌드</td>\n</tr>\n<tr>\n<td>docker-compose up</td>\n<td>docker-compose 파일에 정의된 서비스를 실행</td>\n</tr>\n<tr>\n<td>docker-compose down</td>\n<td>docker-compose 파일에 정의된 서비스를 종료 (컨테이너 제거)</td>\n</tr>\n<tr>\n<td>docker-compose down --rmi</td>\n<td>docker-compose 파일에 정의된 서비스를 종료하고 이미지까지 제거</td>\n</tr>\n<tr>\n<td>docker-compose start</td>\n<td>docker-compose 파일에 정의된 서비스를 시작 (컨테이너 시작)</td>\n</tr>\n<tr>\n<td>docker-compose stop</td>\n<td>docker-compose 파일에 정의된 서비스를 정지 (컨테이너 정지)</td>\n</tr>\n<tr>\n<td>docker-compose restart</td>\n<td>docker-compose 파일에 정의된 서비스를 재시작 (컨테이너 재시작)</td>\n</tr>\n<tr>\n<td>docker-compose ps</td>\n<td>docker-compose 파일에 정의된 실행중인 서비스 상태 확인 (컨테이너 목록)</td>\n</tr>\n<tr>\n<td>docker-compose ps -a</td>\n<td>docker-compose 파일에 정의된 모든 서비스 상태 확인 (컨테이너 목록)</td>\n</tr>\n<tr>\n<td>docker-compose logs</td>\n<td>docker-compose 파일에 정의된 서비스들의 로그를 확인</td>\n</tr>\n</tbody>\n</table>\n<p><strong>docker-compose ps 출력 예시</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">\n<span class=\"token function\">docker</span> compose <span class=\"token function\">ps</span>\nNAME            IMAGE     COMMAND           SERVICE    CREATED         STATUS          PORTS\nexample-foo-1   alpine    <span class=\"token string\">\"/entrypoint.…\"</span>   foo        <span class=\"token number\">4</span> seconds ago   Up <span class=\"token number\">2</span> seconds    <span class=\"token number\">0.0</span>.0.0:8080-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp\n\n\n<span class=\"token function\">docker</span> compose <span class=\"token function\">ps</span> <span class=\"token parameter variable\">--all</span>\nNAME            IMAGE     COMMAND           SERVICE    CREATED         STATUS          PORTS\nexample-foo-1   alpine    <span class=\"token string\">\"/entrypoint.…\"</span>   foo        <span class=\"token number\">4</span> seconds ago   Up <span class=\"token number\">2</span> seconds    <span class=\"token number\">0.0</span>.0.0:8080-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp\nexample-bar-1   alpine    <span class=\"token string\">\"/entrypoint.…\"</span>   bar        <span class=\"token number\">4</span> seconds ago   exited <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#0-docker\">0. Docker</a></p>\n</li>\n<li>\n<p><a href=\"#1-docker-image\">1. Docker Image</a></p>\n<ul>\n<li><a href=\"#11-%EA%B0%9C%EC%9A%94\">1.1. 개요</a></li>\n<li><a href=\"#12-dockerfile\">1.2. Dockerfile</a></li>\n<li><a href=\"#13-%EB%AA%85%EB%A0%B9%EC%96%B4\">1.3. 명령어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\">2. 컨테이너</a></p>\n<ul>\n<li><a href=\"#21-%EA%B0%9C%EC%9A%94\">2.1. 개요</a></li>\n<li><a href=\"#22-%EB%AA%85%EB%A0%B9%EC%96%B4\">2.2. 명령어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-dockerhub\">3. DockerHub</a></p>\n<ul>\n<li><a href=\"#31-%EA%B0%9C%EC%9A%94\">3.1. 개요</a></li>\n<li><a href=\"#32-%EB%AA%85%EB%A0%B9%EC%96%B4\">3.2. 명령어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-volume\">4. Volume</a></p>\n<ul>\n<li><a href=\"#41-%EA%B0%9C%EC%9A%94\">4.1. 개요</a></li>\n<li><a href=\"#42-%EB%AA%85%EB%A0%B9%EC%96%B4\">4.2. 명령어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-docker-compose\">5. Docker Compose</a></p>\n<ul>\n<li><a href=\"#51-%EA%B0%9C%EC%9A%94\">5.1. 개요</a></li>\n<li><a href=\"#52-yaml-%ED%8C%8C%EC%9D%BC\">5.2. YAML 파일</a></li>\n<li><a href=\"#53-%EB%AA%85%EB%A0%B9%EC%96%B4\">5.3. 명령어</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"createdAt":"2023-03-13","isCompleted":true,"reference":null,"title":"Docker Basics","updatedAt":"2023-03-27"}},"allMarkdownRemark":{"nodes":[{"id":"6a48dcf5-c6de-5adc-aeb5-d072c58217bb","parent":{"id":"52f56034-e68c-52aa-ab2d-905c35ce72f4","name":"AWS","relativePath":"Tools/AWS.md"},"frontmatter":{"title":"AWS EC2 초보자를 위한 친절 가이드","createdAt":"2023-04-23","updatedAt":"2023-04-25"},"excerpt":"AWS 계정을 만들고, EC2를 생성 및 설정하는 기초적인 방법을 정리한 문서이다. 1. AWS 1.1. root 계정 1.2. IAM 계정 2. EC2 2.1. EC2 생성 2.2. Inbound Rule 2.3. ssh connect…"},{"id":"0bf473fe-71fc-5730-942f-5daabcc04cf7","parent":{"id":"105c959c-24a6-5fc8-902b-8c718c41ffa3","name":"Docker","relativePath":"Tools/Docker.md"},"frontmatter":{"title":"Docker Basics","createdAt":"2023-03-13","updatedAt":"2023-03-27"},"excerpt":"0. Docker 1. Docker Image 1.1. 개요 1.2. Dockerfile 1.3. 명령어 2. 컨테이너 2.1. 개요 2.2. 명령어 3. DockerHub 3.1. 개요 3.2. 명령어 4. Volume 4.1. 개요 4.…"},{"id":"dfdbbde4-663a-5293-91e7-745fe3652a49","parent":{"id":"6e9cdc43-463a-5640-ab59-31da334db920","name":"Git","relativePath":"Tools/Git.md"},"frontmatter":{"title":"Git Basics","createdAt":"2023-03-13","updatedAt":"2023-05-01"},"excerpt":"1. 용어 정리 1.1. Git 1.2. Git Web Service 1.3. Repository 2. Git 기초 사용법 2.1. Git 명령어 2.2. Git Commit Message 2.2.1. Commit Message Rule 2.2.…"},{"id":"8b4d36c7-2606-53c7-88cd-2cb14767c4a5","parent":{"id":"743195e1-880e-5362-ab1c-2f35add9cf49","name":"Gunicorn","relativePath":"Tools/Gunicorn.md"},"frontmatter":{"title":"Gunicorn Basics","createdAt":"2023-03-13","updatedAt":"2023-03-14"},"excerpt":"1. 개요 Gunicorn 은 파이썬 웹 어플리케이션을 위한 WSGI(Web Server Gateway Interface) HTTP 서버이다. Gunicorn은 클라이언트의 요청을 받아 WSGI…"},{"id":"744757ec-13ab-5324-a93d-a6a559369145","parent":{"id":"e72ea2a5-a6b6-5428-8883-d9b57f625247","name":"Linux","relativePath":"Tools/Linux.md"},"frontmatter":{"title":"Linux Commands & Shell Scripts","createdAt":"2023-03-14","updatedAt":"2023-03-25"},"excerpt":"1. 기본 1.1. 명령어 1.1.1. apt-get 1.1.2. cat 1.1.3. cd 1.1.4 cp 1.1.5 curl 1.1.6 echo 1.1.7 grep 1.1.8 find 1.1.9 head 1.1.10 history 1.1.11 ls…"},{"id":"ba80729c-73ff-5417-9278-ff2d798af6f2","parent":{"id":"08b24f45-213e-583f-90c6-636f4d863a61","name":"Nginx","relativePath":"Tools/Nginx.md"},"frontmatter":{"title":"Nginx Basics","createdAt":"2023-03-13","updatedAt":"2023-03-14"},"excerpt":"1. 개요 1.1. Event-driven 1.2. Nginx 설치 2. 폴더구조 2.1. nginx.conf 2.1.1. conf.d/ 2.1.2. sites-enabled/ 3. Directives 3.1. Block Directive 3.…"},{"id":"31565f2a-b20b-5eb7-a7f6-2db13f7b476e","parent":{"id":"82bb9a9f-6416-538e-9b0a-6f72550094bb","name":"Redis","relativePath":"Tools/Redis.md"},"frontmatter":{"title":"Redis Basics","createdAt":"2023-04-28","updatedAt":"2023-05-01"},"excerpt":"1. 개요 2. 설치 2.1. Linux 3. 사용자 설정 3.1. Linux 3.1.1. ACL 조회 3.1.2. ACL 수정 4. Django 4.1. Django 4.0 이상 4.2. Django 4.0 미만 1. 개요 Redis는 in…"}]}},"pageContext":{"pagePath":"posts/Tools/Docker.md","regex":"/^(?!.*README).*Tools.*$/","id":"0bf473fe-71fc-5730-942f-5daabcc04cf7","parent":{"id":"105c959c-24a6-5fc8-902b-8c718c41ffa3","name":"Docker","relativeDirectory":"Tools","relativePath":"Tools/Docker.md"}}},"staticQueryHashes":["3300660363","3571427910"],"slicesMap":{}}