{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/Animation/Infinite_Text_Tape.md/","result":{"data":{"markdownRemark":{"id":"eccdb3e2-b3c7-5762-a5f0-d7eef6015a1d","html":"<h1 id=\"1-목표\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A9%ED%91%9C\" aria-label=\"1 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 목표</h1>\n<p><a href=\"https://www.youtube.com/watch?v=z9hN9PXhe-A\">\"YouTube: 자바스크립트로 5분만에 텍스트 스크롤 애니메이션 효과(text marquee effect) 마스터하기, 맛있는 코딩\"</a> 를 따라잡고, 이를 커스텀할 수 있는 리액트 컴포넌트로 만드는게 목표다.</p>\n<p>다음과 같은 Prop을 받아 리액트 컴포넌트를 커스텀할 수 있도록 할 것이다.</p>\n<pre><code class=\"language-js\">type Props = {\r\n  text?: string     // 텍스트 문구\r\n  fontColor?: string    // 텍스트 색깔\r\n  tapeColor?: string    // 테이프 색깔\r\n  isRight?: boolean     // 텍스트 흐름 방향\r\n  rotationDeg?: number  // 테이프 회전 각도\r\n}\n</code></pre>\n<h1 id=\"2-전체-코드\" style=\"position:relative;\"><a href=\"#2-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"2 전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 전체 코드</h1>\n<h2 id=\"21-리액트-코드\" style=\"position:relative;\"><a href=\"#21-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BD%94%EB%93%9C\" aria-label=\"21 리액트 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. 리액트 코드</h2>\n<p>강의의 자바스크립트 코드를 리액트 컴포넌트를 만들었다.</p>\n<p>Prop의 변화에 따라 속성을 변하게 하기 위해, <code>useEffect</code>문에 실행코드를 넣고 적절히 클린업함수를 작성했다.</p>\n<pre><code class=\"language-js\">import React, { useEffect, useRef } from 'react'\r\nimport './style.scss'\r\n\r\ntype Props = {\r\n  text?: string\r\n  fontColor?: string\r\n  tapeColor?: string\r\n  isRight?: boolean\r\n  rotationDeg?: number\r\n}\r\n\r\nconst ScrollInfiniteTape: React.FC = ({\r\n  text = 'Lorem ipsum',\r\n  fontColor = 'black',\r\n  tapeColor = 'yellow',\r\n  isRight = true,\r\n  rotationDeg = 0,\r\n}: Props) => {\r\n  const tapeRef = useRef(null)\r\n  const textRef = useRef(null)\r\n  const position = useRef(0) // 중간에 Prop이 바뀌더라도, position 유지하기 위해 useEffect 밖에 선언\r\n\r\n  useEffect(() => {\r\n    const tapeElement = tapeRef.current\r\n    const textElement = textRef.current\r\n\r\n    // 텍스트가 흐르는 방향을 설정\r\n    let textDirection = 1\r\n    if (isRight) {\r\n      tapeElement.style.justifyContent = 'flex-end'\r\n    } else {\r\n      tapeElement.style.justifyContent = 'flex-start'\r\n      textDirection = -1\r\n    }\r\n\r\n    // 텍스트를 이동 시키는 함수\r\n    function moveText() {\r\n      position.current += 1\r\n      // 반만큼 이동 했을 때, 다시 원위치로 복귀하여 무한스크롤\r\n      if (position.current > textElement.scrollWidth / 2) {\r\n        textElement.style.transform = `translateX(0)`\r\n        position.current = 0\r\n      }\r\n      textElement.style.transform = `translateX(${\r\n        textDirection * position.current\r\n      }px)`\r\n    }\r\n\r\n    // 애니메이션 실행 함수\r\n    let animationId = null\r\n    function animate() {\r\n      moveText()\r\n      animationId = window.requestAnimationFrame(animate) // 희한하게 정의되기 전에 쓰네?\r\n    }\r\n\r\n    // 애니메이션 실행\r\n    animate()\r\n\r\n    // 스크롤 함수\r\n    function speedUp() {\r\n      position.current += 10\r\n    }\r\n    window.addEventListener('scroll', speedUp)\r\n\r\n    // 크린업\r\n    return () => {\r\n      window.cancelAnimationFrame(animationId)\r\n      window.removeEventListener('scroll', speedUp)\r\n    }\r\n  }, [isRight])\r\n\r\n  return (\r\n    &#x3C;div\r\n      ref={tapeRef}\r\n      className=\"scroll-infinite-tape__tape\"\r\n      style={{\r\n        backgroundColor: tapeColor,\r\n        transform: `rotate(${rotationDeg}deg) translateX(-10%)`,\r\n      }}\r\n    >\r\n      &#x3C;p\r\n        ref={textRef}\r\n        className=\"scroll-infinite-tape__text\"\r\n        style={{ color: fontColor }}\r\n      >\r\n        {(text + '\\u00a0\\u00a0\\u00a0\\u00a0').repeat(20)}\r\n      &#x3C;/p>\r\n    &#x3C;/div>\r\n  )\r\n}\n</code></pre>\n<h2 id=\"22-css-코드\" style=\"position:relative;\"><a href=\"#22-css-%EC%BD%94%EB%93%9C\" aria-label=\"22 css 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. CSS 코드</h2>\n<p>테이프가 회전했을 때, 여백이 보이지 않게 하기 위해 두 가지 처리를 했다.</p>\n<ul>\n<li><strong>width</strong><br>\n먼저 너비를 <code>120%</code>로 설정해, 화면 너비보다 여유를 두었고</li>\n<li><strong>translateX(-10%)</strong><br>\n위의 리액트 코드를 보면, 인라인 스타일로 <code>transform: translateX(-10%)</code> 를 두어, 확보된 여백을 포함하여 화면의 중앙에 오도록 했다.</li>\n</ul>\n<p>한 가지 유의해야할 점은, 이 컴포넌트를 쓰는 부모 컴포넌트가 <code>overflow-x:hidden</code> 설정을 가져야 한다.</p>\n<pre><code class=\"language-css\">.scroll-infinite-tape__tape {\r\n  display: flex;\r\n  width: 120%; // 회전했을 때, 약간의 여백 방지\r\n  padding: 1vw 0 1.3vw;\r\n}\r\n\r\n.scroll-infinite-tape__text {\r\n  min-width: fit-content; // grid 설정 때문에 p의 너비가 제한되었음\r\n  font-size: 3vw;\r\n  font-weight: 700;\r\n  white-space: nowrap;\r\n}\n</code></pre>\n<h2 id=\"3-사용-예시\" style=\"position:relative;\"><a href=\"#3-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"3 사용 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 사용 예시</h2>\n<p><a href=\"https://byongho96.github.io/TIL/demo/scroll-infinite-tape/\">애니매이션 라이브 페이지로 이동!</a></p>\n<p><img src=\"/TIL/532f7776d715c650705f9710ab912eef/infinite-text-tape.gif\" alt=\"infinite-text-tape.gif)\"></p>\n<pre><code class=\"language-js\">import * as React from 'react'\r\nimport './style.css'\r\nimport ScrollInfiniteTape from './ScrollInfiniteTape.tsx'\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    &#x3C;div className=\"scroll-infinite-tape-page\">\r\n      &#x3C;ScrollInfiniteTape\r\n        text=\"Orange is the New Black\"\r\n        fontColor=\"black\"\r\n        tapeColor=\"orange\"\r\n        isRight={false}\r\n        rotationDeg={5}\r\n      />\r\n      &#x3C;ScrollInfiniteTape\r\n        text=\"Easy Peasy Lemon Squeezy\"\r\n        fontColor=\"ivory\"\r\n        tapeColor=\"gold\"\r\n        rotationDeg={10}\r\n      />\r\n      &#x3C;ScrollInfiniteTape\r\n        text=\"Have a good one\"\r\n        fontColor=\"white\"\r\n        tapeColor=\"skyblue\"\r\n        isRight={false}\r\n        rotationDeg={-12}\r\n      />\r\n      &#x3C;ScrollInfiniteTape\r\n        text=\"Super Green\"\r\n        fontColor=\"beige\"\r\n        tapeColor=\"green\"\r\n        rotationDeg={5}\r\n      />\r\n      &#x3C;ScrollInfiniteTape\r\n        text=\"Friday Night\"\r\n        fontColor=\"pink\"\r\n        tapeColor=\"black\"\r\n        isRight={false}\r\n        rotationDeg={-3}\r\n      />\r\n    &#x3C;/div>\r\n  )\r\n}\r\n\r\nexport default App\n</code></pre>\n<pre><code class=\"language-css\">.scroll-infinite-tape-page {\r\n  display: flex;\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 10vh;\r\n  height: 200vh;\r\n}\n</code></pre>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%EB%AA%A9%ED%91%9C\">1. 목표</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\">2. 전체 코드</a></p>\n<ul>\n<li><a href=\"#21-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BD%94%EB%93%9C\">2.1. 리액트 코드</a></li>\n<li><a href=\"#22-css-%EC%BD%94%EB%93%9C\">2.2. CSS 코드</a></li>\n<li><a href=\"#3-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\">3. 사용 예시</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"무한 텍스트 테이프 애니메이션 (React 컴포넌트)","createdAt":"2023-07-07","updatedAt":"2023-07-07","tags":["CSS","JavaScript","canvas","애니메이션","텍스트 테이프"],"description":"무한 텍스트 테이프 애니메이션을 리액트 컴포넌트로 만들어본다.","reference":"https://www.youtube.com/watch?v=z9hN9PXhe-A"}},"allMarkdownRemark":{"nodes":[{"id":"9a21ada5-e2a3-551f-9b0c-4cd666b4d697","parent":{"id":"732953d5-6571-5cf7-84f4-9ec9babbe63c","name":"Scroll_3D_Card","relativePath":"Animation/Scroll_3D_Card.md"},"frontmatter":{"title":"3D 카드 스크롤 애니메이션 (React 컴포넌트)","createdAt":"2023-07-05","updatedAt":"2023-07-05"},"excerpt":"1. 목표 \"YouTube: 자바스크립트로 11분만에 카드 스크롤 애니메이션 마스터하기, 맛있는 코딩\" 를 따라잡고, 이를 커스텀할 수 있는 리액트 컴포넌트로 만드는게 목표다. 참고로 절대 11분 만에 따라잡지 못했다. 영상을 보면 transform…"},{"id":"72bdeee6-7ff2-51cb-95a7-5ccbdebb4358","parent":{"id":"ea381281-9a8f-57e4-8e60-4ec3a571064c","name":"Height_Animation","relativePath":"Animation/Height_Animation.md"},"frontmatter":{"title":"CSS 높이(height) 0 to auto 애니메이션","createdAt":"2023-06-28","updatedAt":"2023-06-28"},"excerpt":"1. 사건의 발단 CSS를 하다보면 종종 개빡치는 일이 생기기 마련이다. 빡침의 이유도 가지 각색인데, 오늘 다루고자 하는 주제는 '이게 안된다고?'하는 느낌이다. 바로 CSS에서 height를 0에서 auto…"},{"id":"eccdb3e2-b3c7-5762-a5f0-d7eef6015a1d","parent":{"id":"56a6f939-fbf1-5544-88f6-115dc4db593a","name":"Infinite_Text_Tape","relativePath":"Animation/Infinite_Text_Tape.md"},"frontmatter":{"title":"무한 텍스트 테이프 애니메이션 (React 컴포넌트)","createdAt":"2023-07-07","updatedAt":"2023-07-07"},"excerpt":"1. 목표 \"YouTube: 자바스크립트로 5분만에 텍스트 스크롤 애니메이션 효과(text marquee effect) 마스터하기, 맛있는 코딩\" 를 따라잡고, 이를 커스텀할 수 있는 리액트 컴포넌트로 만드는게 목표다. 다음과 같은 Prop…"},{"id":"0a181681-645f-59c4-85d7-b43032614d12","parent":{"id":"889b5bf7-edaf-5602-8abd-0e36ef408093","name":"Raining_Canvas","relativePath":"Animation/Raining_Canvas.md"},"frontmatter":{"title":"비 내리는 캔버스 애니메이션 (React 컴포넌트)","createdAt":"2023-07-06","updatedAt":"2023-07-06"},"excerpt":"1. 목표 \"YouTube: 자바스크립트 Canvas로 비내리는 인터렉티브한 배경 만들기 튜토리얼, 맛있는 코딩\" 를 따라잡고, Prop을 받아 커스텀할 수 있는 리액트 컴포넌트로 만드는게 목표다. 다음과 같은 Prop…"},{"id":"46d64597-75eb-51b6-b87b-3ff2fa24e930","parent":{"id":"750e6ca4-e35a-5713-aa78-5b0585291ba2","name":"Typing_Animation","relativePath":"Animation/Typing_Animation.md"},"frontmatter":{"title":"타이핑 애니메이션 (React 컴포넌트)","createdAt":"2023-06-22","updatedAt":"2023-06-22"},"excerpt":"1. 목표 1.1. react-type-animation 구글링하면 react-type-animation…"}]}},"pageContext":{"pagePath":"posts/Animation/Infinite_Text_Tape.md","regex":"/^(?!.*README).*Animation.*$/","relativeDirectory":"Animation","id":"eccdb3e2-b3c7-5762-a5f0-d7eef6015a1d","parent":{"id":"56a6f939-fbf1-5544-88f6-115dc4db593a","name":"Infinite_Text_Tape","relativePath":"Animation/Infinite_Text_Tape.md"}}},"staticQueryHashes":["1484934524","2644037009","4059933791"],"slicesMap":{}}