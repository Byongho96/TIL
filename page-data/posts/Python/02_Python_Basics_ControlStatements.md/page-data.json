{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/Python/02_Python_Basics_ControlStatements.md/","result":{"data":{"markdownRemark":{"id":"57193696-e70d-5e70-8cc0-54a20140f054","html":"<ul>\n<li><a href=\"#1-conditional-statement\">1. Conditional Statement</a>\n<ul>\n<li><a href=\"#11-if-elif-else\">1.1. if... elif... else</a></li>\n<li><a href=\"#12-ternary-operators\">1.2. Ternary Operators</a></li>\n</ul>\n</li>\n<li><a href=\"#2-loop-statement\">2. Loop Statement</a>\n<ul>\n<li><a href=\"#21-while\">2.1. while</a></li>\n<li><a href=\"#22-for\">2.2. for</a>\n<ul>\n<li><a href=\"#221-comprehension-expression\">2.2.1. Comprehension Expression</a></li>\n</ul>\n</li>\n<li><a href=\"#23-loop-control-keyword\">2.3. Loop Control Keyword</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"1-conditional-statement\" style=\"position:relative;\"><a href=\"#1-conditional-statement\" aria-label=\"1 conditional statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Conditional Statement</h1>\n<h2 id=\"11-if-elif-else\" style=\"position:relative;\"><a href=\"#11-if-elif-else\" aria-label=\"11 if elif else permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. if... elif... else</h2>\n<pre><code class=\"language-python\">if conditional_statement:     # if\n  &#x3C;code_block>\nelif conditional_statement_2: # else if\n  &#x3C;code_block>\nelse:                           # else\n  &#x3C;code_block>\n</code></pre>\n<h2 id=\"12-ternary-operators\" style=\"position:relative;\"><a href=\"#12-ternary-operators\" aria-label=\"12 ternary operators permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. Ternary Operators</h2>\n<pre><code class=\"language-python\">true_value if condtional_statement else false_value\n</code></pre>\n<h1 id=\"2-loop-statement\" style=\"position:relative;\"><a href=\"#2-loop-statement\" aria-label=\"2 loop statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Loop Statement</h1>\n<h2 id=\"21-while\" style=\"position:relative;\"><a href=\"#21-while\" aria-label=\"21 while permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. while</h2>\n<pre><code class=\"language-python\">while conditional_statement:\n  &#x3C;code_block>\n</code></pre>\n<h2 id=\"22-for\" style=\"position:relative;\"><a href=\"#22-for\" aria-label=\"22 for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. for</h2>\n<pre><code class=\"language-python\">for temp_var in iterable_object:\n  &#x3C;code_block>\n</code></pre>\n<h3 id=\"221-comprehension-expression\" style=\"position:relative;\"><a href=\"#221-comprehension-expression\" aria-label=\"221 comprehension expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.1. Comprehension Expression</h3>\n<ul>\n<li>\n<p><strong>List Comprehension</strong></p>\n<pre><code class=\"language-python\"> [&#x3C;expression> for temp_var in iterable_object (if conditional_statement)]\n</code></pre>\n<pre><code class=\"language-python\"> list(&#x3C;expression> for temp_var in iterable_object (if conditional_statement))\n</code></pre>\n</li>\n<li>\n<p><strong>Dict comprehension</strong></p>\n<pre><code class=\"language-python\">  {&#x3C;expression1>: &#x3C;expression2> for temp_var in iterable_object (if conditional_statement)}\n</code></pre>\n<pre><code class=\"language-python\">  dict(expression1>: &#x3C;expression2> for temp_var in iterable_object (if conditional_statement))\n</code></pre>\n</li>\n<li>\n<p><strong>Set comprehension</strong></p>\n<pre><code class=\"language-python\">  {&#x3C;expression> for temp_var in iterable_object (if conditional_statement)}\n</code></pre>\n<pre><code class=\"language-python\">  set(&#x3C;expression> for temp_var in iterable_object (if conditional_statement))\n</code></pre>\n</li>\n</ul>\n<h2 id=\"23-loop-control-keyword\" style=\"position:relative;\"><a href=\"#23-loop-control-keyword\" aria-label=\"23 loop control keyword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3. Loop Control Keyword</h2>\n<ul>\n<li><strong>break</strong>\n<ul>\n<li>end a loop</li>\n</ul>\n</li>\n<li><strong>continue</strong>\n<ul>\n<li>back to the <strong>beginning</strong> of the loop with <strong>the next element</strong></li>\n</ul>\n</li>\n<li><strong>else:</strong>\n<ul>\n<li>It runs when the loop is completed without break</li>\n</ul>\n<pre><code class=\"language-python\">while:\n  ...\nelse:\n  &#x3C;code_block>\n</code></pre>\n</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-conditional-statement\">1. Conditional Statement</a></p>\n<ul>\n<li><a href=\"#11-if-elif-else\">1.1. if... elif... else</a></li>\n<li><a href=\"#12-ternary-operators\">1.2. Ternary Operators</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-loop-statement\">2. Loop Statement</a></p>\n<ul>\n<li>\n<p><a href=\"#21-while\">2.1. while</a></p>\n</li>\n<li>\n<p><a href=\"#22-for\">2.2. for</a></p>\n<ul>\n<li><a href=\"#221-comprehension-expression\">2.2.1. Comprehension Expression</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#23-loop-control-keyword\">2.3. Loop Control Keyword</a></p>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"02. Python Control Statements","createdAt":"2022-11-08","updatedAt":"2022-12-22","tags":null,"description":null,"reference":null}},"allMarkdownRemark":{"nodes":[{"id":"e2c3119a-8601-5ea7-811e-33c575a75349","parent":{"id":"7d8e0201-09d5-5ecb-9b21-2c830213fcd1","name":"01_Python_Basics_Datatypes_Operators","relativePath":"Python/01_Python_Basics_Datatypes_Operators.md"},"frontmatter":{"title":"01. Python Datatypes & Operators","createdAt":"2022-11-08","updatedAt":"2022-12-22"},"excerpt":"1. Code Style 2. Variables 2.1. Naming Rules 2.2. Type Hint (after python 3.5) 3. Non-Container Data Types 3.1. Boolean Type 3.2. Numeric…"},{"id":"57193696-e70d-5e70-8cc0-54a20140f054","parent":{"id":"fda15f08-e9ac-50a3-8ab8-cbe1aa8e2708","name":"02_Python_Basics_ControlStatements","relativePath":"Python/02_Python_Basics_ControlStatements.md"},"frontmatter":{"title":"02. Python Control Statements","createdAt":"2022-11-08","updatedAt":"2022-12-22"},"excerpt":"1. Conditional Statement 1.1. if... elif... else 1.2. Ternary Operators 2. Loop Statement 2.1. while 2.2. for 2.2.1. Comprehension…"},{"id":"cb3ec675-bf36-53b8-afa0-790627aecc7a","parent":{"id":"3e64aa97-aed7-55b3-8b86-578f320ca3f7","name":"03_Python_Function","relativePath":"Python/03_Python_Function.md"},"frontmatter":{"title":"03. Python Function","createdAt":"2022-11-08","updatedAt":"2022-12-22"},"excerpt":"1. Function 1.1. Type of Function 1.2. Parameters and Arguments 1.2.1. Default Parameter Value 1.2.2. Arbitrary Arguments, *args 1.2.…"},{"id":"410bc62a-d883-57cd-af4a-8e51b5972eee","parent":{"id":"8d0abb6f-e67a-5c0e-9119-d4079dc20391","name":"04_Python_OOP","relativePath":"Python/04_Python_OOP.md"},"frontmatter":{"title":"04. Python OOP","createdAt":"2022-11-08","updatedAt":"2022-12-24"},"excerpt":"1. Overview 1.1. Object Oriented Programming 1.2. Class 1.3. Object 1.4. Basic Grammer 1.5. Namespace 2. Attributes 2.1. Class Attributes…"},{"id":"8dfbd371-8ad6-53a9-a4c0-cf117b94de0e","parent":{"id":"43d8ebc0-3d2d-5ff1-b6ca-0e717981bf16","name":"05_Python_Error_Handling","relativePath":"Python/05_Python_Error_Handling.md"},"frontmatter":{"title":"05. Python Error Handling","createdAt":"2022-11-08","updatedAt":"2022-12-23"},"excerpt":"1. Terms 2. Types of error 2.1. Syntax Error 2.2 Exception 3. Error Handing 3.1. Try Except 1. Terms Bug problems occurring in SW Debugging…"},{"id":"60e896c8-227a-59fb-9377-16b7080a0e26","parent":{"id":"965acf82-47f4-50a0-b780-1b781d429deb","name":"Appendix_01_Python_Builtin_Functions","relativePath":"Python/Appendix_01_Python_Builtin_Functions.md"},"frontmatter":{"title":"Appendix 01. Python Built-in Functions","createdAt":"2022-11-08","updatedAt":"2022-12-24"},"excerpt":"1. Built-in functions 2. Built-in functions2 2.1. del 2.2. print 2.3. enumerate(iterable, start=0) 2.4. map(function, iterable) 2.5. filter…"},{"id":"7eec71bd-7b12-5642-b67c-cf8386e8d508","parent":{"id":"3e5deb03-c0bb-55fc-bac6-5d6845fc1b2a","name":"Appendix_02_Python_Modules","relativePath":"Python/Appendix_02_Python_Modules.md"},"frontmatter":{"title":"Appendix 02. Python Modules","createdAt":"2022-11-08","updatedAt":"2022-12-23"},"excerpt":"1. Terms 2. How to Import Modules 2.1. Install Package 2.2. Import 3. Modules 3.1. sys 3.2. re 3.3. collections 3.4. heapq 3.5. functools…"}]}},"pageContext":{"pagePath":"posts/Python/02_Python_Basics_ControlStatements.md","regex":"/^(?!.*README).*Python.*$/","relativeDirectory":"Python","id":"57193696-e70d-5e70-8cc0-54a20140f054","parent":{"id":"fda15f08-e9ac-50a3-8ab8-cbe1aa8e2708","name":"02_Python_Basics_ControlStatements","relativePath":"Python/02_Python_Basics_ControlStatements.md"}}},"staticQueryHashes":["3300660363","3571427910"],"slicesMap":{}}