{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/Python/03_Python_Function.md/","result":{"data":{"markdownRemark":{"id":"cb3ec675-bf36-53b8-afa0-790627aecc7a","html":"<ul>\n<li><a href=\"#1-function\">1. Function</a>\n<ul>\n<li><a href=\"#11-type-of-function\">1.1. Type of Function</a></li>\n<li><a href=\"#12-parameters-and-arguments\">1.2. Parameters and Arguments</a>\n<ul>\n<li><a href=\"#121-default-parameter-value\">1.2.1. Default Parameter Value</a></li>\n<li><a href=\"#122-arbitrary-arguments-args\">1.2.2. Arbitrary Arguments, *args</a></li>\n<li><a href=\"#123-keyword-arguments\">1.2.3. Keyword Arguments</a></li>\n<li><a href=\"#124-arbitrary-keyword-arguments-kwargs\">1.2.4. Arbitrary Keyword Arguments, **kwargs</a></li>\n<li><a href=\"#125-mutable--immutable-parameter\">1.2.5. Mutable &#x26; Immutable Parameter</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#2-scope\">2. Scope</a>\n<ul>\n<li><a href=\"#21-legb-resolution-rule\">2.1. LEGB Resolution Rule</a></li>\n<li><a href=\"#22-global-keyword\">2.2. global keyword</a></li>\n<li><a href=\"#24-nonlocal-keyword\">2.4. nonlocal keyword</a></li>\n</ul>\n</li>\n<li><a href=\"#3-first-class-function\">3. First-Class Function</a></li>\n</ul>\n<hr>\n<h1 id=\"1-function\" style=\"position:relative;\"><a href=\"#1-function\" aria-label=\"1 function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Function</h1>\n<p><strong>Code block that excutes the specific logic</strong></p>\n<h2 id=\"11-type-of-function\" style=\"position:relative;\"><a href=\"#11-type-of-function\" aria-label=\"11 type of function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. Type of Function</h2>\n<ul>\n<li><strong>Built-in function</strong>\n<ul>\n<li>functions bascially installed in Python</li>\n</ul>\n</li>\n<li><strong>External function</strong>\n<ul>\n<li>functions that can be used after being imported</li>\n</ul>\n</li>\n<li><strong>User-defined function</strong>\n<ul>\n<li>functions defined by the user</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12-parameters-and-arguments\" style=\"position:relative;\"><a href=\"#12-parameters-and-arguments\" aria-label=\"12 parameters and arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. Parameters and Arguments</h2>\n<p>A <strong>parameter</strong> is the variable listed inside the parentheses in the function definition.\nAn <strong>argument</strong> is the value that is sent to the function when it is called.</p>\n<h3 id=\"121-default-parameter-value\" style=\"position:relative;\"><a href=\"#121-default-parameter-value\" aria-label=\"121 default parameter value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.1. Default Parameter Value</h3>\n<p>If the function is called without argument, it uses the default value</p>\n<pre><code class=\"language-python\">def my_function(country = \"Norway\"):\n    print(\"I am from \" + country)\n\nmy_function(\"Sweden\")   # I am from Sweden\nmy_function()           # I am from Norway\n</code></pre>\n<h3 id=\"122-arbitrary-arguments-args\" style=\"position:relative;\"><a href=\"#122-arbitrary-arguments-args\" aria-label=\"122 arbitrary arguments args permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.2. Arbitrary Arguments, *args</h3>\n<p>The function will receive a tuple of arguments, and can access the items accordingly.</p>\n<pre><code class=\"language-python\">def my_function(*kids):\n    print(kids)\n    print(type(kids))\n    print('The youngest child is ' + kids[2])\n\nmy_function('Emil', 'Tobias', 'Linus')\n# ('Emil', 'Tobias', 'Linus')\n# &#x3C;class 'tuple'>\n# The youngest child is Linus\n</code></pre>\n<h3 id=\"123-keyword-arguments\" style=\"position:relative;\"><a href=\"#123-keyword-arguments\" aria-label=\"123 keyword arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.3. Keyword Arguments</h3>\n<p>If you send arguments with the key = value syntax, the order of the arguments does not matter.</p>\n<pre><code class=\"language-python\">def my_function(child3, child2, child1):\n    print(\"The youngest child is \" + child3)\n\nmy_function(child1 = \"Emil\", child2 = \"Tobias\", child3 = \"Linus\")\n# The youngest child is Linus\n</code></pre>\n<h3 id=\"124-arbitrary-keyword-arguments-kwargs\" style=\"position:relative;\"><a href=\"#124-arbitrary-keyword-arguments-kwargs\" aria-label=\"124 arbitrary keyword arguments kwargs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.4. Arbitrary Keyword Arguments, **kwargs</h3>\n<p>This way the function will receive a dictionary of arguments, and can access the items accordingly.</p>\n<pre><code class=\"language-python\">def my_function(**kid):\n    print(\"His last name is \" + kid[\"lname\"])\n\nmy_function(fname = \"Tobias\", lname = \"Refsnes\")\n# His last name is Refsnes\n</code></pre>\n<h3 id=\"125-mutable--immutable-parameter\" style=\"position:relative;\"><a href=\"#125-mutable--immutable-parameter\" aria-label=\"125 mutable  immutable parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.5. Mutable &#x26; Immutable Parameter</h3>\n<ul>\n<li><strong>Mutable Data</strong><br>\n<strong>passed by value parameter.</strong><br>\nThe operations in the function don't affect the original data.</li>\n<li><strong>Immutable Data</strong><br>\n<strong>passed by reference parameter.</strong><br>\nThe operations in the function <mark>affect the original data.</mark> To prevent this, the data should be deep copied</li>\n</ul>\n<h1 id=\"2-scope\" style=\"position:relative;\"><a href=\"#2-scope\" aria-label=\"2 scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Scope</h1>\n<h2 id=\"21-legb-resolution-rule\" style=\"position:relative;\"><a href=\"#21-legb-resolution-rule\" aria-label=\"21 legb resolution rule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. LEGB Resolution Rule</h2>\n<p><strong>The variables are searched in the following order.</strong></p>\n<ol>\n<li><strong>Local Scope</strong><br>\nInside of the cuurent function</li>\n<li><strong>Enclosed Scope</strong>\nInside of the outer function, outside of the current function.</li>\n<li><strong>Global Scope</strong>\nInside of the module(.py), outside of the enclosed scope.</li>\n<li><strong>Built-in Scope</strong>\nPython built-in varibles</li>\n</ol>\n<h2 id=\"22-global-keyword\" style=\"position:relative;\"><a href=\"#22-global-keyword\" aria-label=\"22 global keyword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. global keyword</h2>\n<p><strong>Drives the varibale from the nearest outer function</strong><br>\nIf there is no corresponding variable, a global variable of that name is created.</p>\n<pre><code class=\"language-python\">def myfunc():\n    global x\n    x = \"fantastic\"\n\nmyfunc()\n\nprint(\"Python is \" + x)     # Python is fantastic\n</code></pre>\n<h2 id=\"24-nonlocal-keyword\" style=\"position:relative;\"><a href=\"#24-nonlocal-keyword\" aria-label=\"24 nonlocal keyword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4. nonlocal keyword</h2>\n<p><strong>Drives the varibale from the nearest outer function</strong><br>\nThe variable must be defined in the enclosing function.</p>\n<pre><code class=\"language-python\">def myfunc1():\n    x = \"John\"\n    def myfunc2():\n        nonlocal x\n        x = \"hello\"\n    myfunc2()\n    return x\n\nprint(myfunc1())    # hello\n</code></pre>\n<h1 id=\"3-first-class-function\" style=\"position:relative;\"><a href=\"#3-first-class-function\" aria-label=\"3 first class function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. First-Class Function</h1>\n<ul>\n<li>\n<p><strong>Functions are objects</strong></p>\n<pre><code class=\"language-python\">def shout(text):\n    return text.upper()\n\nyell = shout\n\nprint (yell('Hello'))   # HELLO\n</code></pre>\n</li>\n<li>\n<p><strong>Functions can be passed as arguments to other functions</strong></p>\n<pre><code class=\"language-python\">def shout(text):\n    return text.upper()\n\ndef whisper(text):\n    return text.lower()\n\ndef greet(func):\n    # storing the function in a variable\n    greeting = func(\"\"\"Hi, I am created by a function\n                    passed as an argument.\"\"\")\n    print (greeting)\n\ngreet(shout)\n# HI, I AM CREATED BY A FUNCTION PASSED AS AN ARGUMENT.\ngreet(whisper)\n# hi, i am created by a function passed as an argument.\n</code></pre>\n</li>\n<li>\n<p><strong>Functions can return another function</strong></p>\n<pre><code class=\"language-python\">def create_adder(x):\n    def adder(y):\n        return x+y\n\n    return adder\n\nadd_15 = create_adder(15)\n\nprint (add_15(10))  # 25\n</code></pre>\n</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-function\">1. Function</a></p>\n<ul>\n<li>\n<p><a href=\"#11-type-of-function\">1.1. Type of Function</a></p>\n</li>\n<li>\n<p><a href=\"#12-parameters-and-arguments\">1.2. Parameters and Arguments</a></p>\n<ul>\n<li><a href=\"#121-default-parameter-value\">1.2.1. Default Parameter Value</a></li>\n<li><a href=\"#122-arbitrary-arguments-args\">1.2.2. Arbitrary Arguments, *args</a></li>\n<li><a href=\"#123-keyword-arguments\">1.2.3. Keyword Arguments</a></li>\n<li><a href=\"#124-arbitrary-keyword-arguments-kwargs\">1.2.4. Arbitrary Keyword Arguments, **kwargs</a></li>\n<li><a href=\"#125-mutable--immutable-parameter\">1.2.5. Mutable &#x26; Immutable Parameter</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-scope\">2. Scope</a></p>\n<ul>\n<li><a href=\"#21-legb-resolution-rule\">2.1. LEGB Resolution Rule</a></li>\n<li><a href=\"#22-global-keyword\">2.2. global keyword</a></li>\n<li><a href=\"#24-nonlocal-keyword\">2.4. nonlocal keyword</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-first-class-function\">3. First-Class Function</a></p>\n</li>\n</ul>","frontmatter":{"createdAt":"2022-11-08","isCompleted":true,"reference":null,"title":"03. Python Function","updatedAt":"2022-12-22"}},"allMarkdownRemark":{"nodes":[{"id":"e2c3119a-8601-5ea7-811e-33c575a75349","parent":{"id":"7d8e0201-09d5-5ecb-9b21-2c830213fcd1","name":"01_Python_Basics_Datatypes_Operators","relativePath":"Python/01_Python_Basics_Datatypes_Operators.md"},"frontmatter":{"title":"01. Python Datatypes & Operators","createdAt":"2022-11-08","updatedAt":"2022-12-22"},"excerpt":"1. Code Style 2. Variables 2.1. Naming Rules 2.2. Type Hint (after python 3.5) 3. Non-Container Data Types 3.1. Boolean Type 3.2. Numeric…"},{"id":"57193696-e70d-5e70-8cc0-54a20140f054","parent":{"id":"fda15f08-e9ac-50a3-8ab8-cbe1aa8e2708","name":"02_Python_Basics_ControlStatements","relativePath":"Python/02_Python_Basics_ControlStatements.md"},"frontmatter":{"title":"02. Python Control Statements","createdAt":"2022-11-08","updatedAt":"2022-12-22"},"excerpt":"1. Conditional Statement 1.1. if... elif... else 1.2. Ternary Operators 2. Loop Statement 2.1. while 2.2. for 2.2.1. Comprehension…"},{"id":"cb3ec675-bf36-53b8-afa0-790627aecc7a","parent":{"id":"3e64aa97-aed7-55b3-8b86-578f320ca3f7","name":"03_Python_Function","relativePath":"Python/03_Python_Function.md"},"frontmatter":{"title":"03. Python Function","createdAt":"2022-11-08","updatedAt":"2022-12-22"},"excerpt":"1. Function 1.1. Type of Function 1.2. Parameters and Arguments 1.2.1. Default Parameter Value 1.2.2. Arbitrary Arguments, *args 1.2.…"},{"id":"410bc62a-d883-57cd-af4a-8e51b5972eee","parent":{"id":"8d0abb6f-e67a-5c0e-9119-d4079dc20391","name":"04_Python_OOP","relativePath":"Python/04_Python_OOP.md"},"frontmatter":{"title":"04. Python OOP","createdAt":"2022-11-08","updatedAt":"2022-12-24"},"excerpt":"1. Overview 1.1. Object Oriented Programming 1.2. Class 1.3. Object 1.4. Basic Grammer 1.5. Namespace 2. Attributes 2.1. Class Attributes…"},{"id":"8dfbd371-8ad6-53a9-a4c0-cf117b94de0e","parent":{"id":"43d8ebc0-3d2d-5ff1-b6ca-0e717981bf16","name":"05_Python_Error_Handling","relativePath":"Python/05_Python_Error_Handling.md"},"frontmatter":{"title":"05. Python Error Handling","createdAt":"2022-11-08","updatedAt":"2022-12-23"},"excerpt":"1. Terms 2. Types of error 2.1. Syntax Error 2.2 Exception 3. Error Handing 3.1. Try Except 1. Terms Bug problems occurring in SW Debugging…"},{"id":"60e896c8-227a-59fb-9377-16b7080a0e26","parent":{"id":"965acf82-47f4-50a0-b780-1b781d429deb","name":"Appendix_01_Python_Builtin_Functions","relativePath":"Python/Appendix_01_Python_Builtin_Functions.md"},"frontmatter":{"title":"Appendix 01. Python Built-in Functions","createdAt":"2022-11-08","updatedAt":"2022-12-24"},"excerpt":"1. Built-in functions 2. Built-in functions2 2.1. del 2.2. print 2.3. enumerate(iterable, start=0) 2.4. map(function, iterable) 2.5. filter…"},{"id":"7eec71bd-7b12-5642-b67c-cf8386e8d508","parent":{"id":"3e5deb03-c0bb-55fc-bac6-5d6845fc1b2a","name":"Appendix_02_Python_Modules","relativePath":"Python/Appendix_02_Python_Modules.md"},"frontmatter":{"title":"Appendix 02. Python Modules","createdAt":"2022-11-08","updatedAt":"2022-12-23"},"excerpt":"1. Terms 2. How to Import Modules 2.1. Install Package 2.2. Import 3. Modules 3.1. sys 3.2. re 3.3. collections 3.4. heapq 3.5. functools…"}]}},"pageContext":{"pagePath":"posts/Python/03_Python_Function.md","regex":"/^(?!.*README).*Python.*$/","relativeDirectory":"Python","id":"cb3ec675-bf36-53b8-afa0-790627aecc7a","parent":{"id":"3e64aa97-aed7-55b3-8b86-578f320ca3f7","name":"03_Python_Function","relativePath":"Python/03_Python_Function.md"}}},"staticQueryHashes":["3300660363","3571427910"],"slicesMap":{}}