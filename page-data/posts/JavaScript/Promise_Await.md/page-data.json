{"componentChunkName":"component---src-templates-post-index-tsx","path":"/posts/JavaScript/Promise_Await.md/","result":{"data":{"markdownRemark":{"id":"74ff40b1-0c80-50ce-82b9-769ccde21119","html":"<ul>\n<li><a href=\"#1-promise\">1. Promise</a>\n<ul>\n<li><a href=\"#11-promiseexecutor\">1.1. Promise(executor)</a></li>\n</ul>\n</li>\n<li><a href=\"#2-aysnc--await\">2. Aysnc &#x26; Await</a>\n<ul>\n<li><a href=\"#21-async\">2.1. async</a></li>\n<li><a href=\"#22-await\">2.2. await</a></li>\n<li><a href=\"#23-try--catch\">2.3. try / catch</a></li>\n</ul>\n</li>\n<li><a href=\"#3-example\">3. Example</a>\n<ul>\n<li><a href=\"#31-chaining-%EC%B2%98%EB%A6%AC-hard-code\">3.1. Chaining 처리, Hard Code</a>\n<ul>\n<li><a href=\"#311-promise\">3.1.1. Promise</a></li>\n<li><a href=\"#312-await\">3.1.2. await</a></li>\n</ul>\n</li>\n<li><a href=\"#32-chaining-%EC%B2%98%EB%A6%AC-soft-code\">3.2. Chaining 처리, Soft Code</a>\n<ul>\n<li><a href=\"#321promise\">3.2.1.Promise</a></li>\n<li><a href=\"#322-await\">3.2.2. await</a></li>\n</ul>\n</li>\n<li><a href=\"#33-all-%EC%B2%98%EB%A6%AC-%EB%B9%84-%EC%88%9C%EC%B0%A8-%EA%B2%B0%EA%B3%BC\">3.3. All 처리, 비 순차 결과</a>\n<ul>\n<li><a href=\"#331-promise\">3.3.1. Promise</a></li>\n<li><a href=\"#332-await\">3.3.2. await</a></li>\n</ul>\n</li>\n<li><a href=\"#34-all-%EC%B2%98%EB%A6%AC-%EC%88%9C%EC%B0%A8-%EA%B2%B0%EA%B3%BC\">3.4. All 처리, 순차 결과</a>\n<ul>\n<li><a href=\"#341-promise\">3.4.1. Promise</a></li>\n<li><a href=\"#342-await\">3.4.2. await</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"1-promise\" style=\"position:relative;\"><a href=\"#1-promise\" aria-label=\"1 promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Promise</h1>\n<h2 id=\"11-promiseexecutor\" style=\"position:relative;\"><a href=\"#11-promiseexecutor\" aria-label=\"11 promiseexecutor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. Promise(executor)</h2>\n<p>executor는 resolve, reject 함수를 인수를 전달할 실행 함수이다.\r\nresolve를 호출해 프로미스를 이행하거나, 오류가 발생한 경우 reject를 호출해 거부할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myFirstPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// do something asynchronous which eventually calls either:</span>\r\n  <span class=\"token comment\">//</span>\r\n  <span class=\"token comment\">//   resolve(someValue)        // fulfilled</span>\r\n  <span class=\"token comment\">// or</span>\r\n  <span class=\"token comment\">//   reject(\"failure reason\")  // rejected</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"2-aysnc--await\" style=\"position:relative;\"><a href=\"#2-aysnc--await\" aria-label=\"2 aysnc  await permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Aysnc &#x26; Await</h1>\n<h2 id=\"21-async\" style=\"position:relative;\"><a href=\"#21-async\" aria-label=\"21 async permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. async</h2>\n<p>async function 선언은 Promise 객체를 반환하는 비동기 함수를 선언한다. 명시적으로 Promise 객체를 반환해줄 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\r\n\r\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<h2 id=\"22-await\" style=\"position:relative;\"><a href=\"#22-await\" aria-label=\"22 await permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. await</h2>\n<p>await 키워드는 async 키워드가 붙어있는 함수 내부에서만 사용할 수 있으며, 비동기 함수가 리턴하는 Promise로 부터 결과값을 추출한다.</p>\n<p>async 코드 내의 await함수가 선언된 경우, 해당 함수가 끝날 때까지 다음 코드가 실행되지 않는다. <strong>즉 마치 동기적 코드블록처럼 작용한다.</strong></p>\n<h2 id=\"23-try--catch\" style=\"position:relative;\"><a href=\"#23-try--catch\" aria-label=\"23 try  catch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3. try / catch</h2>\n<p>async와 await 키워드를 사용하는 경우, 보통의 코드처럼 try/catch 구문을 사용하여 예외처리할 수 있다.</p>\n<h1 id=\"3-example\" style=\"position:relative;\"><a href=\"#3-example\" aria-label=\"3 example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Example</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">word<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><strong>setTimeout(functionRef, delay, params*)</strong>\n<ul>\n<li>delay 시간 이후에, functionRef를 실행한다.</li>\n<li>params는 functionRef의 인자값들이다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"31-chaining-처리-hard-code\" style=\"position:relative;\"><a href=\"#31-chaining-%EC%B2%98%EB%A6%AC-hard-code\" aria-label=\"31 chaining 처리 hard code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. Chaining 처리, Hard Code</h2>\n<p>이전 비동기 작업을 완료한 이후에 순차적으로 다음 작업을 처리한다.</p>\n<h3 id=\"311-promise\" style=\"position:relative;\"><a href=\"#311-promise\" aria-label=\"311 promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.1. Promise</h3>\n<p>이전 작업이 완료된 이후에, 반환된 객체를 받아서 내부 함수를 순차 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">490</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n\r\n      <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">470</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">460</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드는 아래와 같이 변환 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">490</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">470</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">460</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"312-await\" style=\"position:relative;\"><a href=\"#312-await\" aria-label=\"312 await permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.2. await</h3>\n<p>await 함수가 dealy_word로부터 Promise 객체를 받아 실행되며, async 내부의 코드들은 await 함수를 비동기적으로 기다린다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> resolve_0 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve_0<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> resolve_1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">490</span><span class=\"token punctuation\">)</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve_1<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> resolve_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">480</span><span class=\"token punctuation\">)</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve_2<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> resolve_3 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">470</span><span class=\"token punctuation\">)</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve_3<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> resolve_4 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span><span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">460</span><span class=\"token punctuation\">)</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve_4<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"32-chaining-처리-soft-code\" style=\"position:relative;\"><a href=\"#32-chaining-%EC%B2%98%EB%A6%AC-soft-code\" aria-label=\"32 chaining 처리 soft code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. Chaining 처리, Soft Code</h2>\n<h3 id=\"321promise\" style=\"position:relative;\"><a href=\"#321promise\" aria-label=\"321promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.1.Promise</h3>\n<ul>\n<li><strong>arr.reduce(callback[, initialValue])</strong>\n<ul>\n<li>callback(accumulator, currentValue)\n<ul>\n<li>accumulator: 누적값</li>\n<li>currentValue: 현재 계산값</li>\n</ul>\n</li>\n<li>initialValue\n<ul>\n<li>초깃값, 없을 경우 배열의 첫번째 값</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>array의 reduce 메소드를 활용하여 soft한 코드를 작성하였다. <code class=\"language-text\">Promise.resolve()</code>를 사용하여 초깃값으로 Promise 객체를 지정해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">490</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">470</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">460</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\narray<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> prev<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\r\n    <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promise</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"322-await\" style=\"position:relative;\"><a href=\"#322-await\" aria-label=\"322 await permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.2. await</h3>\n<p>반복문을 이용하여 await함수를 반복해서 실행하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">490</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">470</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">460</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> resolve <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span>\r\n\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"33-all-처리-비-순차-결과\" style=\"position:relative;\"><a href=\"#33-all-%EC%B2%98%EB%A6%AC-%EB%B9%84-%EC%88%9C%EC%B0%A8-%EA%B2%B0%EA%B3%BC\" aria-label=\"33 all 처리 비 순차 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3. All 처리, 비 순차 결과</h2>\n<h3 id=\"331-promise\" style=\"position:relative;\"><a href=\"#331-promise\" aria-label=\"331 promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3.1. Promise</h3>\n<p>forEach문으로 5개의 비동기함수가 실행되었다. 따라서 5개의 비동기함수가 거의 동시에 시작이 되었으므로, 결과값은 dealy시간에 따라 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">490</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">470</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">460</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\">// Promise 객체로 비동기 작업을 처리했기 때문에, async 키워드는 생략 가능하다.</span>\r\narray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"332-await\" style=\"position:relative;\"><a href=\"#332-await\" aria-label=\"332 await permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3.2. await</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">490</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">470</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">460</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\narray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> resolve <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span>\r\n\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"34-all-처리-순차-결과\" style=\"position:relative;\"><a href=\"#34-all-%EC%B2%98%EB%A6%AC-%EC%88%9C%EC%B0%A8-%EA%B2%B0%EA%B3%BC\" aria-label=\"34 all 처리 순차 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4. All 처리, 순차 결과</h2>\n<p><strong>Promise.all()</strong>\r\n여러개의 비동기함수를 병렬적으로 실행하고, <strong>실행순서</strong>따라 결과 Promise객체를 반환한다.</p>\n<h3 id=\"341-promise\" style=\"position:relative;\"><a href=\"#341-promise\" aria-label=\"341 promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4.1. Promise</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">490</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">470</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">460</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">const</span> promise_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n\r\narray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span>\r\n\r\n  promise_list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n\r\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>promise_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">values</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  values<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"342-await\" style=\"position:relative;\"><a href=\"#342-await\" aria-label=\"342 await permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4.2. await</h3>\n<p>Promise객체를 병렬적으로 실행시켜서, 진행중인(pending) Promise객체를 배열에 집어넣는다.</p>\n<p>그리고 await함수를 통해 값을 할당하여 출력하면, 가장 오랜 시간이 걸리는 Promise객체의 delay시간과 유사한 지연시간을 가진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SAMSUNG'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'SW'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">490</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'ACADEMY'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'FOR'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">470</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUTH'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">460</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> async_fun_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>item <span class=\"token keyword\">of</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> async_fun <span class=\"token operator\">=</span> <span class=\"token function\">delay_word</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span>\r\n\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>async_fun<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Promise { &lt;pending> }</span>\r\n\r\n    async_fun_list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>async_fun<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>async_fun <span class=\"token keyword\">of</span> async_fun_list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> resolve <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> async_fun\r\n\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-promise\">1. Promise</a></p>\n<ul>\n<li><a href=\"#11-promiseexecutor\">1.1. Promise(executor)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-aysnc--await\">2. Aysnc &#x26; Await</a></p>\n<ul>\n<li><a href=\"#21-async\">2.1. async</a></li>\n<li><a href=\"#22-await\">2.2. await</a></li>\n<li><a href=\"#23-try--catch\">2.3. try / catch</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-example\">3. Example</a></p>\n<ul>\n<li>\n<p><a href=\"#31-chaining-%EC%B2%98%EB%A6%AC-hard-code\">3.1. Chaining 처리, Hard Code</a></p>\n<ul>\n<li><a href=\"#311-promise\">3.1.1. Promise</a></li>\n<li><a href=\"#312-await\">3.1.2. await</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#32-chaining-%EC%B2%98%EB%A6%AC-soft-code\">3.2. Chaining 처리, Soft Code</a></p>\n<ul>\n<li><a href=\"#321promise\">3.2.1.Promise</a></li>\n<li><a href=\"#322-await\">3.2.2. await</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#33-all-%EC%B2%98%EB%A6%AC-%EB%B9%84-%EC%88%9C%EC%B0%A8-%EA%B2%B0%EA%B3%BC\">3.3. All 처리, 비 순차 결과</a></p>\n<ul>\n<li><a href=\"#331-promise\">3.3.1. Promise</a></li>\n<li><a href=\"#332-await\">3.3.2. await</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#34-all-%EC%B2%98%EB%A6%AC-%EC%88%9C%EC%B0%A8-%EA%B2%B0%EA%B3%BC\">3.4. All 처리, 순차 결과</a></p>\n<ul>\n<li><a href=\"#341-promise\">3.4.1. Promise</a></li>\n<li><a href=\"#342-await\">3.4.2. await</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"createdAt":"2023-01-02","isCompleted":true,"reference":null,"title":"Promise와 await를 활용하 JS 8가지 비동기 처리","updatedAt":"2023-01-02"}}},"pageContext":{"pagePath":"posts/JavaScript/Promise_Await.md","id":"74ff40b1-0c80-50ce-82b9-769ccde21119","parent":{"id":"c2769af2-05f1-55fd-9f51-239823bb7b4f","name":"Promise_Await","relativePath":"JavaScript/Promise_Await.md"}}},"staticQueryHashes":["3300660363","3571427910","82772122"],"slicesMap":{}}