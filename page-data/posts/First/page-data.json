{"componentChunkName":"component---src-templates-post-group-tsx","path":"/posts/First/","result":{"data":{"allMarkdownRemark":{"nodes":[{"id":"4c60d441-29cc-5f21-9145-7e084ed0bd4b","parent":{"id":"72ea03da-1e21-5f98-909a-87d55576caa1","name":"BFS_DFS_backtracking","relativePath":"Algorithm/First/BFS_DFS_backtracking.md"},"frontmatter":{"title":""},"excerpt":"모든 경로 탐색(가능 여부): DFS, BFS 경로의 수: DFS, (BFS) 최단거리 탐색: BFS, (DFS) 출발이 여러개: BFS BFS와 DFS 모두 반복의 경우, while과 for사이에서 visit(v) DFS…"},{"id":"05a6e0e7-adb0-5387-a88e-ebaec262b7eb","parent":{"id":"91e40e84-52a9-5dab-a8bb-2844cb1f33cf","name":"BruteForce_Greedy","relativePath":"Algorithm/First/BruteForce_Greedy.md"},"frontmatter":{"title":""},"excerpt":"0. Intro 알고리즘은 크게 2가지로 분류할 수 있다. 모든 경우의 수를 고려하여 최적해를 찾아내는 완전탐색(Brute-Force)기반 알고리즘, 그리고 지역적인 최적값 선택의 연속으로 전역적인 최적해를 찾아내는 탐욕(Greedy…"},{"id":"1426f5ab-d830-5c34-a917-54733d927dcc","parent":{"id":"d10f45b4-a7e5-5f2a-b679-b5158fcfa495","name":"Divide_Conquer","relativePath":"Algorithm/First/Divide_Conquer.md"},"frontmatter":{"title":""},"excerpt":"1. Merge Sort 2. Quick Sort Hoare-Partition Lomuto partition 3. Binary Search"},{"id":"548c8a15-1ef3-5374-8d87-aca626ec4ed6","parent":{"id":"3dec582b-52d7-5d8c-9048-61785ae8f22c","name":"List","relativePath":"Algorithm/First/List.md"},"frontmatter":{"title":""},"excerpt":"1. Algorithm The procedure to solve the problem Pseudo code or Flow chart Good Algorithm accuracy time(the amount of operations) memory…"},{"id":"a5b23b3e-57d7-5256-aad0-1959aa72a9f7","parent":{"id":"32062b56-a944-51a7-bc23-f518f65563f6","name":"Tree","relativePath":"Algorithm/First/Tree.md"},"frontmatter":{"title":""},"excerpt":"Tree 1. Definition 1-1. Characteristic Non-linear Data Structure one data -> N data Hierarchical Structure 1-2. terms node elements of the…"},{"id":"f2a7b08b-7678-531c-8d95-91c659a104ac","parent":{"id":"edd944a5-b4ce-5d7f-a1e0-0f22b11c80ab","name":"String","relativePath":"Algorithm/First/String.md"},"frontmatter":{"title":""},"excerpt":"1. String Even strings are stored as 0 abd 1 .jpg/.mp4/.doc ...: all the file has its own encoding rule (binary data) <-> (desirable data)…"},{"id":"fc8ff0c5-29ea-5eb5-bf6c-6e6581d2b490","parent":{"id":"9b9317ef-8c34-5ddf-937b-58385d4ddd1f","name":"Stack","relativePath":"Algorithm/First/Stack.md"},"frontmatter":{"title":""},"excerpt":"Stack 1. Property linear data structure one data -> another data LIFO(Last-In-First-Out) 2. Operators push(obj) top += 1 top: pointer for…"},{"id":"0ef6d409-eed6-57e9-9233-7ea61e94b5b3","parent":{"id":"eca6d33b-f9a8-5fb7-8cbb-bef1fb1654bd","name":"Backtracking","relativePath":"Algorithm/First/Backtracking.md"},"frontmatter":{"title":""},"excerpt":"Backtracking : similar to ==DFS but reduce the number of cases== with appropriate condtion(pruning) Recursive function: when the depth is…"}]}},"pageContext":{"pagePath":"posts/First","regex":"/^(?!.*README).*Algorithm\\/First.*$/","id":"804eb36d-ec07-54b5-8247-b7c21419d69b","name":"First","relativeDirectory":"Algorithm","relativePath":"Algorithm/First"}},"staticQueryHashes":["1274812890","3935499650","82772122"],"slicesMap":{}}