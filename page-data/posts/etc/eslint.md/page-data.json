{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/etc/eslint.md/","result":{"data":{"markdownRemark":{"id":"da3df907-41bd-5d41-8eb9-ebd49f1307f8","html":"<h1>ESLint와 Prettier</h1>\n<h2>Index</h2>\n<ul>\n<li><a href=\"#eslint%EC%99%80-prettier\">ESLint와 Prettier</a>\n<ul>\n<li><a href=\"#index\">Index</a></li>\n</ul>\n</li>\n<li><a href=\"#1%EA%B8%B0%EB%8A%A5\">1.기능</a></li>\n<li><a href=\"#2-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95\">2. 설치 및 설정</a>\n<ul>\n<li><a href=\"#21-eslint\">2.1. ESLint</a></li>\n<li><a href=\"#22-prettier\">2.2. Prettier</a></li>\n<li><a href=\"#23-eslint%EC%99%80-prettier\">2.3. ESlint와 Prettier</a></li>\n</ul>\n</li>\n<li><a href=\"#3-husky\">3. Husky</a></li>\n<li><a href=\"#4-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">4. 참고자료</a></li>\n</ul>\n<hr>\n<h1>1.기능</h1>\n<ul>\n<li>\n<p><strong>ESLint</strong></p>\n<ul>\n<li><strong>코드 포맷팅</strong><br>\n코드의 가독성을 높인다. prettier와 겹치는 기능</li>\n<li><strong>코드 품질</strong><br>\n코도의 일부 문법 상을 오류를 파악하고 이를 수정한다.</li>\n</ul>\n</li>\n<li>\n<p><strong>Prettier</strong></p>\n<ul>\n<li><strong>코드 포맷팅</strong><br>\n코드의 가독성을 높인다</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1>2. 설치 및 설정</h1>\n<h2>2.1. ESLint</h2>\n<ol>\n<li>\n<p>VScode에 ESLint 익스텐션 설치</p>\n</li>\n<li>\n<p>VScode 설정에서 Eslint: Auto Fix On Save 체크</p>\n</li>\n<li>\n<p>ESlint 설정 파일 루트 경로에 생성 <a href=\"https://eslint.org/docs/latest/rules/\">ESLint Rule</a></p>\n<pre><code class=\"language-js\">// .eslintrc.js\r\nmodule.exports = {\r\n  rules: {\r\n    \"no-unexpected-multiline\":'error'\r\n    \"no-extra-\":'error'\r\n  }\r\n}\n</code></pre>\n</li>\n</ol>\n<h2>2.2. Prettier</h2>\n<ol>\n<li>\n<p>VScode에 Prettier 익스텐션 설치</p>\n</li>\n<li>\n<p>VScode 설정에서 Editor: Format On Save 체크</p>\n</li>\n<li>\n<p>Prettier 설정파일 루트 경로에 생성 <a href=\"https://prettier.io/docs/en/configuration.html\">Prettier Configuration</a></p>\n<pre><code class=\"language-js\">{\r\n  \"trailingComma\": \"all\",\r\n  \"tabWidth\": 2,\r\n  \"semi\": true,\r\n  \"singleQuote\": true\r\n}\n</code></pre>\n</li>\n</ol>\n<h2>2.3. ESlint와 Prettier</h2>\n<p>ESLint에서 Prettier와 충돌하는 규칙을 비활성화함으로써 Prettier의 규칙을 따름</p>\n<ol>\n<li><code>yarn add eslint-config-prettier</code></li>\n<li>ESLint 설정파일에 extends에 prettier 추가</li>\n</ol>\n<pre><code class=\"language-js\"> \"eslintConfig\": {\r\n   \"extends\": [\r\n     \"react-app\",\r\n     \"prettier\"\r\n   ]\r\n },\n</code></pre>\n<ol start=\"3\">\n<li>ESLint 개별적으로 Rule 설정 가능</li>\n</ol>\n<pre><code class=\"language-js\">  \"eslintConfig\": {\r\n    ...\r\n    \"rules\": {\r\n      \"react/jsx-filename-extension\": 0,\r\n      \"no-unused-vars\": 1\r\n    }\r\n  },\n</code></pre>\n<ol start=\"4\">\n<li>파일 상단에 주석을 달아서 특정 Rule 비활성화 가능\n<pre><code class=\"language-js\">// eslint-disable-next-line no-unsued-vars\n</code></pre>\n</li>\n</ol>\n<hr>\n<h1>3. Husky</h1>\n<p>깃 명령어가 실행되기 전에, 사용자가 지정한 특정 명령어가 실행되도록 설정할 수 있는 라이브러리. 만일 사용자가 지정한 명령어가 실패할 경우 이후 명령어가 실행되지 않는다.</p>\n<ol>\n<li><code>npm install husky</code></li>\n<li><code>npm install lint-staged</code><br>\n커밋 시 staged된 파일(변경된 파일)에 대해서만 ESLint 검사를 실행</li>\n<li>package.json에 husky 등록\n<pre><code class=\"language-js\">// pacakge.json\r\n'husky': {\r\n  'hooks': {\r\n    // 'pre-commit': 'echo \\'커밋 전에 이 메시지를 출력\\''\r\n    'pre-commit': 'lint-staged'\r\n  }\r\n}\r\n'lint-staged': {\r\n  '*.js': 'npm run lint'\r\n}\n</code></pre>\n</li>\n</ol>\n<hr>\n<h1>4. 참고자료</h1>\n<ul>\n<li><a href=\"https://react.vlpt.us/basic/27-useful-tools.html\">ESlint &#x26; prettier 설치 가이드</a></li>\n<li><a href=\"https://velog.io/@yrnana/prettier%EC%99%80-eslint%EB%A5%BC-%EA%B5%AC%EB%B6%84%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EC%9E%90\">ESlint &#x26; prettier 연동 참고자료</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Y3kjHM7d3Zo\">ESlint수동 설치 및 셋팅 Youtube</a></li>\n</ul>"}},"pageContext":{"pagePath":"posts/etc/eslint.md","id":"da3df907-41bd-5d41-8eb9-ebd49f1307f8","parent":{"id":"9c2664a2-d910-5cd4-b1be-cc17985b6d0b","name":"eslint","relativePath":"etc/eslint.md"}}},"staticQueryHashes":["1274812890","3935499650","82772122"],"slicesMap":{}}