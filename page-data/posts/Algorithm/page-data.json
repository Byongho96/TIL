{"componentChunkName":"component---src-templates-post-group-index-tsx","path":"/posts/Algorithm/","result":{"data":{"allMarkdownRemark":{"nodes":[{"id":"5730a298-a25c-588f-a6ef-5e10feb229b6","parent":{"id":"fcdc817f-f629-57c5-863f-078018f1d9e1","name":"DFS","relativePath":"Algorithm/DFS.md"},"frontmatter":{"title":"깊이 우선 탐색(Depth-First Search) 알고리즘","createdAt":"2023-03-14","updatedAt":"2023-04-17"},"excerpt":"1. 개요 상태공간이나 그래프를 출발점에서 시작하여 모든 리프노드까지 순서대로 탐색하는 완전탐색 기반의 알고리즘이다. 1.…"},{"id":"c9f173ac-3763-5e1f-903d-f3045c999d05","parent":{"id":"94b5e585-62f8-5fff-a8d4-98f30a84f8c6","name":"BFS","relativePath":"Algorithm/BFS.md"},"frontmatter":{"title":"너비 우선 탐색(Breadth-First Search) 알고리즘","createdAt":"2023-03-05","updatedAt":"2023-04-17"},"excerpt":"1. 개요 상태공간이나 그래프를 출발점으로부터 가까운 순으로 탐색해가는 완전탐색 기반의 알고리즘이다. 1.…"},{"id":"fcf42254-8ace-55b3-8e66-f9962c385268","parent":{"id":"1b85a26c-6412-557d-ab4c-d00a858a0b7c","name":"Dijkstra","relativePath":"Algorithm/Dijkstra.md"},"frontmatter":{"title":"다익스트라(Dijkstra) 알고리즘","createdAt":"2023-02-27","updatedAt":"2023-04-17"},"excerpt":"1. 개요 음의 가중치가 없는 그래프의 한 노드에서 다른 모드 노드까지의 최단거리를 각각 구하는 알고리즘. 대표적으로 사용되는 그리디 알고리즘이다.…"},{"id":"2d7e5c08-666d-53a3-8b7c-2e2d55bd48df","parent":{"id":"6ef9ac1a-1a41-53b9-b3e3-8411da4f71cd","name":"DP","relativePath":"Algorithm/DP.md"},"frontmatter":{"title":"동적 계획법(Dynamic Programming) 알고리즘","createdAt":"2023-03-27","updatedAt":"2023-04-03"},"excerpt":"…"},{"id":"e86fb310-e394-5424-873b-d2afa994cdb8","parent":{"id":"a2740d81-9401-5f82-9c13-188c6ce2daf2","name":"Backtracking","relativePath":"Algorithm/Backtracking.md"},"frontmatter":{"title":"백트래킹(Backtracking) 알고리즘","createdAt":"2022-08-23","updatedAt":"2023-04-17"},"excerpt":"1. 개요 상태공간이나 그래프의 노드를 모두 탐색하는 완전탐색 기반의 알고리즘이다. 다만, 가지 치기를 통해 탐색할 필요성이 없는 노드(상태)들을 탐색 대상에서 제외함으로써 효율을 높인다.…"},{"id":"2d8f000a-09e8-5d77-8cb7-ef17613eb250","parent":{"id":"c7144735-eeb2-5f34-aa77-fe40a9505ec5","name":"BinarySearch","relativePath":"Algorithm/BinarySearch.md"},"frontmatter":{"title":"이진탐색(Binary Search) 알고리즘","createdAt":"2023-04-11","updatedAt":"2023-04-11"},"excerpt":"1. 개요 정렬된 데이터에서 검색 범위를 줄여 나가면서 목적 값을 찾는 알고리즘이다. 데이터가 정렬되어 있을 경우, 데이터를 크기가 같은 두 부분으로 나누고 유효한 데이터집합을 선 1.…"},{"id":"8c82aef1-764e-58d7-9fd2-f112c22a7738","parent":{"id":"4d88a373-6547-5a1d-bd1a-f3bb4172bf10","name":"Sorting","relativePath":"Algorithm/Sorting.md"},"frontmatter":{"title":"정렬(Sorting) 알고리즘 정리","createdAt":"2023-05-02","updatedAt":"2023-05-03"},"excerpt":"면접에서 탈탈 털린 후 작성한 정렬 관련 알고리즘을 총정리 1. Bubble Sort (거품 정렬) 1.1. 동작 과정 1.2. 복잡도 1.3. Python 구현 2. Selection Sort (선택 정렬) 2.1. 동작 과정 2.2. 복잡도 2.…"},{"id":"7c9622db-f251-58ab-82a5-e205a525f4de","parent":{"id":"bff8b024-ecde-52e7-9534-055482414611","name":"MST","relativePath":"Algorithm/MST.md"},"frontmatter":{"title":"최소 신장 트리(Minimum Spaaning Tree) 알고리즘","createdAt":"2023-04-17","updatedAt":"2023-04-17"},"excerpt":"1. 개요 신장 트리(Spanning Tree)는 그래프 내의 모든 노드를 포함하는 트리를 의미하며, **최소 신장 트리(Minimum Spanning Tree)**란 간선의 가중치 합이 최소가 되는 신장 트리를 말한다. 최소 신장 트리는 Greedy…"}]}},"pageContext":{"pagePath":"posts/Algorithm","regex":"/^(?!.*README).*Algorithm.*$/","id":"feda1bcc-7f05-5ee0-a69f-1851acb88d4c","name":"Algorithm","relativePath":"Algorithm"}},"staticQueryHashes":["3300660363","3571427910"],"slicesMap":{}}