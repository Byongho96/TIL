{"componentChunkName":"component---src-templates-post-group-index-tsx","path":"/posts/Algorithm/","result":{"data":{"allMarkdownRemark":{"nodes":[{"id":"5f8c4765-4a17-5c02-85bf-73d06c279266","excerpt":"1. 핵심 요약 P-NP…","parent":{"id":"e186dbe6-0c4f-5982-89de-a310389ac1f9","name":"P_NP","relativePath":"CS/Algorithm/P_NP.md"},"frontmatter":{"title":"\"P, NP, NP 난해, NP 완전\" 이해하기","createdAt":"2023-09-04","updatedAt":"2023-09-04","tags":["CS","P","NP","NP 난해","NP 완전"]},"fields":{"slug":"/posts/CS/Algorithm/P_NP/"}},{"id":"47f2e077-42da-5fa8-a10c-8f6d807ef529","excerpt":"면접에서 탈탈 털린 후 작성한 정렬 관련 알고리즘을 총정리 1. Bubble Sort (거품 정렬) 1.1. 동작 과정 1.2. 복잡도 1.3. Python 구현 2. Selection Sort (선택 정렬) 2.1. 동작 과정 2.2. 복잡도 2.…","parent":{"id":"d8ebbf19-8fe5-5e82-96cc-a3dff93b3979","name":"Sorting","relativePath":"CS/Algorithm/Sorting.md"},"frontmatter":{"title":"정렬(Sorting) 알고리즘 정리","createdAt":"2023-05-02","updatedAt":"2023-05-03","tags":null},"fields":{"slug":"/posts/CS/Algorithm/Sorting/"}},{"id":"160ea840-e0d0-5cca-a2dc-02a3cedafdfb","excerpt":"1. 개요 신장 트리(Spanning Tree)는 그래프 내의 모든 노드를 포함하는 트리를 의미하며, **최소 신장 트리(Minimum Spanning Tree)**란 간선의 가중치 합이 최소가 되는 신장 트리를 말한다. 최소 신장 트리는 Greedy…","parent":{"id":"eade735b-b1e5-5b43-bea9-8492dd37ae6d","name":"MST","relativePath":"CS/Algorithm/MST.md"},"frontmatter":{"title":"최소 신장 트리(Minimum Spaaning Tree) 알고리즘","createdAt":"2023-04-17","updatedAt":"2023-04-17","tags":null},"fields":{"slug":"/posts/CS/Algorithm/MST/"}},{"id":"46f81dd1-03c7-5b88-8f92-60a991ef38f0","excerpt":"1. 개요 정렬된 데이터에서 검색 범위를 줄여 나가면서 목적 값을 찾는 알고리즘이다. 데이터가 정렬되어 있을 경우, 데이터를 크기가 같은 두 부분으로 나누고 유효한 데이터집합을 선 1.…","parent":{"id":"56e87fde-1078-5eb0-9195-7bc58a6b4213","name":"BinarySearch","relativePath":"CS/Algorithm/BinarySearch.md"},"frontmatter":{"title":"이진탐색(Binary Search) 알고리즘","createdAt":"2023-04-11","updatedAt":"2023-04-11","tags":null},"fields":{"slug":"/posts/CS/Algorithm/BinarySearch/"}},{"id":"022dd3ff-bd38-532e-b9dc-e650aa49cfcd","excerpt":"…","parent":{"id":"255d5c3b-5673-54be-9a6b-0f9e762a66f0","name":"DP","relativePath":"CS/Algorithm/DP.md"},"frontmatter":{"title":"동적 계획법(Dynamic Programming) 알고리즘","createdAt":"2023-03-27","updatedAt":"2023-04-03","tags":null},"fields":{"slug":"/posts/CS/Algorithm/DP/"}},{"id":"45697052-8508-5538-b08e-3d2066d4d6c2","excerpt":"1. 개요 상태공간이나 그래프를 출발점에서 시작하여 모든 리프노드까지 순서대로 탐색하는 완전탐색 기반의 알고리즘이다. 1.…","parent":{"id":"bb894824-c4ac-58f0-ad91-96e82bbe68dd","name":"DFS","relativePath":"CS/Algorithm/DFS.md"},"frontmatter":{"title":"깊이 우선 탐색(Depth-First Search) 알고리즘","createdAt":"2023-03-14","updatedAt":"2023-04-17","tags":null},"fields":{"slug":"/posts/CS/Algorithm/DFS/"}},{"id":"415348c2-e152-5eea-ac4b-4da9ac52ef9a","excerpt":"1. 개요 상태공간이나 그래프를 출발점으로부터 가까운 순으로 탐색해가는 완전탐색 기반의 알고리즘이다. 1.…","parent":{"id":"0f2cd9fd-d664-5260-b1b4-c7120379a272","name":"BFS","relativePath":"CS/Algorithm/BFS.md"},"frontmatter":{"title":"너비 우선 탐색(Breadth-First Search) 알고리즘","createdAt":"2023-03-05","updatedAt":"2023-04-17","tags":null},"fields":{"slug":"/posts/CS/Algorithm/BFS/"}},{"id":"4ee23bf3-1c05-5399-ba0a-307c82321b8e","excerpt":"1. 개요 음의 가중치가 없는 그래프의 한 노드에서 다른 모드 노드까지의 최단거리를 각각 구하는 알고리즘. 대표적으로 사용되는 그리디 알고리즘이다.…","parent":{"id":"918cda61-2019-5511-a096-165d209acc1e","name":"Dijkstra","relativePath":"CS/Algorithm/Dijkstra.md"},"frontmatter":{"title":"다익스트라(Dijkstra) 알고리즘","createdAt":"2023-02-27","updatedAt":"2023-04-17","tags":null},"fields":{"slug":"/posts/CS/Algorithm/Dijkstra/"}},{"id":"002a4016-b02c-553f-925e-60631f5ea662","excerpt":"1. 개요 상태공간이나 그래프의 노드를 모두 탐색하는 완전탐색 기반의 알고리즘이다. 다만, 가지 치기를 통해 탐색할 필요성이 없는 노드(상태)들을 탐색 대상에서 제외함으로써 효율을 높인다.…","parent":{"id":"c863c1e2-dd6a-53f6-8345-ec42e67f8f96","name":"Backtracking","relativePath":"CS/Algorithm/Backtracking.md"},"frontmatter":{"title":"백트래킹(Backtracking) 알고리즘","createdAt":"2022-08-23","updatedAt":"2023-04-17","tags":null},"fields":{"slug":"/posts/CS/Algorithm/Backtracking/"}}]}},"pageContext":{"pagePath":"/posts/Algorithm","postPathRegex":"/^(?!.*README).*CS\\/Algorithm.*$/","id":"13025706-cdab-5736-aeba-8579fc1e02ec","name":"Algorithm","relativePath":"CS/Algorithm"}},"staticQueryHashes":["24302420","4059933791"],"slicesMap":{}}