{"componentChunkName":"component---src-templates-post-group-index-tsx","path":"/posts/Algorithm/","result":{"data":{"allMarkdownRemark":{"nodes":[{"id":"3a4b2e18-1298-5318-ba3d-367c5264afaf","parent":{"id":"42162e1e-42f8-5384-9248-b7a8cee98455","name":"DFS","relativePath":"Algorithm/DFS.md"},"frontmatter":{"title":"깊이 우선 탐색(Depth-First Search) 알고리즘","createdAt":"2023-03-14","updatedAt":"2023-04-17"},"excerpt":"1. 개요 상태공간이나 그래프를 출발점에서 시작하여 모든 리프노드까지 순서대로 탐색하는 완전탐색 기반의 알고리즘이다. 1.…"},{"id":"304cd1e4-5045-51ed-bb74-5d6de909b0b3","parent":{"id":"01eaf46a-e882-5691-ba22-40b8841edb2c","name":"BFS","relativePath":"Algorithm/BFS.md"},"frontmatter":{"title":"너비 우선 탐색(Breadth-First Search) 알고리즘","createdAt":"2023-03-05","updatedAt":"2023-04-17"},"excerpt":"1. 개요 상태공간이나 그래프를 출발점으로부터 가까운 순으로 탐색해가는 완전탐색 기반의 알고리즘이다. 1.…"},{"id":"d152b12a-0aec-5325-87ba-b9912faae2dd","parent":{"id":"982bfef7-ba07-5eb8-a421-444507bbca5f","name":"Dijkstra","relativePath":"Algorithm/Dijkstra.md"},"frontmatter":{"title":"다익스트라(Dijkstra) 알고리즘","createdAt":"2023-02-27","updatedAt":"2023-04-17"},"excerpt":"1. 개요 음의 가중치가 없는 그래프의 한 노드에서 다른 모드 노드까지의 최단거리를 각각 구하는 알고리즘. 대표적으로 사용되는 그리디 알고리즘이다.…"},{"id":"fe66208e-7fe6-5afb-a230-a5f12aa201e1","parent":{"id":"54b68164-06d2-5861-b5e4-0e5473d031a0","name":"DP","relativePath":"Algorithm/DP.md"},"frontmatter":{"title":"동적 계획법(Dynamic Programming) 알고리즘","createdAt":"2023-03-27","updatedAt":"2023-04-03"},"excerpt":"…"},{"id":"1bc47ab1-4e2f-5b9f-98d2-9e9863473a91","parent":{"id":"5a994e87-ef15-5f86-b3b4-630d75c93646","name":"Backtracking","relativePath":"Algorithm/Backtracking.md"},"frontmatter":{"title":"백트래킹(Backtracking) 알고리즘","createdAt":"2022-08-23","updatedAt":"2023-04-17"},"excerpt":"1. 개요 상태공간이나 그래프의 노드를 모두 탐색하는 완전탐색 기반의 알고리즘이다. 다만, 가지 치기를 통해 탐색할 필요성이 없는 노드(상태)들을 탐색 대상에서 제외함으로써 효율을 높인다.…"},{"id":"ff6459b0-68d5-5d84-954e-3a1565353b52","parent":{"id":"0ed4d430-3364-59b1-81d8-2add31072348","name":"BinarySearch","relativePath":"Algorithm/BinarySearch.md"},"frontmatter":{"title":"이진탐색(Binary Search) 알고리즘","createdAt":"2023-04-11","updatedAt":"2023-04-11"},"excerpt":"1. 개요 정렬된 데이터에서 검색 범위를 줄여 나가면서 목적 값을 찾는 알고리즘이다. 데이터가 정렬되어 있을 경우, 데이터를 크기가 같은 두 부분으로 나누고 유효한 데이터집합을 선 1.…"},{"id":"f3fa286d-64fa-5dfa-b43e-5772a9b71604","parent":{"id":"f0f6388e-222b-517a-918c-1d580e3dcf99","name":"Sorting","relativePath":"Algorithm/Sorting.md"},"frontmatter":{"title":"정렬(Sorting) 알고리즘 정리","createdAt":"2023-05-02","updatedAt":"2023-05-03"},"excerpt":"면접에서 탈탈 털린 후 작성한 정렬 관련 알고리즘을 총정리 1. Bubble Sort (거품 정렬) 1.1. 동작 과정 1.2. 복잡도 1.3. Python 구현 2. Selection Sort (선택 정렬) 2.1. 동작 과정 2.2. 복잡도 2.…"},{"id":"afaa0d6e-7d3c-5a97-a99c-0213c46b899d","parent":{"id":"bd2963c7-7771-553b-8a27-e7d18e30007d","name":"MST","relativePath":"Algorithm/MST.md"},"frontmatter":{"title":"최소 신장 트리(Minimum Spaaning Tree) 알고리즘","createdAt":"2023-04-17","updatedAt":"2023-04-17"},"excerpt":"1. 개요 신장 트리(Spanning Tree)는 그래프 내의 모든 노드를 포함하는 트리를 의미하며, **최소 신장 트리(Minimum Spanning Tree)**란 간선의 가중치 합이 최소가 되는 신장 트리를 말한다. 최소 신장 트리는 Greedy…"}]}},"pageContext":{"pagePath":"posts/Algorithm","regex":"/^(?!.*README).*Algorithm.*$/","id":"eb5459d8-9799-5c75-95c0-75b19da55713","name":"Algorithm","relativePath":"Algorithm"}},"staticQueryHashes":["3300660363","3571427910","82772122"],"slicesMap":{}}