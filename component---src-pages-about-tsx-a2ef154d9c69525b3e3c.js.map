{"version":3,"file":"component---src-pages-about-tsx-a2ef154d9c69525b3e3c.js","mappings":"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","sources":["webpack://byongho-s-til/./src/components/typing/index.tsx","webpack://byongho-s-til/./src/components/typing/style.module.scss","webpack://byongho-s-til/./src/components/about-logo/index.tsx","webpack://byongho-s-til/./src/components/about-logo/style.module.scss","webpack://byongho-s-til/./src/components/about-me/style.module.scss","webpack://byongho-s-til/./src/components/taping/style.module.scss","webpack://byongho-s-til/./src/components/taping/index.tsx","webpack://byongho-s-til/./src/components/about-me/index.tsx","webpack://byongho-s-til/./src/pages/about.tsx","webpack://byongho-s-til/./src/pages/about.module.scss"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport UpIcon from '@assets/svgs/up.svg'\r\n\r\ntype Props = {\r\n  phrases: string[]\r\n  speed: number\r\n  pause?: number\r\n  isInfinite?: boolean\r\n}\r\n\r\nconst Typing: React.FC<Props> = ({\r\n  phrases,\r\n  speed,\r\n  pause = 2000,\r\n  isInfinite = false,\r\n}) => {\r\n  const typingRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    let phraseIdx = 0\r\n    let stringIdx = 0\r\n    const textElement = typingRef.current\r\n\r\n    const typing = () => {\r\n      let phrase = phrases[phraseIdx]\r\n      // 1. 문자가 아직 끝나지 않은 경우\r\n      if (stringIdx < phrase.length) {\r\n        textElement.textContent += phrase[stringIdx++]\r\n        return\r\n      }\r\n\r\n      // 2. 끝난 현재 문구가 마지막 문구가 아닌 경우\r\n      if (phraseIdx < phrases.length - 1) {\r\n        stringIdx = 0\r\n        phraseIdx++\r\n        retypeAfter(pause)\r\n        return\r\n      }\r\n\r\n      // 3. 마지막 문구인데 무한 반복인 경우\r\n      if (isInfinite) {\r\n        stringIdx = 0\r\n        phraseIdx = 0\r\n        retypeAfter(pause)\r\n        return\r\n      }\r\n\r\n      // 4.종료\r\n      clearInterval(interval)\r\n    }\r\n\r\n    // 다시 타이핑하는 함수\r\n    const retypeAfter = (pause) => {\r\n      clearInterval(interval)\r\n      setTimeout(() => {\r\n        textElement.textContent = ''\r\n        interval = setInterval(typing, 1000 / speed)\r\n      }, pause)\r\n    }\r\n\r\n    let interval = setInterval(typing, 1000 / speed)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n  return <span ref={typingRef} className={styles.typing}></span>\r\n}\r\n\r\nexport default Typing\r\n","// extracted by mini-css-extract-plugin\nexport var blink = \"style-module--blink--38e4a\";\nexport var typing = \"style-module--typing--4294b\";","import * as React from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { TypeAnimation } from 'react-type-animation'\r\nimport Typing from '@components/typing'\r\n\r\nconst AboutLogo: React.FC = () => {\r\n  return (\r\n    <p className={styles.container}>\r\n      <Typing\r\n        phrases={[\"Hi, I'm Frontend Developer\", \"I'm Working on this Blog\"]}\r\n        speed={7}\r\n        cursorColor=\"#888888\"\r\n        isInfinite={true}\r\n      />\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default AboutLogo\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--ddcb6\";","// extracted by mini-css-extract-plugin\nexport var about = \"style-module--about--4e15c\";\nexport var animationFlicking = \"style-module--animation-flicking--21650\";\nexport var container = \"style-module--container--28a04\";\nexport var dark = \"style-module--dark--65aac\";\nexport var tapeFirst = \"style-module--tape-first--9fa1d\";\nexport var tapeSecond = \"style-module--tape-second--79474\";\nexport var tapeThird = \"style-module--tape-third--c90d1\";","// extracted by mini-css-extract-plugin\nexport var black = \"style-module--black--d61a9\";\nexport var tape = \"style-module--tape--e4318\";\nexport var white = \"style-module--white--9bf5e\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport * as styles from './style.module.scss'\r\n\r\ntype props = {\r\n  color: 'black' | 'white'\r\n  phrase?: string\r\n  direction?: 'right' | 'left'\r\n  defaultSpeed?: number\r\n}\r\n\r\nconst Taping: React.FC = ({\r\n  color,\r\n  phrase = 'coming soon',\r\n  direction = 'right',\r\n  defaultSpeed = 1,\r\n}: props) => {\r\n  const [speed, setSpeed] = useState(defaultSpeed)\r\n  const tapeRef = useRef(null)\r\n  const textRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const tapeElement = tapeRef.current\r\n    const textElement = textRef.current\r\n    const numDirection = direction === 'right' ? 1 : -1\r\n    let animationId = null\r\n    let position = 0\r\n\r\n    // 텍스트 위치 조정\r\n    if (direction === 'right') {\r\n      tapeElement.style.justifyContent = 'flex-end'\r\n    }\r\n\r\n    // 텍스트를 이동 시키는 함수\r\n    const moveText = () => {\r\n      if (position > textElement.scrollWidth / 3) {\r\n        textElement.style.transform = `translate3d(0, 0, 0)`\r\n        position = 0\r\n      }\r\n      textElement.style.transform = `translate3d(${\r\n        numDirection * position\r\n      }px, 0, 0)`\r\n    }\r\n\r\n    // 애니메이션 실행 함수\r\n    const animate = () => {\r\n      position += speed\r\n      moveText()\r\n      animationId = window.requestAnimationFrame(animate) // 희한하게 정의되기 전에 쓰네?\r\n    }\r\n\r\n    // 애니메이션 실행\r\n    animate()\r\n\r\n    // 애니메이션 clear\r\n    return () => {\r\n      window.cancelAnimationFrame(animationId)\r\n    }\r\n  }, [speed])\r\n\r\n  // 마우스 hover 시 속도 조절\r\n  const handleMouseEnter = () => {\r\n    setSpeed(defaultSpeed + 10)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    setSpeed(defaultSpeed)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={tapeRef}\r\n      className={`${styles.tape} ${styles[color]}`}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}>\r\n      <p ref={textRef} className={styles.text}>\r\n        {(phrase + '\\u00a0\\u00a0\\u00a0\\u00a0').repeat(30)}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Taping\r\n","import React, { useContext } from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { TypeAnimation } from 'react-type-animation'\r\nimport Taping from '@components/taping'\r\nimport { ThemeContext } from '@contexts/theme-context'\r\n\r\nconst AboutMe: React.FC = () => {\r\n  const { theme } = React.useContext(ThemeContext)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.tapeFirst}>\r\n        <Taping color=\"white\" />\r\n      </div>\r\n      <div className={styles.tapeSecond}>\r\n        <Taping color=\"black\" direction=\"left\" />\r\n      </div>\r\n      <div className={styles.tapeThird}>\r\n        <Taping color=\"white\" />\r\n      </div>\r\n      <p className={`${styles.about} ${styles[theme]}`}>About Me</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutMe\r\n","import * as React from 'react'\r\nimport * as styles from './about.module.scss'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport Layout from '@layouts/navigation-layout'\r\nimport AboutLogo from '@components/about-logo'\r\nimport Taping from '@components/taping'\r\nimport AboutMe from '@components/about-me'\r\n\r\nconst AboutPage: React.FC<PageProps> = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.logo}>\r\n        <AboutLogo />\r\n      </div>\r\n      <AboutMe />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n\r\nexport const Head: HeadFC = () => <title>About Page</title>\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"about-module--container--307c9\";\nexport var logo = \"about-module--logo--3c6f5\";"],"names":["_ref","phrases","speed","pause","isInfinite","typingRef","useRef","useEffect","phraseIdx","stringIdx","textElement","current","typing","phrase","length","retypeAfter","clearInterval","interval","textContent","setTimeout","setInterval","React","ref","className","Typing","cursorColor","about","animationFlicking","dark","tapeFirst","tapeSecond","tapeThird","black","tape","white","color","direction","defaultSpeed","setSpeed","useState","tapeRef","textRef","tapeElement","numDirection","animationId","position","style","justifyContent","animate","scrollWidth","transform","window","requestAnimationFrame","cancelAnimationFrame","styles","onMouseEnter","onMouseLeave","repeat","theme","ThemeContext","Taping","AboutLogo","AboutMe","Head"],"sourceRoot":""}