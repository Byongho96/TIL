{"version":3,"file":"component---src-templates-post-index-tsx-5a6f128a56b0cd2e04dc.js","mappings":"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","sources":["webpack://byongho-s-til/./src/components/table-content/style.module.scss","webpack://byongho-s-til/./src/components/table-content/index.tsx","webpack://byongho-s-til/./src/components/post-header/index.tsx","webpack://byongho-s-til/./src/components/post-header/style.module.scss","webpack://byongho-s-til/./src/components/utterances/index.tsx","webpack://byongho-s-til/./src/components/next-posts/index.tsx","webpack://byongho-s-til/./src/components/next-posts/style.module.scss","webpack://byongho-s-til/./src/templates/post/index.tsx","webpack://byongho-s-til/./src/templates/post/style.module.scss","webpack://byongho-s-til/./src/assets/svgs/left.svg","webpack://byongho-s-til/./src/assets/svgs/right.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var active = \"style-module--active--d7665\";\nexport var toc = \"style-module--toc--d478a\";","import React, { useEffect } from 'react'\r\nimport * as styles from './style.module.scss'\r\n\r\nconst TableContent: React.FC = ({ toc }) => {\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          const id = encodeURI(entry.target.getAttribute('id')) // 한글 url 인코딩\r\n          const targetContent = document.querySelector(`.toc a[href=\"#${id}\"]`) // toc에서 해당 id를 가진 태그 선택\r\n          if (targetContent) {\r\n            if (entry.intersectionRatio > 0) {\r\n              targetContent.classList.add(styles.active)\r\n            } else {\r\n              targetContent.classList.remove(styles.active)\r\n            }\r\n          }\r\n        })\r\n      },\r\n      { rootMargin: `0% 0% -85% 0%` } // 관측 영역: TOP, RIGHT, BOTTOM, LEFT\r\n    )\r\n    // 트래킹하고 싶은 태그들 선택\r\n    document\r\n      .querySelectorAll(\r\n        '.markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4'\r\n      )\r\n      .forEach((section) => {\r\n        observer.observe(section)\r\n      })\r\n\r\n    return () => {\r\n      observer.disconnect()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={`toc ${styles.toc}`}\r\n      dangerouslySetInnerHTML={{ __html: toc }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TableContent\r\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\r\n\r\nconst PostHeader: React.FC = ({ frontmatter }) => {\r\n  const { author } = useSiteMetadata()\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{frontmatter.title}</h2>\r\n      <div className={styles.info}>\r\n        <p className={styles.date}>{frontmatter.createdAt}</p>\r\n        <p className={styles.author}>{author}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostHeader\r\n","// extracted by mini-css-extract-plugin\nexport var author = \"style-module--author--4220d\";\nexport var container = \"style-module--container--3de1a\";\nexport var date = \"style-module--date--fa48c\";\nexport var info = \"style-module--info--0c9e4\";\nexport var title = \"style-module--title--9700c\";","import React, { createRef, useEffect } from 'react'\r\nimport './style.scss'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\n\r\nexport interface IUtterancesProps {\r\n  theme?:\r\n    | 'github-light'\r\n    | 'github-dark'\r\n    | 'preferred-color-scheme'\r\n    | 'github-dark-orange'\r\n    | 'icy-dark'\r\n    | 'dark-blue'\r\n    | 'photon-dark'\r\n    | 'boxy-light'\r\n    | 'gruvbox-dark'\r\n}\r\n\r\nconst Utterances: React.FC<IUtterancesProps> = React.memo(\r\n  ({ theme = 'github-light' }) => {\r\n    const utterRef = createRef<HTMLDivElement>(null)\r\n\r\n    // utternace를 적용하기 위한 script를 html에 성생\r\n    useEffect(() => {\r\n      const utterElement = utterRef.current // return문에서 접근하기 위해 미리 const로 할당\r\n      const utterances = document.createElement('script')\r\n\r\n      const attributes = {\r\n        src: 'https://utteranc.es/client.js',\r\n        repo: 'byongho96/TIL',\r\n        'issue-term': 'pathname',\r\n        theme,\r\n        label: '✨💬 comments ✨',\r\n        crossOrigin: 'anonymous',\r\n        async: 'false',\r\n      }\r\n\r\n      Object.entries(attributes).forEach(([key, value]) => {\r\n        utterances.setAttribute(key, value)\r\n      })\r\n\r\n      utterElement.appendChild(utterances)\r\n\r\n      // theme이 변경되면 utterRㄷf의 child를 삭제하고 다시 생성\r\n      return () => {\r\n        utterElement.removeChild(utterElement.firstChild)\r\n      }\r\n    }, [theme])\r\n\r\n    // 반환할 element\r\n    return <div id=\"utterances\" ref={utterRef} />\r\n  }\r\n)\r\n\r\nexport default Utterances\r\n","import * as React from 'react'\r\nimport { Link, navigate } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport LeftIcon from '@assets/svgs/left.svg'\r\nimport RightIcon from '@assets/svgs/right.svg'\r\n\r\ntype Post = {\r\n  id: string\r\n  title: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  excerpt: string\r\n  relativePath: string\r\n}\r\n\r\ntype Props = {\r\n  nextPost: Post\r\n  prevPost: Post\r\n}\r\n\r\nconst NextPosts: React.FC<Props> = ({ nextPost, prevPost }) => {\r\n  return (\r\n    <div className={styles.posts}>\r\n      {prevPost ? <Post post={prevPost} isNext={false} /> : <div />}\r\n      {nextPost ? <Post post={nextPost} isNext={true} /> : <div />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NextPosts\r\n\r\nconst Post: React.FC = ({ post, isNext }) => {\r\n  const icon = isNext ? <RightIcon /> : <LeftIcon />\r\n  const direction = isNext ? styles.next : styles.prev\r\n\r\n  const handleClick = () => {\r\n    navigate(`/posts/${post.relativePath}`)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.post} onClick={handleClick}>\r\n      <div className={`${styles.flexbox} ${direction}`}>\r\n        <div className={styles.title}>{post.title}</div>\r\n        <div className={styles.icon}>{icon}</div>\r\n      </div>\r\n      <div className={styles.excerpt}>{post.excerpt}</div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var excerpt = \"style-module--excerpt--55f55\";\nexport var flexbox = \"style-module--flexbox--8037a\";\nexport var icon = \"style-module--icon--d5007\";\nexport var next = \"style-module--next--18928\";\nexport var post = \"style-module--post--07e6c\";\nexport var posts = \"style-module--posts--74272\";\nexport var prev = \"style-module--prev--2ffff\";\nexport var title = \"style-module--title--faa50\";","import React, { useContext } from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport NavigationLayout from '@layouts/navigation-layout'\r\nimport CategoryLayout from '@layouts/category-layout'\r\nimport { allMarkdownsQuery } from '@queries/index'\r\nimport { graphql } from 'gatsby'\r\nimport TableContent from '@components/table-content'\r\nimport PostHeader from '@components/post-header'\r\nimport * as styles from './style.module.scss'\r\nimport ToTheTop from '@components/to-the-top'\r\nimport Utterances from '@components/utterances'\r\nimport { ThemeContext } from '@contexts/theme-context'\r\nimport NextPosts from '@components/next-posts'\r\n\r\nconst PostPage: React.FC<PageProps> = ({ pageContext, data }) => {\r\n  const { theme } = useContext(ThemeContext)\r\n\r\n  // make post array\r\n  const postArray = data.allMarkdownRemark.nodes.map((node) => {\r\n    return {\r\n      id: node.id,\r\n      title: node.frontmatter.title,\r\n      createdAt: node.frontmatter.createdAt,\r\n      updatedAt: node.frontmatter.updatedAt,\r\n      excerpt: node.excerpt,\r\n      relativePath: node.parent.relativePath,\r\n    }\r\n  })\r\n\r\n  // find index of id is the same to the data.id\r\n  const index = postArray.findIndex(\r\n    (post) => post.id === data.markdownRemark.id\r\n  )\r\n\r\n  // prevpost is the post before the current post\r\n  const prevPost = index === 0 ? null : postArray[index - 1]\r\n\r\n  // nextpost is the post after the current post\r\n  const nextPost = index === postArray.length - 1 ? null : postArray[index + 1]\r\n\r\n  return (\r\n    <CategoryLayout selectedCategory={pageContext.parent.relativeDirectory}>\r\n      <div className={styles.container}>\r\n        <PostHeader frontmatter={data.markdownRemark.frontmatter} />\r\n        <div className={styles.post}>\r\n          <div className={styles.markdownUtter}>\r\n            <div\r\n              className={`markdown-body ${theme} ${styles.markdown}`}\r\n              dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\r\n            />\r\n            <div>\r\n              <NextPosts prevPost={prevPost} nextPost={nextPost} />\r\n            </div>\r\n            <Utterances\r\n              theme={theme === 'dark' ? 'github-dark' : 'github-light'}\r\n            />\r\n          </div>\r\n          <div className={styles.toc}>\r\n            <TableContent toc={data.markdownRemark.tableOfContents} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToTheTop />\r\n    </CategoryLayout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($id: String!, $regex: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        createdAt\r\n        isCompleted\r\n        reference\r\n        title\r\n        updatedAt\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { isCompleted: { eq: true } }\r\n        fileAbsolutePath: { regex: $regex }\r\n      }\r\n      sort: { frontmatter: { title: ASC } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        parent {\r\n          ... on File {\r\n            id\r\n            name\r\n            relativePath\r\n          }\r\n        }\r\n        frontmatter {\r\n          title\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostPage\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--ed3ad\";\nexport var markdown = \"style-module--markdown--35262\";\nexport var markdownUtter = \"style-module--markdown-utter--1fb15\";\nexport var post = \"style-module--post--e128e\";\nexport var toc = \"style-module--toc--734f6\";","var React = require('react');\n\nfunction Left (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0_19_75)\",\"key\":0},React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"clipRule\":\"evenodd\",\"d\":\"M7.94002 13.06C7.65912 12.7788 7.50134 12.3975 7.50134 12C7.50134 11.6025 7.65912 11.2213 7.94002 10.94L13.596 5.28202C13.8774 5.00076 14.259 4.8428 14.6569 4.8429C14.8539 4.84294 15.0489 4.88179 15.2309 4.95722C15.4129 5.03265 15.5783 5.14319 15.7175 5.28252C15.8568 5.42185 15.9672 5.58725 16.0426 5.76928C16.1179 5.9513 16.1567 6.14638 16.1567 6.34338C16.1566 6.54038 16.1178 6.73544 16.0423 6.91742C15.9669 7.09941 15.8564 7.26476 15.717 7.40402L11.121 12L15.717 16.596C15.8604 16.7343 15.9747 16.8998 16.0534 17.0828C16.1321 17.2657 16.1736 17.4625 16.1754 17.6617C16.1772 17.8609 16.1394 18.0584 16.064 18.2428C15.9887 18.4272 15.8774 18.5947 15.7366 18.7356C15.5958 18.8765 15.4284 18.988 15.2441 19.0635C15.0598 19.139 14.8623 19.177 14.6631 19.1754C14.464 19.1738 14.2671 19.1325 14.0841 19.0539C13.901 18.9754 13.7355 18.8612 13.597 18.718L7.93802 13.06H7.94002Z\",\"fill\":\"black\"})),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0_19_75\"},React.createElement(\"rect\",{\"width\":\"24\",\"height\":\"24\",\"fill\":\"white\"})))]);\n}\n\nLeft.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = Left;\n\nLeft.default = Left;\n","var React = require('react');\n\nfunction Right (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0_19_79)\",\"key\":0},React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"clipRule\":\"evenodd\",\"d\":\"M16.06 10.94C16.3409 11.2212 16.4987 11.6025 16.4987 12C16.4987 12.3975 16.3409 12.7787 16.06 13.06L10.404 18.718C10.1226 18.9992 9.74102 19.1572 9.34316 19.1571C8.9453 19.157 8.56377 18.9989 8.28251 18.7175C8.00125 18.4361 7.84329 18.0545 7.84338 17.6566C7.84348 17.2588 8.00162 16.8772 8.28301 16.596L12.879 12L8.28301 7.40397C8.00964 7.1212 7.85827 6.74237 7.8615 6.34907C7.86473 5.95577 8.0223 5.57947 8.30028 5.30123C8.57827 5.02298 8.95441 4.86505 9.34771 4.86145C9.741 4.85785 10.12 5.00887 10.403 5.28197L16.061 10.939L16.06 10.94Z\",\"fill\":\"black\"})),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0_19_79\"},React.createElement(\"rect\",{\"width\":\"24\",\"height\":\"24\",\"fill\":\"white\"})))]);\n}\n\nRight.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = Right;\n\nRight.default = Right;\n"],"names":["active","_ref","toc","useEffect","observer","IntersectionObserver","entries","forEach","entry","id","encodeURI","target","getAttribute","targetContent","document","querySelector","intersectionRatio","classList","add","styles","remove","rootMargin","querySelectorAll","section","observe","disconnect","React","className","dangerouslySetInnerHTML","__html","frontmatter","author","useSiteMetadata","title","createdAt","Utterances","theme","utterRef","createRef","utterElement","current","utterances","createElement","attributes","src","repo","label","crossOrigin","async","Object","_ref2","key","value","setAttribute","appendChild","removeChild","firstChild","ref","nextPost","prevPost","Post","post","isNext","icon","RightIcon","LeftIcon","direction","onClick","navigate","relativePath","excerpt","pageContext","data","useContext","ThemeContext","postArray","allMarkdownRemark","nodes","map","node","updatedAt","parent","index","findIndex","markdownRemark","length","CategoryLayout","selectedCategory","relativeDirectory","PostHeader","html","NextPosts","TableContent","tableOfContents","ToTheTop","Left","props","defaultProps","module","exports","default","Right"],"sourceRoot":""}