{"version":3,"file":"component---src-pages-404-tsx-067d1fa245dc4f5118da.js","mappings":"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","sources":["webpack://byongho-s-til/./src/components/raining-canvas/index.tsx","webpack://byongho-s-til/./src/pages/404.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\n\ntype Props = {\n  amount?: number\n  speed?: number\n  color?: string\n  isThunder?: boolean\n  thunderRate?: number\n  containerRef?: React.RefObject<HTMLDivElement>\n}\n\nconst RainingCanvas: React.FC<Props> = ({\n  amount = 40,\n  speed = 20,\n  color = '#ffffff',\n  isThunder = true,\n  thunderRate = 0.1,\n  containerRef = null,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    let rainDropArray = []\n    let rainSplashArray = []\n    let thunder = null\n    if (isThunder) {\n      thunder = new Thunder()\n    }\n\n    const mouse = { x: 0, y: 0, isActive: false } // 마우스 정보\n\n    // canvas 초기화 함수\n    const init = () => {\n      rainDropArray = []\n      rainSplashArray = [] // 이거는 RainDrop 클래스에서 채워진다\n      const innerWidth = containerRef\n        ? containerRef.current.offsetWidth\n        : window.innerWidth\n      const innerHeight = containerRef\n        ? containerRef.current.offsetHeight\n        : window.innerHeight\n      canvas.width = innerWidth\n      canvas.height = innerHeight\n      const total = Math.floor((innerWidth * innerHeight * amount) / 400000)\n\n      for (let i = 0; i < total; i++) {\n        const x = Math.random() * innerWidth\n        const y = Math.random() * innerHeight\n        // const dx = Math.random() * 2 - 1 // -1 ~ 1 // 속도에 따라 달라지므로 animate 함수에서 계산\n        const dy = Math.random() * 5 + speed // 13 ~ 18\n        rainDropArray.push(new RainDrop(x, y, dy, color, rainSplashArray))\n      }\n    }\n\n    // cavnas 렌더링(애니메이션) 함수\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      rainDropArray.forEach((rainDrop) => rainDrop.animate(ctx, mouse))\n      rainSplashArray.forEach((rainSplash, index) => {\n        rainSplash.animate(ctx)\n        // 튀기는 물방울은 1회성으로 제거\n        if (rainSplash.y > canvas.height) {\n          rainSplashArray.splice(index, 1)\n        }\n      })\n      if (thunder) {\n        if (Math.random() < thunderRate * 0.05) {\n          thunder.opacity = 0.3\n        }\n        thunder.animate(ctx)\n      }\n      requestAnimationFrame(render)\n    }\n\n    window.addEventListener('resize', init)\n    canvas.addEventListener('mouseenter', () => (mouse.isActive = true))\n    canvas.addEventListener('mouseleave', () => (mouse.isActive = false))\n    canvas.addEventListener('mousemove', (e) => {\n      mouse.x = e.clientX // 마우스 좌표를 넣어줌\n      mouse.y = e.clientY\n    })\n\n    init()\n    render()\n\n    return () => {\n      window.removeEventListener('resize', init)\n    }\n  }, [color, amount, speed, isThunder, thunderRate, containerRef])\n\n  return <canvas ref={canvasRef} />\n}\n\nexport default RainingCanvas\n\n// 떨어지는 빗방울\nclass RainDrop {\n  // 생성자 (위치 좌표, 이동 속도)\n  constructor(x, y, dy, color, splashArray) {\n    this.x = x\n    this.y = y\n    this.dy = dy\n    this.color = color\n    this.splashArray = splashArray\n  }\n\n  // 빗줄기 그리기\n  draw(ctx) {\n    const { x, y, dx, dy, color } = this\n    ctx.beginPath()\n    ctx.moveTo(x, y)\n    ctx.lineTo(x + 2 * dx, y + 2 * dy)\n    ctx.strokeStyle = color\n    ctx.lineWidth = 1\n    ctx.stroke()\n  }\n\n  // 튀기는 물방울 그리기\n  splash() {\n    const { x, y, dx, dy, color, splashArray } = this\n    for (let i = 0; i < 3; i++) {\n      const splash_dx = -dx + Math.random() * 6 - 3\n      const splash_dy = -dy + Math.random() * 3 + 11\n      splashArray.push(new RainSplash(x, y, splash_dx, splash_dy, color))\n    }\n  }\n\n  // 빗줄기 이동\n  animate(ctx, mouse) {\n    if (this.y > ctx.canvas.height) {\n      this.splash()\n      this.x = Math.random() * ctx.canvas.width * 1.4 - ctx.canvas.width * 0.2 // 아니면 시간이 지날 수록, 언젠가는 빗줄기가 캔버스 바깥으로 사라진다\n      this.y = -20\n    }\n    this.dx = mouse.isActive\n      ? Math.random() * 2 - 1 + (mouse.x - ctx.canvas.width / 2) / 80\n      : Math.random() * 2 - 1\n    this.x += this.dx\n    this.y += this.dy\n    this.draw(ctx)\n  }\n}\n\n// 빗방울 떨어졌을 때 튀기는 물방울\nclass RainSplash {\n  // 생성자 (위치 좌표, 이동 속도)\n  constructor(x, y, dx, dy, color) {\n    this.x = x\n    this.y = y\n    this.dx = dx\n    this.dy = dy\n    this.color = color\n    this.gravity = 1.5\n  }\n\n  // 물방울 그리기\n  draw(ctx) {\n    const { x, y, color } = this\n    ctx.beginPath()\n    ctx.arc(x, y, 1.5, 0, Math.PI * 2) // 원형\n    ctx.fillStyle = color\n    ctx.fill()\n  }\n\n  // 물방울 애니메이션 (포물선 형태로 올라갔다가 떨어짐)\n  animate(ctx) {\n    this.dy += this.gravity\n    this.x += this.dx\n    this.y += this.dy\n    this.draw(ctx)\n  }\n}\n\nclass Thunder {\n  // 생성자\n  constructor() {\n    this.opacity = 0\n  }\n\n  // 천둥 그리기\n  draw(ctx) {\n    const gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height) // gradient 좌표정보\n    gradient.addColorStop(0, `rgba(180, 190, 255, ${this.opacity})`) // 시작 색상 (offset, color)\n    gradient.addColorStop(1, `rgba(0, 0, 0, 0)`) // 끝 색상(offset, color)\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  }\n\n  // 천둥 애니메이션\n  animate(ctx) {\n    if (this.opacity < 0) return\n    this.opacity -= 0.003\n    this.draw(ctx)\n  }\n}\n","import React, { useContext, useRef } from 'react'\nimport './404.scss'\nimport RainingCanvas from '@components/raining-canvas'\nimport { ThemeContext } from '@contexts/theme-context'\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const { theme } = useContext(ThemeContext)\n\n  let color = '#ffffff'\n  let isThunder = true\n  if (theme === 'light') {\n    color = '#888888'\n    isThunder = false\n  }\n\n  return (\n    <div className=\"not-found--layout\" ref={containerRef}>\n      <div className=\"not-found__text\">404</div>\n      <div className=\"not-found__background\">\n        <RainingCanvas\n          containerRef={containerRef}\n          color={color}\n          isThunder={isThunder}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n\nexport const Head: HeadFC = () => <title>Not found</title>\n"],"names":["_ref","amount","speed","color","isThunder","thunderRate","containerRef","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","rainDropArray","rainSplashArray","thunder","Thunder","mouse","x","y","isActive","init","innerWidth","offsetWidth","window","innerHeight","offsetHeight","width","height","total","Math","floor","i","random","dy","push","RainDrop","render","clearRect","forEach","rainDrop","animate","rainSplash","index","splice","opacity","requestAnimationFrame","addEventListener","e","clientX","clientY","removeEventListener","React","ref","splashArray","this","draw","dx","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","splash","splash_dx","splash_dy","RainSplash","gravity","arc","PI","fillStyle","fill","gradient","createLinearGradient","addColorStop","fillRect","NotFoundPage","theme","useContext","ThemeContext","className","RainingCanvas","Head"],"sourceRoot":""}