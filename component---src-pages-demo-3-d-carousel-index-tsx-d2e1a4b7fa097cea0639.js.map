{"version":3,"file":"component---src-pages-demo-3-d-carousel-index-tsx-d2e1a4b7fa097cea0639.js","mappings":"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","sources":["webpack://byongho-s-til/./src/pages/demo/3d-carousel/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport './style.scss'\n\nconst Carousel3DPage: React.FC = () => {\n  return (\n    <div className=\"carousel-3d-page\">\n      <Carousel3D>\n        <img src=\"https://source.unsplash.com/random/?puppy\" alt=\"unsplash-1\" />\n        <img\n          src=\"https://source.unsplash.com/random/?mountain\"\n          alt=\"unsplash-2\"\n        />\n        <img src=\"https://source.unsplash.com/random/?river\" alt=\"unsplash-3\" />\n        <img src=\"https://source.unsplash.com/random/?dog\" alt=\"unsplash-4\" />\n        <img src=\"https://source.unsplash.com/random/?cat\" alt=\"unsplash-4\" />\n      </Carousel3D>\n    </div>\n  )\n}\n\nexport default Carousel3DPage\n\ntype Props = {\n  children: React.ReactNode[]\n  width?: string\n  height?: string\n  autoPlay?: boolean\n  interval?: number // 슬라이드 시간 간격 (ms)\n  transitionTime?: number // 전환 시간(ms)\n  infiniteLoop?: boolean // 무한 반복 영부\n  startIdx?: number // 처음띄울 요소 인덱스\n  showArrows?: boolean // 호버 시 화살표 여부\n  showStatus?: boolean //   우측 상단의 현재 요소의 인덱스 표시\n  showIndicators?: boolean // 하단의 점 모양으로 선택된 요소 표시\n}\n\nconst Carousel3D: React.FC<Props> = ({\n  children = [],\n  width = '400px',\n  height = '300px',\n  autoPlay = true,\n  interval = 3000,\n  transitionTime = 300,\n  infiniteLoop = true,\n  startIdx = 0,\n  showArrows = true,\n  showStatus = true,\n  showIndicators = true,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [index, setIndex] = useState(startIdx)\n\n  // number of slide items\n  const length = useMemo(() => {\n    return children.length\n  }, [children])\n\n  // slide to the next item\n  const slideNext = useCallback(\n    function () {\n      setIndex((index) => (index + 1 > length - 1 ? 0 : index + 1))\n    },\n    [length]\n  )\n\n  // slide to the prev item\n  const slidePrev = useCallback(\n    function () {\n      setIndex((index) => (index - 1 < 0 ? length - 1 : index - 1))\n    },\n    [length]\n  )\n\n  // start play animation\n  useEffect(() => {\n    if (!autoPlay) return // 자동플레이가 아닐 경우, 실행 안함\n\n    // slide\n    const slide = function () {\n      slideNext()\n    }\n\n    // start the animation\n    const intervalId = setInterval(slide, interval)\n\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [autoPlay, interval, infiniteLoop, index, length])\n\n  // css transition\n  useEffect(() => {\n    const childElements = containerRef.current.children\n\n    let prevIdx = (index - 1) % length\n    if (prevIdx < 0) {\n      prevIdx += length\n    }\n    let doublePrevIdx = (index - 2) % length\n    if (doublePrevIdx < 0) {\n      doublePrevIdx += length\n    }\n    const nextIdx = (index + 1) % length\n    const doubleNextIdx = (index + 2) % length\n\n    if (length < 5) {\n      for (let idx = 0; idx < length; idx++) {\n        const item = childElements[idx] as HTMLDivElement\n        switch (idx) {\n          case index:\n            item.style.left = `50%`\n            item.style.transform = `translate3d(-50%, 0, 0)`\n            item.style.opacity = `1`\n            break\n          case prevIdx:\n            item.style.left = `0`\n            item.style.transform = `translate3d(0, 0, -200px) rotateY(30deg)`\n            item.style.opacity = `1`\n            break\n          case nextIdx:\n            item.style.left = `100%`\n            item.style.transform = `translate3d(-100%, 0, -200px) rotateY(-30deg)`\n            item.style.opacity = `1`\n            break\n          default:\n            item.style.left = `50%`\n            item.style.transform = `translate3d(-50%, 0, -400px)`\n            item.style.opacity = `0`\n        }\n      }\n    } else {\n      for (let idx = 0; idx < length; idx++) {\n        const item = childElements[idx] as HTMLDivElement\n        switch (idx) {\n          case index:\n            item.style.left = `50%`\n            item.style.transform = `translate3d(-50%, 0, 0)`\n            item.style.opacity = `1`\n            break\n          case prevIdx:\n            item.style.left = `20%`\n            item.style.transform = `translate3d(0, 0, -200px) rotateY(30deg)`\n            item.style.opacity = `1`\n            break\n          case doublePrevIdx:\n            item.style.left = `0`\n            item.style.transform = `translate3d(0, 0, -400px) rotateY(45deg)`\n            item.style.opacity = `1`\n            break\n          case nextIdx:\n            item.style.left = `80%`\n            item.style.transform = `translate3d(-100%, 0, -200px) rotateY(-30deg)`\n            item.style.opacity = `1`\n            break\n          case doubleNextIdx:\n            item.style.left = `100%`\n            item.style.transform = `translate3d(-100%, 0, -400px) rotateY(-45deg)`\n            item.style.opacity = `1`\n            break\n          default:\n            item.style.left = `50%`\n            item.style.transform = `translate3d(-50%, 0, -600px)`\n            item.style.opacity = `0`\n        }\n      }\n    }\n  }, [index])\n\n  return (\n    <div\n      className=\"carousel-3d-container\"\n      ref={containerRef}\n      style={{ height: height }}\n    >\n      {children.map((child: React.ReactNode, index: number) => (\n        <div\n          className=\"carousel-3d-item\"\n          key={index}\n          style={{ width: width, height: height }}\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":["Carousel3DPage","React","className","Carousel3D","src","alt","_ref","children","width","height","autoPlay","interval","transitionTime","infiniteLoop","startIdx","showArrows","showStatus","showIndicators","containerRef","useRef","index","setIndex","useState","length","useMemo","slideNext","useCallback","useEffect","intervalId","setInterval","clearInterval","childElements","current","prevIdx","doublePrevIdx","nextIdx","doubleNextIdx","idx","item","style","left","transform","opacity","ref","map","child","key"],"sourceRoot":""}