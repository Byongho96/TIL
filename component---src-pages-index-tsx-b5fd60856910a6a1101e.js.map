{"version":3,"file":"component---src-pages-index-tsx-b5fd60856910a6a1101e.js","mappings":"0IAsCA,IAnCYA,IAAiD,IAAhD,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAU,EACrDC,QAAQC,IAAIL,EAAOC,EAAaC,EAAUC,GAC1C,MACEH,MAAOM,EACPL,YAAaM,EAAkB,MAC/BC,EAAK,QACLC,IACEC,EAAAA,EAAAA,KAEEC,EAAM,CACVX,MAAOA,GAASM,EAChBL,YAAaA,GAAeM,EAC5BC,MAAM,GAAIC,EAAUD,EACpBI,IAAI,GAAIH,GAAUP,GAAQ,KAG5B,OACEW,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQF,EAAIX,OACZa,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASJ,EAAIV,cACtCY,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,QAAQC,QAASJ,EAAIH,QAChCK,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,SAASD,QAASJ,EAAIC,MACrCC,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASJ,EAAIX,QACvCa,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,iBAAiBD,QAASJ,EAAIV,cAC7CY,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,eAAeD,QAAST,IACvCO,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,YAAYD,QAAQ,UACnCF,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASJ,EAAIH,QACvCK,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,iBAAiBD,QAAQ,SACxCF,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,kBAAkBD,QAAQ,QACxCZ,EACA,C,sHCnBP,MAX4Bc,KAC1B,MAAM,MAAEC,GAAUL,EAAAA,WAAiBM,EAAAA,IACnC,OACEN,EAAAA,cAAAA,MAAAA,CAAKO,UAAS,cAAgBF,GAC5BL,EAAAA,cAAAA,MAAAA,KAAK,SACLA,EAAAA,cAAAA,MAAAA,KAAK,KACLA,EAAAA,cAAAA,MAAAA,KAAK,WACD,E,UCqCV,MAzC6BQ,KAC3B,MAAMC,GCCOC,EAAAA,EAAAA,gBAAe,YAoBhBC,aAAaC,MDnBzBH,EAAWI,MAAK,IAAM,GAAMC,KAAKC,WACjC,MAAMC,EAAqBP,EAAWQ,MAAM,EANtB,IAwBtB,OACEjB,EAAAA,cAAAA,KAAAA,CACEO,UAAU,cACVW,aAlBsBC,IACTA,EAAEC,OACVC,UAAUC,IAAI,OAAO,EAiB1BC,aAbsBJ,IACTA,EAAEC,OACVC,UAAUG,OAAO,OAAO,GAa5BR,EAAmBS,KAAKC,GACvB1B,EAAAA,cAAAA,KAAAA,CACEO,UAAU,wBACVoB,IAAKD,EAASE,GACdC,QAASA,KAAMC,OAdF7B,EAccyB,EAASzB,UAb1C8B,EAAAA,EAAAA,UAAS,UAAU9B,GADAA,KAc6B,GAEzCyB,EAASzB,QAGX,E,UE1BT,MAXuC+B,IAEnChC,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,iBACbP,EAAAA,cAACI,EAAS,MACVJ,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,yBACbP,EAAAA,cAACQ,EAAU,QAQZ,MAAMyB,EAAOA,IAAMjC,EAAAA,cAACkC,EAAAA,EAAG,CAAC/C,MAAM,a","sources":["webpack://byongho-s-til/./src/components/seo/index.tsx","webpack://byongho-s-til/./src/components/index-logo/index.tsx","webpack://byongho-s-til/./src/components/index-wheel/index.tsx","webpack://byongho-s-til/./src/hooks/use-categories.tsx","webpack://byongho-s-til/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\n\nconst SEO = ({ title, description, pathname, children }) => {\n  console.log(title, description, pathname, children)\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n  } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:site_name\" content={defaultTitle} />\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","import React from 'react'\nimport './style.scss'\nimport { ThemeContext } from '@contexts/theme-context'\n\nconst IndexLogo: React.FC = () => {\n  const { theme } = React.useContext(ThemeContext)\n  return (\n    <div className={`index-logo ${theme}`}>\n      <div>TODAY</div>\n      <div>I</div>\n      <div>LEARNED</div>\n    </div>\n  )\n}\n\nexport default IndexLogo\n","import React from 'react'\nimport './style.scss'\nimport { navigate } from 'gatsby'\nimport { useCategories } from '@hooks/use-categories'\n\nconst NUMBER_OF_LISTS = 15 // 화면에 표시할 카테고리 갯수. CSS 파일의 숫자와 동일해야함\n\nconst IndexWheel: React.FC = () => {\n  const categories = useCategories()\n\n  categories.sort(() => 0.5 - Math.random()) // 데이터 섞기\n  const selectedCategories = categories.slice(0, NUMBER_OF_LISTS)\n\n  // 이벤트 발생 element에 styles.stop 클래스 추가\n  const handleMouseEnter = (e: React.MouseEvent<HTMLUListElement>) => {\n    const target = e.target as HTMLUListElement\n    target.classList.add('stop')\n  }\n\n  // 이벤트 발생 element에 styles.stop 클래스 추가\n  const handleMouseLeave = (e: React.MouseEvent<HTMLUListElement>) => {\n    const target = e.target as HTMLUListElement\n    target.classList.remove('stop')\n  }\n\n  const handleClick = (name: string) => {\n    navigate(`/posts/${name}`)\n  }\n\n  return (\n    <ul\n      className=\"index-wheel\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {selectedCategories.map((category) => (\n        <li\n          className=\"index-wheel__category\"\n          key={category.id}\n          onClick={() => handleClick(category.name)}\n        >\n          {category.name}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default IndexWheel\n","import { graphql, useStaticQuery } from 'gatsby'\n\n// 'posts' 폴더의 하위 디렉토리가 곧 카테고리임을 가정\n// 'posts' 폴더의 하위 디렉토리들을 리스트 형태로 반환하는 훅\n\n// 이미지 관련 폴더 제거 : name: { nin: [\"image\", \"images\", \"asset\", \"assets\"] }\n// 최상단 posts 폴더 제거 : relativePath: { ne: \"\" }\n\nexport const useCategories = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDirectory(\n        filter: {\n          sourceInstanceName: { eq: \"posts\" }\n          name: { nin: [\"image\", \"images\", \"asset\", \"assets\"] }\n          relativeDirectory: { nin: [\"VanillaWeb\"] }\n          relativePath: { ne: \"\" }\n        }\n      ) {\n        nodes {\n          id\n          name\n          relativeDirectory\n          relativePath\n        }\n      }\n    }\n  `)\n\n  return data.allDirectory.nodes\n}\n","import * as React from 'react'\nimport './index.scss'\nimport type { PageProps } from 'gatsby'\nimport IndexLogo from '@components/index-logo'\nimport IndexWheel from '@components/index-wheel'\nimport SEO from '@components/seo'\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <div className=\"index--layout\">\n      <IndexLogo />\n      <div className=\"index__wheel-category\">\n        <IndexWheel />\n      </div>\n    </div>\n  )\n}\n\nexport default IndexPage\n\nexport const Head = () => <SEO title=\"Home Page\" />\n"],"names":["_ref","title","description","pathname","children","console","log","defaultTitle","defaultDescription","image","siteUrl","useSiteMetadata","seo","url","React","name","content","property","IndexLogo","theme","ThemeContext","className","IndexWheel","categories","useStaticQuery","allDirectory","nodes","sort","Math","random","selectedCategories","slice","onMouseEnter","e","target","classList","add","onMouseLeave","remove","map","category","key","id","onClick","handleClick","navigate","IndexPage","Head","SEO"],"sourceRoot":""}