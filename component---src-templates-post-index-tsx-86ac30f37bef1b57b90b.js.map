{"version":3,"file":"component---src-templates-post-index-tsx-86ac30f37bef1b57b90b.js","mappings":"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","sources":["webpack://byongho-s-til/./src/hooks/use-site-metadata.tsx","webpack://byongho-s-til/./src/components/category/style.module.scss","webpack://byongho-s-til/./src/utils/sortByTypes.ts","webpack://byongho-s-til/./src/components/category/index.tsx","webpack://byongho-s-til/./src/utils/cutLetters.ts","webpack://byongho-s-til/./src/hooks/use-categorized-posts.tsx","webpack://byongho-s-til/./src/layouts/category-layout/index.tsx","webpack://byongho-s-til/./src/layouts/category-layout/style.module.scss","webpack://byongho-s-til/./src/components/navigation/style.module.scss","webpack://byongho-s-til/./src/components/color-change/style.module.scss","webpack://byongho-s-til/./src/components/color-change/index.tsx","webpack://byongho-s-til/./src/components/navigation/index.tsx","webpack://byongho-s-til/./src/layouts/navigation-layout/index.tsx","webpack://byongho-s-til/./src/layouts/navigation-layout/style.module.scss","webpack://byongho-s-til/./src/components/table-content/index.tsx","webpack://byongho-s-til/./src/components/post-header/index.tsx","webpack://byongho-s-til/./src/components/post-header/style.module.scss","webpack://byongho-s-til/./src/templates/post/style.module.scss","webpack://byongho-s-til/./src/templates/post/index.tsx","webpack://byongho-s-til/./src/asset/images/moon-fill.svg","webpack://byongho-s-til/./src/asset/images/sun-fill.svg"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          author\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var category = \"style-module--category--d0bec\";\nexport var container = \"style-module--container--36f8e\";\nexport var post = \"style-module--post--8179a\";","export function sortByName(a, b) {\r\n  const nameA = a.name.toUpperCase() // ignore upper and lowercase\r\n  const nameB = b.name.toUpperCase() // ignore upper and lowercase\r\n  if (nameA < nameB) {\r\n    return -1\r\n  }\r\n  if (nameA > nameB) {\r\n    return 1\r\n  }\r\n\r\n  // names must be equal\r\n  return 0\r\n}\r\n\r\nexport function sortByTitle(a, b) {\r\n  const titleA = a.title.toUpperCase() // ignore upper and lowercase\r\n  const titleB = b.title.toUpperCase() // ignore upper and lowercase\r\n  if (titleA < titleB) {\r\n    return -1\r\n  }\r\n  if (titleA > titleB) {\r\n    return 1\r\n  }\r\n\r\n  // names must be equal\r\n  return 0\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, navigate } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useCategorizedPosts } from '@hooks/use-categorized-posts'\r\nimport { cutLetters } from '@utils/cutLetters'\r\n\r\n// 최대 3단계 카테고리까지만(루트 카테고리 포함) 지원\r\n\r\nconst Category: React.FC = ({ selectedCategory = '' }) => {\r\n  const data = useCategorizedPosts()\r\n  const [clickedCategory, setClickedCategory] = useState(selectedCategory)\r\n\r\n  const handleClickCategory = (event, name) => {\r\n    if (event.detail == 1) {\r\n      event.preventDefault()\r\n    }\r\n    setClickedCategory(name)\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.container}>\r\n      {/* 루트 카테고리 */}\r\n      {data.map((category) => (\r\n        <li key={category.name} className={styles.category}>\r\n          <CategoryName\r\n            name={category.name}\r\n            handleClickCategory={handleClickCategory}\r\n          />\r\n          <ul>\r\n            {/* 서브 카테고리 1 */}\r\n            {category.subCategories.map((subCategory) => (\r\n              <li key={subCategory.name} className={styles.category}>\r\n                <CategoryName\r\n                  name={subCategory.name}\r\n                  handleClickCategory={handleClickCategory}\r\n                />\r\n                <ul>\r\n                  {/* 서브 카테고리 2 */}\r\n                  {subCategory.subCategories.map((subCategory) => (\r\n                    <li key={subCategory.name} className={styles.category}>\r\n                      <CategoryName\r\n                        name={subCategory.name}\r\n                        handleClickCategory={handleClickCategory}\r\n                      />\r\n                      {/* 서브 카테고리 2 포스트 */}\r\n                      {clickedCategory === subCategory.name && (\r\n                        <Posts posts={subCategory.posts} />\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                {/* 서브 카테고리 1 포스트 */}\r\n                {clickedCategory === subCategory.name && (\r\n                  <Posts posts={subCategory.posts} />\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {/* 루트 카테고리 포스트 */}\r\n          {clickedCategory === category.name && (\r\n            <Posts posts={category.posts} />\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst CategoryName: React.FC = ({ name, handleClickCategory }) => {\r\n  return (\r\n    <Link\r\n      to={`/posts/${name}`}\r\n      activeClassName=\"active\"\r\n      onClick={(event) => {\r\n        handleClickCategory(event, name)\r\n      }}>\r\n      {name}\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst Posts: React.FC = ({ posts }) => {\r\n  return (\r\n    <ul>\r\n      {posts.map((post) => (\r\n        <li key={post.id} className={styles.post}>\r\n          <Link to={`/posts/${post.relativePath}`} activeClassName=\"active\">\r\n            {cutLetters(post.title || post.name, 13)}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Category\r\n","export function cutLetters(string, maxLetters) {\r\n  if (string.length > maxLetters) {\r\n    return string.substring(0, maxLetters) + '...'\r\n  }\r\n  return string\r\n}\r\n","import { graphql, useStaticQuery } from 'gatsby'\r\nimport { sortByName, sortByTitle } from '@utils/sortByTypes'\r\n\r\n// 'posts' 폴더의 하위 md파일이 곧 포스트임을 가정\r\n// 'posts' 폴더의 하위 디렉토리가 곧 카테고리임을 가정\r\n// 'posts' 폴더의 하위 md파일들을 디렉토리 구조(카테고리)에 따라 가공하여 반환하는 훅\r\n\r\n// 'posts' 하위 md 파일 만을 탐색\r\n// 'README' md 파일 제거\r\n\r\nexport const useCategorizedPosts = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark(\r\n        filter: {\r\n          frontmatter: { isCompleted: { eq: true } }\r\n          fileAbsolutePath: { regex: \"/^(?!.*README).*posts.*$/\" }\r\n        }\r\n      ) {\r\n        nodes {\r\n          id\r\n          parent {\r\n            ... on File {\r\n              id\r\n              name\r\n              relativePath\r\n            }\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // 마크다운 파일을 디렉토리 구조에 따라 카테고리 분류\r\n  /*\r\n  type Post ={\r\n    id: string\r\n    title: string\r\n    relativePath: string\r\n  }\r\n\r\n  type Folder = {\r\n    name: string\r\n    posts: Post[]\r\n    nums: number\r\n    folders: Folder[]\r\n  }\r\n\r\n  type Category = Folder[]\r\n  */\r\n  const categories = []\r\n  data.allMarkdownRemark.nodes.forEach((node) => {\r\n    const { id, parent, frontmatter } = node\r\n    const { name, relativePath } = parent\r\n    const { title } = frontmatter\r\n    const pathArray = relativePath.split('/')\r\n\r\n    // 최상단 카테고리 분류\r\n    const rootCategory = pathArray[0]\r\n    let foundCategory = categories.find(\r\n      (category) => category.name === rootCategory\r\n    )\r\n    if (!foundCategory) {\r\n      // 최상단 카테고리가 없으면 새로 생성\r\n      const newCategory = {\r\n        name: rootCategory,\r\n        num: 1,\r\n        posts: [],\r\n        subCategories: [],\r\n      }\r\n      categories.push(newCategory)\r\n      foundCategory = newCategory\r\n    } else {\r\n      // 최상단 카테고리가 있으면 갯수만 추가\r\n      foundCategory.num += 1\r\n    }\r\n\r\n    // 서브 카테고리 분류\r\n    let parentCategory = foundCategory // 바로 위의 상대 부모 디렉토리를 기억해서 여러 depth를 처리\r\n    pathArray.slice(1, -1).forEach((subCategory) => {\r\n      let foundCategory = parentCategory.subCategories.find(\r\n        (category) => category.name === subCategory\r\n      )\r\n      if (!foundCategory) {\r\n        // 서브 카테고리가 없으면 새로 생성\r\n        const newCategory = {\r\n          name: subCategory,\r\n          num: 1,\r\n          posts: [],\r\n          subCategories: [],\r\n        }\r\n        parentCategory.subCategories.push(newCategory)\r\n        parentCategory.subCategories.sort(sortByName) // 서브 카테고리 이름 순 정렬\r\n        foundCategory = newCategory\r\n      } else {\r\n        // 서브 카테고리가 있으면 갯수만 추가\r\n        foundCategory.num += 1\r\n      }\r\n      parentCategory = foundCategory\r\n    })\r\n\r\n    // 포스트 분류\r\n    parentCategory.posts.push({ id, title, name, relativePath })\r\n    parentCategory.posts.sort(sortByTitle) // 포스트 이름 순 정렬\r\n  })\r\n\r\n  categories.sort(sortByName) // 최상단 카테고리 이름 순 정렬\r\n\r\n  return categories\r\n}\r\n","import * as React from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport Category from '@components/category'\r\n\r\nconst CategoryLayout = ({ selectedCategory, children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Category selectedCategory={selectedCategory} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryLayout\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--16db0\";","// extracted by mini-css-extract-plugin\nexport var navBar = \"style-module--nav-bar--3417e\";\nexport var navLinkText = \"style-module--nav-link-text--1f74e\";\nexport var navLinks = \"style-module--nav-links--64532\";","// extracted by mini-css-extract-plugin\nexport var colorPicker = \"style-module--color-picker--4c5e0\";\nexport var container = \"style-module--container--ca8f7\";","import React, { useState, useEffect } from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport SunIcon from '@asset/images/sun-fill.svg'\r\nimport MoonIcon from '@asset/images/moon-fill.svg'\r\n\r\nconst ColorChange: React.FC = () => {\r\n  const [theme, setTheme] = useState('light')\r\n  const root = document.querySelector(':root')\r\n\r\n  // 1. 컬러 picker\r\n  // 1.1. localStorage에 저장된 --main-color가 있으면 :root element의 --main-color를 변경\r\n  // 1.2. :root element의 --main-color를 컬러 picker의 value로 설정\r\n  useEffect(() => {\r\n    let mainColor = localStorage.getItem('main-color')\r\n    if (mainColor) {\r\n      root.style.setProperty('--main-color', mainColor)\r\n    } else {\r\n      mainColor = getComputedStyle(root).getPropertyValue('--main-color')\r\n    }\r\n    document.querySelector('#color-picker').value = mainColor\r\n  }, [])\r\n\r\n  // 1.3.컬러 picker에서 컬러를 선택하면 :root element의 --main-color를 변경\r\n  // 1.4. localStorage에 --main-color 저장\r\n  const handleChange = (e) => {\r\n    root.style.setProperty('--main-color', e.target.value)\r\n    localStorage.setItem('main-color', e.target.value)\r\n  }\r\n\r\n  // 2. 다크모드\r\n  // 2.1. 시스템의 컬러 모드(prefers-color-scheme) 가 변경될 때마다 isDark 병경\r\n  useEffect(() => {\r\n    const mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)')\r\n    const toggleDark = (e) => {\r\n      setTheme(e.matches ? 'dark' : 'light')\r\n    }\r\n\r\n    mediaQueryList.addEventListener('change', toggleDark)\r\n    return () => {\r\n      mediaQueryList.removeEventListener('change', toggleDark)\r\n    }\r\n  }, [])\r\n\r\n  // 2.2. 클릭 이벤트 시마다 isDark 변경\r\n  const handleClick = () => {\r\n    setTheme((theme) => (theme === 'light' ? 'dark' : 'light'))\r\n  }\r\n\r\n  // 2.3. isDark 값에 따라 :root element의 classList에 dark 추가/제거\r\n  useEffect(() => {\r\n    if (theme === 'dark') {\r\n      root.classList.add('dark')\r\n    } else {\r\n      root.classList.remove('dark')\r\n    }\r\n  }, [theme])\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <input\r\n        id=\"color-picker\"\r\n        className={styles.colorPicker}\r\n        type=\"color\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className={`${styles.theme} ${styles[theme]}`} onClick={handleClick}>\r\n        {theme === 'dark' ? <SunIcon /> : <MoonIcon />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColorChange\r\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\r\nimport ColorChange from '@components/color-change'\r\n\r\nconst Navigation: React.FC = () => {\r\n  const { author } = useSiteMetadata()\r\n  return (\r\n    <div className={styles.navBar}>\r\n      <Link to=\"/\" className={styles.navLinkText}>\r\n        {author}\r\n      </Link>\r\n      <ColorChange />\r\n      <nav>\r\n        <ul className={styles.navLinks}>\r\n          <li>\r\n            <Link to=\"/\" className={styles.navLinkText}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\" className={styles.navLinkText}>\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/posts\" className={styles.navLinkText}>\r\n              Posts\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import * as React from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport Navigation from '@components/navigation'\r\n\r\nconst NavigationLayout = ({ children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Navigation />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationLayout\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--24ac7\";","import React, { useEffect } from 'react'\r\nimport * as styles from './style.module.scss'\r\n\r\nconst TableContent: React.FC = ({ toc }) => {\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const id = entry.target.getAttribute('id')\r\n        console.log(id)\r\n        const targetContent = document.querySelector(`.toc a[href=\"#${id}\"]`)\r\n        console.log('target', targetContent)\r\n        if (targetContent) {\r\n          if (entry.intersectionRatio > 0) {\r\n            targetContent.classList.add('active')\r\n          } else {\r\n            targetContent.classList.remove('active')\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // Track all sections that have an `id` applied\r\n    document.querySelectorAll('h1, h2, h3, h4').forEach((section) => {\r\n      observer.observe(section)\r\n    })\r\n\r\n    return () => {\r\n      observer.disconnect()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={`toc ${styles.toc}`}\r\n      dangerouslySetInnerHTML={{ __html: toc }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TableContent\r\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\r\n\r\nconst PostHeader: React.FC = ({ frontmatter }) => {\r\n  const { author } = useSiteMetadata()\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{frontmatter.title}</h2>\r\n      <div className={styles.info}>\r\n        <p className={styles.author}>{author}</p>\r\n        <p className={styles.date}>{frontmatter.createdAt}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostHeader\r\n","// extracted by mini-css-extract-plugin\nexport var author = \"style-module--author--4220d\";\nexport var container = \"style-module--container--3de1a\";\nexport var date = \"style-module--date--fa48c\";\nexport var info = \"style-module--info--0c9e4\";\nexport var title = \"style-module--title--9700c\";","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--ed3ad\";\nexport var post = \"style-module--post--e128e\";\nexport var toc = \"style-module--toc--734f6\";","import * as React from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport NavigationLayout from '@layouts/navigation-layout'\r\nimport CategoryLayout from '@layouts/category-layout'\r\nimport { allMarkdownsQuery } from '@queries/index'\r\nimport { graphql } from 'gatsby'\r\nimport TableContent from '@components/table-content'\r\nimport PostHeader from '@components/post-header'\r\nimport * as styles from './style.module.scss'\r\n\r\nconst PostPage: React.FC<PageProps> = ({ pageContext, data }) => {\r\n  return (\r\n    <NavigationLayout>\r\n      <CategoryLayout selectedCategory={pageContext.name}>\r\n        <div className={styles.container}>\r\n          <div className={styles.post}>\r\n            <PostHeader frontmatter={data.markdownRemark.frontmatter} />\r\n            <div\r\n              className={`markdown-body ${styles.postBody}`}\r\n              dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\r\n            />\r\n          </div>\r\n          <div className={styles.toc}>\r\n            <TableContent toc={data.markdownRemark.tableOfContents} />\r\n          </div>\r\n        </div>\r\n      </CategoryLayout>\r\n    </NavigationLayout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        createdAt\r\n        isCompleted\r\n        reference\r\n        title\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostPage\r\n","var React = require('react');\n\nfunction MoonFill (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M11.38 2.01898C10.6431 2.7056 10.0521 3.53361 9.64219 4.4536C9.23227 5.37359 9.01185 6.36673 8.99408 7.37376C8.97632 8.38078 9.16156 9.38108 9.53877 10.315C9.91598 11.2488 10.4774 12.0972 11.1896 12.8094C11.9018 13.5216 12.7501 14.083 13.684 14.4602C14.6179 14.8374 15.6182 15.0227 16.6252 15.0049C17.6323 14.9871 18.6254 14.7667 19.5454 14.3568C20.4654 13.9469 21.2934 13.3559 21.98 12.619C21.8234 15.1591 20.7039 17.5439 18.8496 19.2871C16.9953 21.0302 14.546 22.0005 12.001 22C6.477 22 2 17.523 2 12C2 6.68498 6.146 2.33898 11.38 2.01898Z\",\"fill\":\"black\"}));\n}\n\nMoonFill.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = MoonFill;\n\nMoonFill.default = MoonFill;\n","var React = require('react');\n\nfunction SunFill (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z\",\"fill\":\"black\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M12 21V22M21 12H22M12 3V2M3 12H2\",\"stroke\":\"black\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M18.5 18.5L19 19M18.5 5.5L19 5M5.5 5.5L5 5M5.5 18.5L5 19\",\"stroke\":\"black\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":2})]);\n}\n\nSunFill.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = SunFill;\n\nSunFill.default = SunFill;\n"],"names":["useSiteMetadata","useStaticQuery","site","siteMetadata","sortByName","a","b","nameA","name","toUpperCase","nameB","sortByTitle","titleA","title","titleB","CategoryName","_ref2","handleClickCategory","React","Link","to","activeClassName","onClick","event","Posts","_ref3","posts","map","post","key","id","className","relativePath","string","maxLetters","length","substring","_ref","selectedCategory","data","categories","allMarkdownRemark","nodes","forEach","node","parent","frontmatter","pathArray","split","rootCategory","foundCategory","find","category","num","newCategory","subCategories","push","parentCategory","slice","subCategory","sort","useCategorizedPosts","clickedCategory","setClickedCategory","useState","detail","preventDefault","styles","children","Category","navLinkText","colorPicker","theme","setTheme","root","document","querySelector","useEffect","mainColor","localStorage","getItem","style","setProperty","getComputedStyle","getPropertyValue","value","mediaQueryList","window","matchMedia","toggleDark","e","matches","addEventListener","removeEventListener","classList","add","remove","type","onChange","target","setItem","SunIcon","MoonIcon","author","ColorChange","Navigation","toc","observer","IntersectionObserver","entries","entry","getAttribute","console","log","targetContent","intersectionRatio","querySelectorAll","section","observe","disconnect","dangerouslySetInnerHTML","__html","createdAt","pageContext","NavigationLayout","CategoryLayout","PostHeader","markdownRemark","html","TableContent","tableOfContents","MoonFill","props","createElement","defaultProps","module","exports","default","SunFill"],"sourceRoot":""}