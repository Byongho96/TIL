{"version":3,"file":"component---src-pages-about-tsx-4142a9a2d9229488f6bc.js","mappings":"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","sources":["webpack://byongho-s-til/./src/components/seo/index.tsx","webpack://byongho-s-til/./src/components/type-animation/index.tsx","webpack://byongho-s-til/./src/components/about-blog/index.tsx","webpack://byongho-s-til/./src/components/taping/index.tsx","webpack://byongho-s-til/./src/components/about-me/index.tsx","webpack://byongho-s-til/./src/pages/about.tsx","webpack://byongho-s-til/./src/assets/svgs/github.svg","webpack://byongho-s-til/./src/assets/svgs/rss.svg"],"sourcesContent":["import React from 'react'\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\n\ninterface Props {\n  title: string\n  description: string\n  pathname: string\n  children: React.ReactNode\n}\n\ntype SeoType = {\n  title: string\n  description: string\n  image: string\n  url: string\n}\n\nconst SEO: React.FC<Props> = ({ title, description, pathname, children }) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n  } = useSiteMetadata()\n\n  const seo: SeoType = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ''}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:site_name\" content={defaultTitle} />\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","import React, { useRef, useEffect } from 'react'\nimport './style.scss'\n\ntype Props = {\n  phrases: string[] // 순서대로 타이핑 할 문구 리스트\n  speed?: number // 타이핑 속도\n  style?: object // 인라인 스타일 객체\n  pause?: number // 한 개의 텍스트가 완성되고, 다음 텍스트가 타이핑 되기 전 대기시간\n  isInfinite?: boolean // 타이핑 무한 반복 여부\n}\n\nconst TypeAnimation: React.FC<Props> = ({\n  phrases,\n  speed = 5,\n  style = {},\n  pause = 2000, // 기본 대기 시간 2초\n  isInfinite = false,\n}) => {\n  const textElementRef = useRef<HTMLParagraphElement>(null)\n\n  useEffect(() => {\n    const textElement = textElementRef.current // 타이핑을 입력한 타겟 Element\n\n    if (!(textElement instanceof HTMLParagraphElement)) return\n\n    textElement.textContent = ''\n\n    let phraseIdx = 0 // 현재 타이핑하는 문구의 인덱스\n    let charIdx = 0 // 현재 타이핑하는 글자 인덱스\n    let interval: number = null // setInterval을 담을 변수\n\n    // 2. 타이핑 메인 함수\n    const typeText = function () {\n      textElement.style.setProperty('--cursor-opacity', 1) // 타이핑 하는 동안은 커서 깜빡이지 않도록\n      const currentPhrase = phrases[phraseIdx] // 현재 타이핑하는 문구\n\n      // 현재 문구 타이핑이 안 끝났을 경우\n      if (charIdx < currentPhrase.length) {\n        textElement.textContent += currentPhrase[charIdx++] // innerText 대신 textContent 사용해야 공백을 담을 수 있음\n        return\n      }\n      // 현재 문구가 마지막 문구가 아닐 경우\n      if (phraseIdx < phrases.length - 1) {\n        phraseIdx++ // 다음 문구로 이동\n        charIdx = 0 // 첫 번째 글자로 이동\n        retypeAfterPause()\n        return\n      }\n      // 무한 반복이 설정되어 있을 경우\n      if (isInfinite) {\n        phraseIdx = 0 // 처음 문구로 이동\n        charIdx = 0 // 첫 번재 글자로 이동\n        retypeAfterPause()\n        return\n      }\n      // 타이핑 종료\n      textElement.style.setProperty('--cursor-opacity', 0) // 타이핑 종료 후 커서 깜빡이도록\n      interval && clearInterval(interval)\n    }\n\n    // 3. 일시 정지 후, 문구 초기화한 뒤 타이핑 재시작하는 함수\n    const retypeAfterPause = function () {\n      textElement.style.setProperty('--cursor-opacity', 0) // 이리 정지하는 동안 커서 깜빡이도록\n      interval && clearInterval(interval) // 기존 setInterval 제거\n\n      // pause 이 후, setInterval 재시작\n      setTimeout(() => {\n        textElement.innerText = '' // 문구 초기화\n        interval = setInterval(typeText, 1000 / speed)\n      }, pause)\n    }\n\n    // 1. setInterval로 타이핑 시작\n    interval = setInterval(typeText, 1000 / speed)\n\n    // clear 함수\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [phrases, speed, pause, isInfinite])\n\n  return <p ref={textElementRef} className=\"type-animation\" style={style}></p>\n}\n\nexport default TypeAnimation\n","import React from 'react'\nimport './style.scss'\nimport GithubIcon from '@assets/svgs/github.svg'\nimport RssIcon from '@assets/svgs/rss.svg'\nimport TypeAnimation from '@components/type-animation'\n\nconst AboutBlog: React.FC = () => {\n  return (\n    <div className=\"about-blog\">\n      <div className=\"about-blog__typing\">\n        <TypeAnimation phrases={['This is TIL Blog']} />\n      </div>\n      <nav className=\"about-blog__navbar\">\n        <ul className=\"about-blog__navbar__menu\">\n          <li className=\"about-blog__navbar__item\">\n            <a href=\"https://github.com/Byongho96/TIL/tree/master\">\n              <GithubIcon />\n            </a>\n          </li>\n          <li className=\"about-blog__navbar__item\">\n            <a href=\"https://byongho96.github.io/TIL/rss\">\n              <RssIcon />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default AboutBlog\n","import React, { useEffect, useRef } from 'react'\nimport './style.scss'\n\ntype props = {\n  color: 'black' | 'white'\n  phrase: string\n  direction?: 'right' | 'left'\n  rotationDeg?: number\n  speed?: number\n}\n\nconst Taping: React.FC = ({\n  color,\n  phrase,\n  direction = 'right',\n  rotationDeg = 0,\n  speed = 1,\n}: props) => {\n  const tapeRef = useRef<HTMLDivElement>(null)\n  const textRef = useRef<HTMLParagraphElement>(null)\n  const position = useRef(0)\n\n  useEffect(() => {\n    const tapeElement = tapeRef.current\n    const textElement = textRef.current\n\n    if (\n      !(tapeElement instanceof HTMLDivElement) ||\n      !(textElement instanceof HTMLParagraphElement)\n    )\n      return\n\n    // 텍스트가 흐르는 방향을 설정\n    let textDirection = 1\n    if (direction === 'right') {\n      tapeElement.style.justifyContent = 'flex-end'\n    } else {\n      tapeElement.style.justifyContent = 'flex-start'\n      textDirection = -1\n    }\n\n    // 테이프 각도 회전\n    tapeElement.style.setProperty('--rotate-deg', `${rotationDeg}deg`)\n\n    // 텍스트를 이동 시키는 함수\n    const moveText = () => {\n      position.current += speed\n      if (position.current > textElement.scrollWidth / 2) {\n        textElement.style.transform = `translateX(0)`\n        position.current = 0\n      }\n      textElement.style.transform = `translateX(${\n        textDirection * position.current\n      }px)`\n    }\n\n    let animationId: number = null\n    // 애니메이션 실행 함수\n    const animate = () => {\n      moveText()\n      animationId = window.requestAnimationFrame(animate) // 희한하게 정의되기 전에 쓰네?\n    }\n\n    // 애니메이션 실행\n    animate()\n\n    return () => {\n      // 애니메이션 clear\n      window.cancelAnimationFrame(animationId)\n    }\n  }, [speed, direction, rotationDeg])\n\n  return (\n    <div ref={tapeRef} className={`tape ${color}`}>\n      <p ref={textRef} className=\"tape__text\">\n        {(phrase + '\\u00a0\\u00a0\\u00a0\\u00a0').repeat(20)}\n      </p>\n    </div>\n  )\n}\n\nexport default Taping\n","import React, { useContext } from 'react'\nimport './style.scss'\nimport Taping from '@components/taping'\nimport { ThemeContext } from '@contexts/theme-context'\n\nconst AboutMe: React.FC = () => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <div className=\"about-me\">\n      <Taping color=\"white\" phrase=\"coming soon\" rotationDeg={10} />\n      <Taping\n        color=\"black\"\n        phrase=\"Lorem ipsum\"\n        rotationDeg={-15}\n        direction=\"left\"\n      />\n      <Taping color=\"white\" phrase=\"coming soon\" rotationDeg={5} />\n      <p className={`about-me__text ${theme}`}>About Me</p>\n    </div>\n  )\n}\n\nexport default AboutMe\n","import * as React from 'react'\nimport './about.scss'\nimport AboutBlog from '@components/about-blog'\nimport AboutMe from '@components/about-me'\nimport SEO from '@components/seo'\nimport type { PageProps } from 'gatsby'\n\nconst AboutPage: React.FC<PageProps> = () => {\n  return (\n    <div className=\"about--layout\">\n      <AboutBlog />\n      <AboutMe />\n    </div>\n  )\n}\n\nexport default AboutPage\n\nexport const Head = () => <SEO title=\"TIL About Page\" pathname=\"/about\" />\n","var React = require('react');\n\nfunction Github (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M10 0C8.68678 0 7.38642 0.258658 6.17317 0.761205C4.95991 1.26375 3.85752 2.00035 2.92893 2.92893C1.05357 4.8043 0 7.34784 0 10C0 14.42 2.87 18.17 6.84 19.5C7.34 19.58 7.5 19.27 7.5 19V17.31C4.73 17.91 4.14 15.97 4.14 15.97C3.68 14.81 3.03 14.5 3.03 14.5C2.12 13.88 3.1 13.9 3.1 13.9C4.1 13.97 4.63 14.93 4.63 14.93C5.5 16.45 6.97 16 7.54 15.76C7.63 15.11 7.89 14.67 8.17 14.42C5.95 14.17 3.62 13.31 3.62 9.5C3.62 8.39 4 7.5 4.65 6.79C4.55 6.54 4.2 5.5 4.75 4.15C4.75 4.15 5.59 3.88 7.5 5.17C8.29 4.95 9.15 4.84 10 4.84C10.85 4.84 11.71 4.95 12.5 5.17C14.41 3.88 15.25 4.15 15.25 4.15C15.8 5.5 15.45 6.54 15.35 6.79C16 7.5 16.38 8.39 16.38 9.5C16.38 13.32 14.04 14.16 11.81 14.41C12.17 14.72 12.5 15.33 12.5 16.26V19C12.5 19.27 12.66 19.59 13.17 19.5C17.14 18.16 20 14.42 20 10C20 8.68678 19.7413 7.38642 19.2388 6.17317C18.7362 4.95991 17.9997 3.85752 17.0711 2.92893C16.1425 2.00035 15.0401 1.26375 13.8268 0.761205C12.6136 0.258658 11.3132 0 10 0Z\",\"fill\":\"black\"}));\n}\n\nGithub.defaultProps = {\"width\":\"20\",\"height\":\"20\",\"viewBox\":\"0 0 20 20\",\"fill\":\"none\"};\n\nmodule.exports = Github;\n\nGithub.default = Github;\n","var React = require('react');\n\nfunction Rss (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M2.18 11.6399C2.75817 11.6399 3.31266 11.8696 3.72149 12.2784C4.13032 12.6873 4.36 13.2418 4.36 13.8199C4.36 14.9999 3.38 15.9999 2.18 15.9999C1 15.9999 0 14.9999 0 13.8199C0 13.2418 0.229678 12.6873 0.638507 12.2784C1.04734 11.8696 1.60183 11.6399 2.18 11.6399ZM0 0.439941C4.12677 0.439941 8.08452 2.07929 11.0026 4.99736C13.9206 7.91543 15.56 11.8732 15.56 15.9999H12.73C12.73 12.6237 11.3888 9.38581 9.00147 6.99847C6.61413 4.61113 3.37621 3.26994 0 3.26994V0.439941ZM0 6.09994C2.62564 6.09994 5.14375 7.14297 7.00036 8.99958C8.85697 10.8562 9.9 13.3743 9.9 15.9999H7.07C7.07 14.1249 6.32513 12.3266 4.99924 11.0007C3.67336 9.67481 1.87508 8.92994 0 8.92994V6.09994Z\",\"fill\":\"black\"}));\n}\n\nRss.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\",\"fill\":\"none\"};\n\nmodule.exports = Rss;\n\nRss.default = Rss;\n"],"names":["_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","useSiteMetadata","seo","url","React","name","content","property","phrases","speed","style","pause","isInfinite","textElementRef","useRef","useEffect","textElement","current","HTMLParagraphElement","textContent","phraseIdx","charIdx","interval","typeText","setProperty","currentPhrase","length","retypeAfterPause","clearInterval","setTimeout","innerText","setInterval","ref","className","AboutBlog","TypeAnimation","href","GithubIcon","RssIcon","color","phrase","direction","rotationDeg","tapeRef","textRef","position","tapeElement","HTMLDivElement","textDirection","justifyContent","animationId","animate","scrollWidth","transform","window","requestAnimationFrame","cancelAnimationFrame","repeat","AboutMe","theme","useContext","ThemeContext","Taping","AboutPage","Head","SEO","Github","props","createElement","defaultProps","module","exports","default","Rss"],"sourceRoot":""}