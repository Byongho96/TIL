{"version":3,"file":"component---src-pages-index-tsx-afff3a2c6c302c156fec.js","mappings":"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","sources":["webpack://byongho-s-til/./src/hooks/use-site-metadata.tsx","webpack://byongho-s-til/./src/components/navigation/style.module.scss","webpack://byongho-s-til/./src/components/color-change/style.module.scss","webpack://byongho-s-til/./src/components/color-change/index.tsx","webpack://byongho-s-til/./src/components/navigation/index.tsx","webpack://byongho-s-til/./src/layouts/navigation-layout/index.tsx","webpack://byongho-s-til/./src/layouts/navigation-layout/style.module.scss","webpack://byongho-s-til/./src/components/index-logo/index.tsx","webpack://byongho-s-til/./src/components/index-logo/style.module.scss","webpack://byongho-s-til/./src/components/index-wheel/style.module.scss","webpack://byongho-s-til/./src/components/index-wheel/index.tsx","webpack://byongho-s-til/./src/hooks/use-categories.tsx","webpack://byongho-s-til/./src/pages/index.tsx","webpack://byongho-s-til/./src/pages/index.module.scss","webpack://byongho-s-til/./src/asset/images/moon-fill.svg","webpack://byongho-s-til/./src/asset/images/sun-fill.svg"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          author\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var navBar = \"style-module--nav-bar--3417e\";\nexport var navLinkText = \"style-module--nav-link-text--1f74e\";\nexport var navLinks = \"style-module--nav-links--64532\";","// extracted by mini-css-extract-plugin\nexport var colorPicker = \"style-module--color-picker--4c5e0\";\nexport var container = \"style-module--container--ca8f7\";","import React, { useState, useEffect } from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport SunIcon from '@asset/images/sun-fill.svg'\r\nimport MoonIcon from '@asset/images/moon-fill.svg'\r\n\r\nconst ColorChange: React.FC = () => {\r\n  const [theme, setTheme] = useState('light')\r\n  const root = document.querySelector(':root')\r\n\r\n  // 1. 컬러 picker\r\n  // 1.1. localStorage에 저장된 --main-color가 있으면 :root element의 --main-color를 변경\r\n  // 1.2. :root element의 --main-color를 컬러 picker의 value로 설정\r\n  useEffect(() => {\r\n    let mainColor = localStorage.getItem('main-color')\r\n    if (mainColor) {\r\n      root.style.setProperty('--main-color', mainColor)\r\n    } else {\r\n      mainColor = getComputedStyle(root).getPropertyValue('--main-color')\r\n    }\r\n    document.querySelector('#color-picker').value = mainColor\r\n  }, [])\r\n\r\n  // 1.3.컬러 picker에서 컬러를 선택하면 :root element의 --main-color를 변경\r\n  // 1.4. localStorage에 --main-color 저장\r\n  const handleChange = (e) => {\r\n    root.style.setProperty('--main-color', e.target.value)\r\n    localStorage.setItem('main-color', e.target.value)\r\n  }\r\n\r\n  // 2. 다크모드\r\n  // 2.1. 시스템의 컬러 모드(prefers-color-scheme) 가 변경될 때마다 isDark 병경\r\n  useEffect(() => {\r\n    const mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)')\r\n    const toggleDark = (e) => {\r\n      setTheme(e.matches ? 'dark' : 'light')\r\n    }\r\n\r\n    mediaQueryList.addEventListener('change', toggleDark)\r\n    return () => {\r\n      mediaQueryList.removeEventListener('change', toggleDark)\r\n    }\r\n  }, [])\r\n\r\n  // 2.2. 클릭 이벤트 시마다 isDark 변경\r\n  const handleClick = () => {\r\n    setTheme((theme) => (theme === 'light' ? 'dark' : 'light'))\r\n  }\r\n\r\n  // 2.3. isDark 값에 따라 :root element의 classList에 dark 추가/제거\r\n  useEffect(() => {\r\n    if (theme === 'dark') {\r\n      root.classList.add('dark')\r\n    } else {\r\n      root.classList.remove('dark')\r\n    }\r\n  }, [theme])\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <input\r\n        id=\"color-picker\"\r\n        className={styles.colorPicker}\r\n        type=\"color\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className={`${styles.theme} ${styles[theme]}`} onClick={handleClick}>\r\n        {theme === 'dark' ? <SunIcon /> : <MoonIcon />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColorChange\r\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\r\nimport ColorChange from '@components/color-change'\r\n\r\nconst Navigation: React.FC = () => {\r\n  const { author } = useSiteMetadata()\r\n  return (\r\n    <div className={styles.navBar}>\r\n      <Link to=\"/\" className={styles.navLinkText}>\r\n        {author}\r\n      </Link>\r\n      <ColorChange />\r\n      <nav>\r\n        <ul className={styles.navLinks}>\r\n          <li>\r\n            <Link to=\"/\" className={styles.navLinkText}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\" className={styles.navLinkText}>\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/posts\" className={styles.navLinkText}>\r\n              Posts\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import * as React from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport Navigation from '@components/navigation'\r\n\r\nconst NavigationLayout = ({ children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Navigation />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationLayout\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--24ac7\";","import * as React from 'react'\r\nimport * as styles from './style.module.scss'\r\n\r\nconst IndexLogo: React.FC = () => {\r\n  return (\r\n    <div className={styles.indexLogo}>\r\n      <p>TODAY</p>\r\n      <p>I</p>\r\n      <p>LEARNED</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndexLogo\r\n","// extracted by mini-css-extract-plugin\nexport var indexLogo = \"style-module--index-logo--98cf0\";","// extracted by mini-css-extract-plugin\nexport var animationLeftFlowing = \"style-module--animation-left-flowing--4cc64\";\nexport var categories = \"style-module--categories--8e8ce\";\nexport var stop = \"style-module--stop--4e766\";","import React, { useState, useRef, useEffect } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useCategories } from '@hooks/use-categories'\r\n\r\nconst IndexWheel: React.FC = () => {\r\n  const data = useCategories()\r\n  data.sort(() => 0.5 - Math.random()) // 데이터 섞기\r\n\r\n  // 이벤트 발생 element에 styles.stop 클래스 추가\r\n  const handleMouseEnter = (e: React.MouseEvent<HTMLUListElement>) => {\r\n    const target = e.target as HTMLUListElement\r\n    target.classList.add(styles.stop)\r\n  }\r\n\r\n  // 이벤트 발생 element에 styles.stop 클래스 추가\r\n  const handleMouseLeave = (e: React.MouseEvent<HTMLUListElement>) => {\r\n    const target = e.target as HTMLUListElement\r\n    target.classList.remove(styles.stop)\r\n  }\r\n\r\n  const handleClick = (name: string) => {\r\n    navigate(`/posts/${name}`)\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className={styles.categories}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}>\r\n      {data.slice(0, 15).map((category) => (\r\n        <li key={category.id} onClick={() => handleClick(category.name)}>\r\n          {category.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default IndexWheel\r\n","import { graphql, useStaticQuery } from 'gatsby'\r\n\r\n// 'posts' 폴더의 하위 디렉토리가 곧 카테고리임을 가정\r\n// 'posts' 폴더의 하위 디렉토리들을 리스트 형태로 반환하는 훅\r\n\r\n// 이미지 관련 폴더 제거 : name: { nin: [\"image\", \"images\", \"asset\", \"assets\"] }\r\n// 최상단 posts 폴더 제거 : relativePath: { ne: \"\" }\r\n\r\nexport const useCategories = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allDirectory(\r\n        filter: {\r\n          sourceInstanceName: { eq: \"posts\" }\r\n          name: { nin: [\"image\", \"images\", \"asset\", \"assets\"] }\r\n          relativeDirectory: { nin: [\"VanillaWeb\"] }\r\n          relativePath: { ne: \"\" }\r\n        }\r\n      ) {\r\n        nodes {\r\n          id\r\n          name\r\n          relativeDirectory\r\n          relativePath\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.allDirectory.nodes\r\n}\r\n","import * as React from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport * as styles from './index.module.scss'\r\nimport IndexLogo from '@components/index-logo'\r\nimport Layout from '@layouts/navigation-layout'\r\nimport IndexWheel from '@components/index-wheel'\r\n\r\nconst IndexPage: React.FC<PageProps> = () => {\r\n  return (\r\n    <Layout>\r\n      <div className={styles.container}>\r\n        <div>\r\n          <IndexLogo />\r\n        </div>\r\n        <div className={styles.wheel}>\r\n          <IndexWheel />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const Head: HeadFC = () => <title>Home Page</title>\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"index-module--container--d86ba\";\nexport var wheel = \"index-module--wheel--817ae\";","var React = require('react');\n\nfunction MoonFill (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M11.38 2.01898C10.6431 2.7056 10.0521 3.53361 9.64219 4.4536C9.23227 5.37359 9.01185 6.36673 8.99408 7.37376C8.97632 8.38078 9.16156 9.38108 9.53877 10.315C9.91598 11.2488 10.4774 12.0972 11.1896 12.8094C11.9018 13.5216 12.7501 14.083 13.684 14.4602C14.6179 14.8374 15.6182 15.0227 16.6252 15.0049C17.6323 14.9871 18.6254 14.7667 19.5454 14.3568C20.4654 13.9469 21.2934 13.3559 21.98 12.619C21.8234 15.1591 20.7039 17.5439 18.8496 19.2871C16.9953 21.0302 14.546 22.0005 12.001 22C6.477 22 2 17.523 2 12C2 6.68498 6.146 2.33898 11.38 2.01898Z\",\"fill\":\"black\"}));\n}\n\nMoonFill.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = MoonFill;\n\nMoonFill.default = MoonFill;\n","var React = require('react');\n\nfunction SunFill (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z\",\"fill\":\"black\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M12 21V22M21 12H22M12 3V2M3 12H2\",\"stroke\":\"black\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M18.5 18.5L19 19M18.5 5.5L19 5M5.5 5.5L5 5M5.5 18.5L5 19\",\"stroke\":\"black\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":2})]);\n}\n\nSunFill.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = SunFill;\n\nSunFill.default = SunFill;\n"],"names":["useSiteMetadata","useStaticQuery","site","siteMetadata","navLinkText","colorPicker","theme","setTheme","useState","root","document","querySelector","useEffect","mainColor","localStorage","getItem","style","setProperty","getComputedStyle","getPropertyValue","value","mediaQueryList","window","matchMedia","toggleDark","e","matches","addEventListener","removeEventListener","classList","add","remove","React","className","styles","id","type","onChange","target","setItem","onClick","SunIcon","MoonIcon","author","Link","to","ColorChange","_ref","children","Navigation","stop","data","allDirectory","nodes","sort","Math","random","onMouseEnter","onMouseLeave","slice","map","category","key","handleClick","name","navigate","Layout","IndexLogo","IndexWheel","Head","MoonFill","props","createElement","defaultProps","module","exports","default","SunFill"],"sourceRoot":""}