{"version":3,"file":"component---src-pages-about-tsx-8234e85166e0d851ca16.js","mappings":"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","sources":["webpack://byongho-s-til/./src/components/type-animation/index.tsx","webpack://byongho-s-til/./src/components/about-blog/index.tsx","webpack://byongho-s-til/./src/components/about-me/index.tsx","webpack://byongho-s-til/./src/components/taping/index.tsx","webpack://byongho-s-til/./src/pages/about.tsx","webpack://byongho-s-til/./src/assets/svgs/github.svg","webpack://byongho-s-til/./src/assets/svgs/gmail.svg","webpack://byongho-s-til/./src/assets/svgs/linkedin.svg"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport './style.scss'\n\ntype Props = {\n  phrases: string[] // 순서대로 타이핑 할 문구 리스트\n  speed?: number // 타이핑 속도\n  style?: object // 인라인 스타일 객체\n  pause?: number // 한 개의 텍스트가 완성되고, 다음 텍스트가 타이핑 되기 전 대기시간\n  isInfinite?: boolean // 타이핑 무한 반복 여부\n}\n\nconst TypeAnimation: React.FC<Props> = ({\n  phrases,\n  speed = 5,\n  style = {},\n  pause = 2000, // 기본 대기 시간 2초\n  isInfinite = false,\n}) => {\n  const textElementRef = useRef<HTMLParagraphElement>(null)\n\n  useEffect(() => {\n    const textElement = textElementRef.current // 타이핑을 입력한 타겟 Element\n\n    if (!(textElement instanceof HTMLParagraphElement)) return\n\n    textElement.textContent = ''\n\n    let phraseIdx = 0 // 현재 타이핑하는 문구의 인덱스\n    let charIdx = 0 // 현재 타이핑하는 글자 인덱스\n    let interval: number = null // setInterval을 담을 변수\n\n    // 2. 타이핑 메인 함수\n    const typeText = function () {\n      textElement.style.setProperty('--cursor-opacity', 1) // 타이핑 하는 동안은 커서 깜빡이지 않도록\n      const currentPhrase = phrases[phraseIdx] // 현재 타이핑하는 문구\n\n      // 현재 문구 타이핑이 안 끝났을 경우\n      if (charIdx < currentPhrase.length) {\n        textElement.textContent += currentPhrase[charIdx++] // innerText 대신 textContent 사용해야 공백을 담을 수 있음\n        return\n      }\n      // 현재 문구가 마지막 문구가 아닐 경우\n      if (phraseIdx < phrases.length - 1) {\n        phraseIdx++ // 다음 문구로 이동\n        charIdx = 0 // 첫 번째 글자로 이동\n        retypeAfterPause()\n        return\n      }\n      // 무한 반복이 설정되어 있을 경우\n      if (isInfinite) {\n        phraseIdx = 0 // 처음 문구로 이동\n        charIdx = 0 // 첫 번재 글자로 이동\n        retypeAfterPause()\n        return\n      }\n      // 타이핑 종료\n      textElement.style.setProperty('--cursor-opacity', 0) // 타이핑 종료 후 커서 깜빡이도록\n      interval && clearInterval(interval)\n    }\n\n    // 3. 일시 정지 후, 문구 초기화한 뒤 타이핑 재시작하는 함수\n    const retypeAfterPause = function () {\n      textElement.style.setProperty('--cursor-opacity', 0) // 이리 정지하는 동안 커서 깜빡이도록\n      interval && clearInterval(interval) // 기존 setInterval 제거\n\n      // pause 이 후, setInterval 재시작\n      setTimeout(() => {\n        textElement.innerText = '' // 문구 초기화\n        interval = setInterval(typeText, 1000 / speed)\n      }, pause)\n    }\n\n    // 1. setInterval로 타이핑 시작\n    interval = setInterval(typeText, 1000 / speed)\n\n    // clear 함수\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [phrases, speed, pause, isInfinite])\n\n  return <p ref={textElementRef} className=\"type-animation\" style={style}></p>\n}\n\nexport default TypeAnimation\n","import React from 'react'\nimport './style.scss'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport TypeAnimation from '@components/type-animation'\n\nconst AboutBlog: React.FC = () => {\n  return (\n    <article className=\"about-blog\">\n      <section className=\"about-blog__header\">\n        <h1 className=\"about-blog__header__title\">About Blog</h1>\n        <a\n          href=\"/TIL/posts/Gatsby/\"\n          className=\"about-blog__header__typing\"\n          tabIndex={-1}\n        >\n          <TypeAnimation phrases={['블로그 제작 시리즈 Click Here!']} />\n        </a>\n      </section>\n      <section className=\"about-blog__content\">\n        <h2>기획 배경</h2>\n        <div>\n          <p>\n            SSAFY에서 TIL을 작성하라는 강권에 못이겨 껍데기같은 문서들을\n            싸내려가기 시작했다. 그런데 그것도 꽤 쌓이니까 뿌듯해서 남들에게\n            보여주고 싶었다. 마침 교육도 끝나서 시간이 남는터라 직접 블로그를\n            만들기로 했다. 원래는 상남자답게 바닐라 자바스크립트로 만들려했는데,\n            5시간만에 포기하고 Gatsby로 갈아탔다.\n          </p>\n        </div>\n      </section>\n      {/* <Taping color=\"black\" phrase=\"coming soon\" rotationDeg={2} /> */}\n      <section className=\"about-blog__content\">\n        <h2>쓰인 기술</h2>\n        <h3>Gatsby</h3>\n        <div>\n          <p>\n            바닐라 자바스크립트에 손사래를 치고 방황하고 있을 때, 마치 누군가\n            나를 위해 준비한 동앗줄 같았다. 공식문서의 튜토리얼부터 '마크다운\n            파일로 블로그 만들기'이다. 그렇다고 모든 과정이 생각처럼 쉽게 풀린\n            것은 아니었지만, 여전히 새 프레임워크를 적용한 것 치고는 수월하게\n            블로그를 만든 것 같다. Next.js로 만들껄...\n          </p>\n        </div>\n        <h3>GraphQL</h3>\n        <div>\n          <p>\n            Gatsby를 선택하니까 GraphQL이라는게 자매상품처럼 딸려왔다. Gatsby의\n            플러그인과 결합해서 파일 시스템으로부터 자동으로 GraphQL 노드를\n            생성한다. 덕분에 손쉽게 블로그를 만들 수 있었다. 말은 이렇게 했는데,\n            솔직히 지금도 녀석의 정체를 잘 모르겠다. 실제 백엔드 프레임워크에\n            GraphQL을 적용해봐야지 감이 올 것 같다.\n          </p>\n        </div>\n        <h3>Sass & CSS BEM</h3>\n        <div>\n          <p>\n            Sass와 CSS BEM 네이밍 규칙을 적용했다. BEM 네이밍을 쓰니까 뭔가\n            있어보여서 기분이 좋다. 그런데 지금 보니까 너무 남발해서 도대체 무슨\n            클래스인지 나조차도 모르겠다. 이제는 신 만이 아실 것이다.\n          </p>\n        </div>\n      </section>\n      {/* <Taping color=\"white\" phrase=\"coming soon\" rotationDeg={5} /> */}\n      <section className=\"about-blog__content\">\n        <h2>블로그 특징</h2>\n        <h3>전형적인 반응형 UI</h3>\n        <StaticImage src=\"../../assets/images/mockup.png\" alt=\"profile image\" />\n        <div>\n          <p>\n            \"3단 메뉴바 형식 너무 식상하지 않음?\" 이라고 나도 생각했다. 그런데\n            곰곰히 생각해보니 그 식상한 걸 구현해본 적이 없더라. 그래서 이번에\n            한 번 구현해보기로 했다. 반응형 UI도 4가지 기기에 따라 구현했는데\n            심히 노가다스러웠다. 현업에서도 이렇게 하는지가 궁금하다.\n          </p>\n        </div>\n        <h3>메인 컬러 커스텀</h3>\n        <div>\n          <p>\n            네비게이션바 왼쪽 상단에서 메인 컬러를 커스텀할 수 있다. 메인컬러를\n            CSS 변수로 사용하기 때문에 이곳저곳의 색깔이 죄다 바뀐다. 그런데\n            사실 고백하자면, CSS 변수를 이번에 처음 알게되었다. 사람이 이래서\n            기본기를 착실하게 다져야한다.\n          </p>\n        </div>\n        <h3>다크 모드</h3>\n        <div>\n          <p>\n            나름 다크모드를 설계하는데 공을 들였다. prefers-color-scheme 미디어\n            쿼리랑 세션 스토리지를 혼용했는데, 그럼에도 flicker 현상을 막을\n            방법은 찾지 못했다. SSG방식의 웹사이트에서 flicker 현상을 막는\n            방법을 아시면 제발 메일로 알려줬으면 좋겠다.\n          </p>\n        </div>\n        <h3>검색 기능</h3>\n        <div>\n          <p>\n            fuse.js를 기반으로 만들어진 gatsby-plugin-fusejs를 이용해서\n            구현했다. 원래 단순히 반복문으로 구현할 생각이었는데, 하마터면\n            시간과 효율 모두 놓칠 뻔했다. 자체적으로 인덱스 트리를 만들기 때문에\n            유사 검색도 가능한데, 원리는 잘 모르겠고 아무튼 신기하다.\n          </p>\n        </div>\n        <h3>댓글 및 좋아요</h3>\n        <div>\n          <p>\n            giscus라는 Git API 기반 라이브러리를 이용해서 구현했다. 서버가\n            없어서 당연히 댓글 기능 같은 건 구현 못할 줄 알았는데, 다른\n            개발자들이 다 방법을 만들어놓았다.\n          </p>\n        </div>\n      </section>\n      <section className=\"about-blog__content\">\n        <h2>개발 후기</h2>\n        <div>\n          <p>\n            전체적으로 기본기를 다질 수 있던 프로젝트였다고 생각한다. 반응형 UI,\n            SVG 애니메이션, 웹 접근성, SEO 등을 공부하고 적용했다. 물론 그것도\n            3달쯤 지나서 보니 죄다 거지같다. 그만큼 성장했다는 의미로\n            받아들이려고 한다.\n          </p>\n          <p>\n            원래 목표는 많이 싼 마크다운 문서를 자랑하는 거였는데, 방문자 수를\n            보니 글러먹은 것 같다. 하라는 SEO는 다했는데 어디서부터 잘못된건지\n            도저히 모르겠다. 그럼에도 불구하고 블로그가 있으니까, 글 하나를\n            쓰더라도 좀 더 정성스럽게 작성하게 된다는 장점이 있다.\n          </p>\n        </div>\n      </section>\n    </article>\n  )\n}\n\nexport default AboutBlog\n","import React, { useContext } from 'react'\nimport './style.scss'\nimport GithubIcon from '@assets/svgs/github.svg'\nimport GmailIcon from '@assets/svgs/gmail.svg'\nimport LinkedinIcon from '@assets/svgs/linkedin.svg'\nimport ProfileImage from '@components/profile-image'\nimport TypeAnimation from '@components/type-animation'\nimport { ThemeContext } from '@contexts/theme-context'\n\nconst AboutMe: React.FC = () => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <article className=\"about-me\">\n      <h1 className=\"about-me__title\">About Me</h1>\n      <div className=\"about-me__content\">\n        <div className=\"about-me__content__image\">\n          <ProfileImage />\n          <nav className=\"about-me__content__image__links\">\n            <a href=\"https://github.com/Byongho96/\" aria-label=\"작성자의 깃헙\">\n              <GithubIcon />\n            </a>\n            <a\n              href=\"https://www.linkedin.com/in/byongho-lee-b445ba22a\"\n              aria-label=\"작성자의 링크드인\"\n            >\n              <LinkedinIcon />\n            </a>\n            <a\n              href=\"mailto:unlike96@gmail.com\"\n              aria-label=\"작성자에게 구글 메일 전송\"\n            >\n              <GmailIcon />\n            </a>\n          </nav>\n        </div>\n        <div className=\"about-me__content__typing\">\n          <TypeAnimation phrases={['상상을 구현하려고 공부합니다']} />\n        </div>\n        <div className=\"about-me__content__writing\">\n          <p>\n            건축공학과 전기전자공학을 이중전공하는 패기를 부리고서는, 하라는\n            취직은 안하고 프로그래밍을 공부하고 있다.\n          </p>\n          <p>\n            전공수업에서 대륙 간 해저케이블이 놓여있다는 걸 듣고, 인터넷에\n            흥미를 느낀게 모든 일의 발단이었다.\n          </p>\n          <p>\n            컴퓨터만 있으면 머릿속 생각을 구현하고, 인터넷으로 전세계에 선보일\n            수 있다니 아무리 생각해도 치트키 같다.\n          </p>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default AboutMe\n","import React, { useEffect, useRef } from 'react'\nimport './style.scss'\n\ntype props = {\n  color: 'black' | 'white'\n  phrase: string\n  direction?: 'right' | 'left'\n  rotationDeg?: number\n  speed?: number\n}\n\nconst Taping: React.FC = ({\n  color,\n  phrase,\n  direction = 'right',\n  rotationDeg = 0,\n  speed = 1,\n}: props) => {\n  const tapeRef = useRef<HTMLDivElement>(null)\n  const textRef = useRef<HTMLSpanElement>(null)\n  const position = useRef(0)\n\n  useEffect(() => {\n    const tapeElement = tapeRef.current\n    const textElement = textRef.current\n\n    if (\n      !(tapeElement instanceof HTMLDivElement) ||\n      !(textElement instanceof HTMLSpanElement)\n    )\n      return\n\n    // 텍스트가 흐르는 방향을 설정\n    let textDirection = 1\n    if (direction === 'right') {\n      tapeElement.style.justifyContent = 'flex-end'\n    } else {\n      tapeElement.style.justifyContent = 'flex-start'\n      textDirection = -1\n    }\n\n    // 테이프 각도 회전\n    tapeElement.style.setProperty('--rotate-deg', `${rotationDeg}deg`)\n\n    // 텍스트를 이동 시키는 함수\n    const moveText = () => {\n      position.current += speed\n      if (position.current > textElement.scrollWidth / 2) {\n        textElement.style.transform = `translateX(0)`\n        position.current = 0\n      }\n      textElement.style.transform = `translateX(${\n        textDirection * position.current\n      }px)`\n    }\n\n    let animationId: number = null\n    // 애니메이션 실행 함수\n    const animate = () => {\n      moveText()\n      animationId = window.requestAnimationFrame(animate) // 희한하게 정의되기 전에 쓰네?\n    }\n\n    // 애니메이션 실행\n    animate()\n\n    return () => {\n      // 애니메이션 clear\n      window.cancelAnimationFrame(animationId)\n    }\n  }, [speed, direction, rotationDeg])\n\n  return (\n    <div ref={tapeRef} className={`tape ${color}`}>\n      <span ref={textRef} className=\"tape__text\">\n        {(phrase + '\\u00a0\\u00a0\\u00a0\\u00a0').repeat(20)}\n      </span>\n    </div>\n  )\n}\n\nexport default Taping\n","import * as React from 'react'\nimport './about.scss'\nimport AboutBlog from '@components/about-blog'\nimport AboutMe from '@components/about-me'\nimport SEO from '@components/seo'\nimport Taping from '@components/taping'\nimport type { PageProps } from 'gatsby'\n\nconst AboutPage: React.FC<PageProps> = () => {\n  return (\n    <div className=\"about--layout\">\n      <div className=\"about__article\">\n        <AboutMe />\n      </div>\n      <Taping\n        color=\"white\"\n        phrase=\"Why it's not working...\"\n        rotationDeg={5}\n        direction=\"right\"\n      />\n      <Taping\n        color=\"black\"\n        phrase=\"Why am I crying\"\n        rotationDeg={-9}\n        direction=\"left\"\n      />\n      <div className=\"about__article\">\n        <AboutBlog />\n      </div>\n      <Taping\n        color=\"white\"\n        phrase=\"Why it's working...\"\n        rotationDeg={6}\n        direction=\"right\"\n      />\n    </div>\n  )\n}\n\nexport default AboutPage\n\nexport const Head = () => <SEO title=\"TIL About Page\" pathname=\"/about\" />\n","var React = require('react');\n\nfunction Github (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M10 0C8.68678 0 7.38642 0.258658 6.17317 0.761205C4.95991 1.26375 3.85752 2.00035 2.92893 2.92893C1.05357 4.8043 0 7.34784 0 10C0 14.42 2.87 18.17 6.84 19.5C7.34 19.58 7.5 19.27 7.5 19V17.31C4.73 17.91 4.14 15.97 4.14 15.97C3.68 14.81 3.03 14.5 3.03 14.5C2.12 13.88 3.1 13.9 3.1 13.9C4.1 13.97 4.63 14.93 4.63 14.93C5.5 16.45 6.97 16 7.54 15.76C7.63 15.11 7.89 14.67 8.17 14.42C5.95 14.17 3.62 13.31 3.62 9.5C3.62 8.39 4 7.5 4.65 6.79C4.55 6.54 4.2 5.5 4.75 4.15C4.75 4.15 5.59 3.88 7.5 5.17C8.29 4.95 9.15 4.84 10 4.84C10.85 4.84 11.71 4.95 12.5 5.17C14.41 3.88 15.25 4.15 15.25 4.15C15.8 5.5 15.45 6.54 15.35 6.79C16 7.5 16.38 8.39 16.38 9.5C16.38 13.32 14.04 14.16 11.81 14.41C12.17 14.72 12.5 15.33 12.5 16.26V19C12.5 19.27 12.66 19.59 13.17 19.5C17.14 18.16 20 14.42 20 10C20 8.68678 19.7413 7.38642 19.2388 6.17317C18.7362 4.95991 17.9997 3.85752 17.0711 2.92893C16.1425 2.00035 15.0401 1.26375 13.8268 0.761205C12.6136 0.258658 11.3132 0 10 0Z\",\"fill\":\"black\"}));\n}\n\nGithub.defaultProps = {\"width\":\"20\",\"height\":\"20\",\"viewBox\":\"0 0 20 20\",\"fill\":\"none\"};\n\nmodule.exports = Github;\n\nGithub.default = Github;\n","var React = require('react');\n\nfunction Gmail (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M24 3.45709V17.3661C24 18.2701 23.268 19.0021 22.364 19.0021H18.545V9.73009L12 14.6401L5.455 9.73009V19.0031H1.636C1.42107 19.0031 1.20825 18.9607 1.0097 18.8785C0.811145 18.7962 0.63075 18.6756 0.47882 18.5236C0.32689 18.3715 0.206404 18.1911 0.124246 17.9925C0.0420884 17.7939 -0.000131068 17.581 3.05652e-07 17.3661V3.45709C3.05652e-07 1.43409 2.309 0.27909 3.927 1.49309L5.455 2.64009L12 7.54809L18.545 2.63809L20.073 1.49309C21.69 0.280089 24 1.43409 24 3.45709Z\",\"fill\":\"black\"}));\n}\n\nGmail.defaultProps = {\"width\":\"24\",\"height\":\"20\",\"viewBox\":\"0 0 24 20\",\"fill\":\"none\"};\n\nmodule.exports = Gmail;\n\nGmail.default = Gmail;\n","var React = require('react');\n\nfunction Linkedin (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M16 0C16.5304 0 17.0391 0.210714 17.4142 0.585786C17.7893 0.960859 18 1.46957 18 2V16C18 16.5304 17.7893 17.0391 17.4142 17.4142C17.0391 17.7893 16.5304 18 16 18H2C1.46957 18 0.960859 17.7893 0.585786 17.4142C0.210714 17.0391 0 16.5304 0 16V2C0 1.46957 0.210714 0.960859 0.585786 0.585786C0.960859 0.210714 1.46957 0 2 0H16ZM15.5 15.5V10.2C15.5 9.33539 15.1565 8.5062 14.5452 7.89483C13.9338 7.28346 13.1046 6.94 12.24 6.94C11.39 6.94 10.4 7.46 9.92 8.24V7.13H7.13V15.5H9.92V10.57C9.92 9.8 10.54 9.17 11.31 9.17C11.6813 9.17 12.0374 9.3175 12.2999 9.58005C12.5625 9.8426 12.71 10.1987 12.71 10.57V15.5H15.5ZM3.88 5.56C4.32556 5.56 4.75288 5.383 5.06794 5.06794C5.383 4.75288 5.56 4.32556 5.56 3.88C5.56 2.95 4.81 2.19 3.88 2.19C3.43178 2.19 3.00193 2.36805 2.68499 2.68499C2.36805 3.00193 2.19 3.43178 2.19 3.88C2.19 4.81 2.95 5.56 3.88 5.56ZM5.27 15.5V7.13H2.5V15.5H5.27Z\",\"fill\":\"black\"}));\n}\n\nLinkedin.defaultProps = {\"width\":\"18\",\"height\":\"18\",\"viewBox\":\"0 0 18 18\",\"fill\":\"none\"};\n\nmodule.exports = Linkedin;\n\nLinkedin.default = Linkedin;\n"],"names":["_ref","phrases","speed","style","pause","isInfinite","textElementRef","useRef","useEffect","textElement","current","HTMLParagraphElement","textContent","phraseIdx","charIdx","interval","typeText","setProperty","currentPhrase","length","retypeAfterPause","clearInterval","setTimeout","innerText","setInterval","React","ref","className","AboutBlog","href","tabIndex","TypeAnimation","StaticImage","src","alt","AboutMe","theme","useContext","ThemeContext","ProfileImage","GithubIcon","LinkedinIcon","GmailIcon","color","phrase","direction","rotationDeg","tapeRef","textRef","position","tapeElement","HTMLDivElement","HTMLSpanElement","textDirection","justifyContent","animationId","animate","scrollWidth","transform","window","requestAnimationFrame","cancelAnimationFrame","repeat","AboutPage","Taping","Head","SEO","title","pathname","Github","props","createElement","defaultProps","module","exports","default","Gmail","Linkedin"],"sourceRoot":""}