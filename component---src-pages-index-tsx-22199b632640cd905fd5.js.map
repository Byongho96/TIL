{"version":3,"file":"component---src-pages-index-tsx-22199b632640cd905fd5.js","mappings":"2KAEWA,EAAc,qCCiCzB,MA9B6B,KAC3B,MAAM,MAAEC,ICHKC,EAAAA,EAAAA,gBAAe,cAahBC,KAAKC,aDTjB,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UDPc,kCCQjBD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIF,UAAWG,GACrBR,GAEHI,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDVU,kCCWZD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIF,UAAWG,GAAoB,SAI9CJ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,SAASF,UAAWG,GAAoB,UAInDJ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,SAASF,UAAWG,GAAoB,YAMnD,EElBV,MATyBC,IAAmB,IAAlB,SAAEC,GAAU,EACpC,OACEN,EAAAA,cAAAA,MAAAA,CAAKC,UCLc,kCDMjBD,EAAAA,cAACO,EAAU,MACVD,EACG,C,4GEIV,MAV4B,IAExBN,EAAAA,cAAAA,MAAAA,CAAKC,UCJc,mCDKjBD,EAAAA,cAAAA,IAAAA,KAAG,SACHA,EAAAA,cAAAA,IAAAA,KAAG,KACHA,EAAAA,cAAAA,IAAAA,KAAG,Y,oBELEQ,EAAO,4BCoClB,MAlC6B,KAC3B,MAAMC,GCGOZ,EAAAA,EAAAA,gBAAe,YAoBhBa,aAAaC,MDtBzBF,EAAKG,MAAK,IAAM,GAAMC,KAAKC,WAkB3B,OACEd,EAAAA,cAAAA,KAAAA,CACEC,UDzBkB,kCC0BlBc,aAlBsBC,IACTA,EAAEC,OACVC,UAAUC,IAAIf,EAAY,EAiB/BgB,aAbsBJ,IACTA,EAAEC,OACVC,UAAUG,OAAOjB,EAAY,GAYjCK,EAAKa,MAAM,EAAG,IAAIC,KAAKC,GACtBxB,EAAAA,cAAAA,KAAAA,CAAIyB,IAAKD,EAASE,GAAIC,QAAS,KAAMC,OAVtBC,EAUkCL,EAASK,UAT9DC,EAAAA,EAAAA,UAAS,UAAUD,GADAA,KAUiD,GAC7DL,EAASK,QAGX,EEbT,MAfuC,IAEnC7B,EAAAA,cAAC+B,EAAAA,EAAM,KACL/B,EAAAA,cAAAA,MAAAA,CAAKC,UCTY,kCDUfD,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACgC,EAAS,OAEZhC,EAAAA,cAAAA,MAAAA,CAAKC,UCZM,8BDaTD,EAAAA,cAACiC,EAAU,SASd,MAAMC,EAAe,IAAMlC,EAAAA,cAAAA,QAAAA,KAAO,Y","sources":["webpack://byongho-s-til/./src/components/navigation/style.module.scss","webpack://byongho-s-til/./src/components/navigation/index.tsx","webpack://byongho-s-til/./src/hooks/use-site-metadata.tsx","webpack://byongho-s-til/./src/layouts/navigation-layout/index.tsx","webpack://byongho-s-til/./src/layouts/navigation-layout/style.module.scss","webpack://byongho-s-til/./src/components/index-logo/index.tsx","webpack://byongho-s-til/./src/components/index-logo/style.module.scss","webpack://byongho-s-til/./src/components/index-wheel/style.module.scss","webpack://byongho-s-til/./src/components/index-wheel/index.tsx","webpack://byongho-s-til/./src/hooks/use-categories.tsx","webpack://byongho-s-til/./src/pages/index.tsx","webpack://byongho-s-til/./src/pages/index.module.scss"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--bc714\";\nexport var navLinkText = \"style-module--nav-link-text--1f74e\";\nexport var navLinks = \"style-module--nav-links--64532\";","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\r\n\r\nconst Navigation: React.FC = () => {\r\n  const { owner } = useSiteMetadata()\r\n  return (\r\n    <div className={styles.container}>\r\n      <Link to=\"/\" className={styles.navLinkText}>\r\n        {owner}\r\n      </Link>\r\n      <nav>\r\n        <ul className={styles.navLinks}>\r\n          <li>\r\n            <Link to=\"/\" className={styles.navLinkText}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\" className={styles.navLinkText}>\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/posts\" className={styles.navLinkText}>\r\n              Posts\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import { graphql, useStaticQuery } from 'gatsby'\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          owner\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}\r\n","import * as React from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport Navigation from '@components/navigation'\r\n\r\nconst NavigationLayout = ({ children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Navigation />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationLayout\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--24ac7\";","import * as React from 'react'\r\nimport * as styles from './style.module.scss'\r\n\r\nconst IndexLogo: React.FC = () => {\r\n  return (\r\n    <div className={styles.indexLogo}>\r\n      <p>TODAY</p>\r\n      <p>I</p>\r\n      <p>LEARNED</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndexLogo\r\n","// extracted by mini-css-extract-plugin\nexport var indexLogo = \"style-module--index-logo--98cf0\";","// extracted by mini-css-extract-plugin\nexport var animationLeftFlowing = \"style-module--animation-left-flowing--4cc64\";\nexport var categories = \"style-module--categories--8e8ce\";\nexport var stop = \"style-module--stop--4e766\";","import React, { useState, useRef, useEffect } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\nimport { useCategories } from '@hooks/use-categories'\r\n\r\nconst IndexWheel: React.FC = () => {\r\n  const data = useCategories()\r\n  data.sort(() => 0.5 - Math.random()) // 데이터 섞기\r\n\r\n  // 이벤트 발생 element에 styles.stop 클래스 추가\r\n  const handleMouseEnter = (e: React.MouseEvent<HTMLUListElement>) => {\r\n    const target = e.target as HTMLUListElement\r\n    target.classList.add(styles.stop)\r\n  }\r\n\r\n  // 이벤트 발생 element에 styles.stop 클래스 추가\r\n  const handleMouseLeave = (e: React.MouseEvent<HTMLUListElement>) => {\r\n    const target = e.target as HTMLUListElement\r\n    target.classList.remove(styles.stop)\r\n  }\r\n\r\n  const handleClick = (name: string) => {\r\n    navigate(`/posts/${name}`)\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className={styles.categories}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}>\r\n      {data.slice(0, 15).map((category) => (\r\n        <li key={category.id} onClick={() => handleClick(category.name)}>\r\n          {category.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default IndexWheel\r\n","import { graphql, useStaticQuery } from 'gatsby'\r\n\r\n// 'posts' 폴더의 하위 디렉토리가 곧 카테고리임을 가정\r\n// 'posts' 폴더의 하위 디렉토리들을 리스트 형태로 반환하는 훅\r\n\r\n// 이미지 관련 폴더 제거 : name: { nin: [\"image\", \"images\", \"asset\", \"assets\"] }\r\n// 최상단 posts 폴더 제거 : relativePath: { ne: \"\" }\r\n\r\nexport const useCategories = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allDirectory(\r\n        filter: {\r\n          sourceInstanceName: { eq: \"posts\" }\r\n          name: { nin: [\"image\", \"images\", \"asset\", \"assets\"] }\r\n          relativeDirectory: { nin: [\"VanillaWeb\"] }\r\n          relativePath: { ne: \"\" }\r\n        }\r\n      ) {\r\n        nodes {\r\n          id\r\n          name\r\n          relativeDirectory\r\n          relativePath\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.allDirectory.nodes\r\n}\r\n","import * as React from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport * as styles from './index.module.scss'\r\nimport IndexLogo from '@components/index-logo'\r\nimport Layout from '@layouts/navigation-layout'\r\nimport IndexWheel from '@components/index-wheel'\r\n\r\nconst IndexPage: React.FC<PageProps> = () => {\r\n  return (\r\n    <Layout>\r\n      <div className={styles.container}>\r\n        <div>\r\n          <IndexLogo />\r\n        </div>\r\n        <div className={styles.wheel}>\r\n          <IndexWheel />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const Head: HeadFC = () => <title>Home Page</title>\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"index-module--container--d86ba\";\nexport var wheel = \"index-module--wheel--817ae\";"],"names":["navLinkText","owner","useStaticQuery","site","siteMetadata","React","className","Link","to","styles","_ref","children","Navigation","stop","data","allDirectory","nodes","sort","Math","random","onMouseEnter","e","target","classList","add","onMouseLeave","remove","slice","map","category","key","id","onClick","handleClick","name","navigate","Layout","IndexLogo","IndexWheel","Head"],"sourceRoot":""}