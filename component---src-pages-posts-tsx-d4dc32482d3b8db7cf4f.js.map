{"version":3,"file":"component---src-pages-posts-tsx-d4dc32482d3b8db7cf4f.js","mappings":"2KAwBA,MApB2BA,IAAe,IAAd,KAAEC,GAAM,EAClC,MAAM,GAAEC,EAAE,OAAEC,EAAM,YAAEC,EAAW,QAAEC,GAAYJ,GACvC,KAAEK,EAAI,aAAEC,GAAiBJ,GACzB,MAAEK,EAAK,UAAEC,GAAcL,EAM7B,OACEM,EAAAA,cAAAA,MAAAA,CAAKC,UCbc,iCDaeC,QALhB,MAClBC,EAAAA,EAAAA,UAAS,UAAUN,EAAe,GAKhCG,EAAAA,cAAAA,MAAAA,CAAKC,UCXO,6BDYVD,EAAAA,cAAAA,KAAAA,CAAIC,UCXO,8BDWmBH,GAASF,GACvCI,EAAAA,cAAAA,IAAAA,CAAGC,UCfO,6BDekBF,IAE9BC,EAAAA,cAAAA,IAAAA,CAAGC,UChBY,gCDgBgBN,GAC3B,C,qEE+BV,MAxCgCL,IAKzB,IAL0B,OAC/Bc,EAAM,MACNC,EAAK,WACLC,GAAa,EAAK,YAClBC,EAAc,WACf,EACC,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MAwBzB,OAtBAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAQ,EACZ,MAAMC,EAAcJ,EAAUK,QAcxBC,EAAWC,aAZF,KACbH,EAAYI,aAAeZ,EAAOO,KAC9BA,EAAQP,EAAOa,OAAS,IACtBX,GACFK,EAAQ,EACRC,EAAYI,YAAc,IAE1BE,cAAcJ,GAElB,GAGmC,IAAOT,GAE5C,MAAO,KACLa,cAAcJ,EAAS,CACxB,GACA,IAEDd,EAAAA,cAAAA,OAAAA,CACEmB,IAAKX,EACLP,UC1Cc,8BD2CdmB,MAAO,CACL,iBAAkBb,IACV,C,oJEchB,MAlDsCjB,IAAc,IAAb,KAAE+B,GAAM,EAC7C,OACErB,EAAAA,cAACsB,EAAAA,EAAc,KACbtB,EAAAA,cAAAA,MAAAA,CAAKC,UCbY,kCDcfD,EAAAA,cAAAA,KAAAA,CAAIC,UCbW,mCDcbD,EAAAA,cAACuB,EAAAA,EAAM,CAACnB,OAAO,gBAAgBC,MAAM,IAAIE,YAAY,aAEvDP,EAAAA,cAAAA,MAAAA,CAAKC,UCfS,kCDgBXoB,EAAKG,kBAAkBC,MAAMC,KAAKnC,GACjCS,EAAAA,cAAC2B,EAAAA,EAAQ,CAACC,IAAKrC,EAAKC,GAAID,KAAMA,QAIpCS,EAAAA,cAAC6B,EAAAA,EAAQ,MACM,EAsCd,MAAMC,EAAe,IAAM9B,EAAAA,cAAAA,QAAAA,KAAO,Y","sources":["webpack://byongho-s-til/./src/components/post-item/index.tsx","webpack://byongho-s-til/./src/components/post-item/style.module.scss","webpack://byongho-s-til/./src/components/typing/index.tsx","webpack://byongho-s-til/./src/components/typing/style.module.scss","webpack://byongho-s-til/./src/pages/posts.tsx","webpack://byongho-s-til/./src/pages/posts.module.scss"],"sourcesContent":["import * as React from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport * as styles from './style.module.scss'\r\n\r\nconst PostItem: React.FC = ({ node }) => {\r\n  const { id, parent, frontmatter, excerpt } = node\r\n  const { name, relativePath } = parent\r\n  const { title, createdAt } = frontmatter\r\n\r\n  const handleClick = () => {\r\n    navigate(`/posts/${relativePath}`)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container} onClick={handleClick}>\r\n      <div className={styles.flex}>\r\n        <h3 className={styles.title}>{title || name}</h3>\r\n        <p className={styles.date}>{createdAt}</p>\r\n      </div>\r\n      <p className={styles.excerpt}>{excerpt}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostItem\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--514a1\";\nexport var date = \"style-module--date--7e16c\";\nexport var excerpt = \"style-module--excerpt--5fd4c\";\nexport var flex = \"style-module--flex--37bbb\";\nexport var title = \"style-module--title--dce33\";","import React, { useEffect, useRef } from 'react'\r\nimport * as styles from './style.module.scss'\r\nimport UpIcon from '@assets/svgs/up.svg'\r\n\r\ntype Props = {\r\n  phrase: string\r\n  speed: number\r\n  isInfinite?: boolean\r\n  cursorColor?: string\r\n}\r\n\r\nconst Typing: React.FC<Props> = ({\r\n  phrase,\r\n  speed,\r\n  isInfinite = false,\r\n  cursorColor = '#000000',\r\n}) => {\r\n  const typingRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    let index = 0\r\n    const textElement = typingRef.current\r\n\r\n    const typing = () => {\r\n      textElement.textContent += phrase[index++]\r\n      if (index > phrase.length - 1) {\r\n        if (isInfinite) {\r\n          index = 0\r\n          textElement.textContent = ''\r\n        } else {\r\n          clearInterval(interval)\r\n        }\r\n      }\r\n    }\r\n\r\n    const interval = setInterval(typing, 1000 / speed)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n  return (\r\n    <span\r\n      ref={typingRef}\r\n      className={styles.typing}\r\n      style={{\r\n        '--cursor-color': cursorColor,\r\n      }}></span>\r\n  )\r\n}\r\n\r\nexport default Typing\r\n","// extracted by mini-css-extract-plugin\nexport var blink = \"style-module--blink--38e4a\";\nexport var typing = \"style-module--typing--4294b\";","import * as React from 'react'\r\nimport type { HeadFC, PageProps } from 'gatsby'\r\nimport NavigationLayout from '@layouts/navigation-layout'\r\nimport CategoryLayout from '@layouts/category-layout'\r\nimport { allMarkdownsQuery } from '@queries/index'\r\nimport { graphql } from 'gatsby'\r\nimport PostItem from '@components/post-item'\r\nimport * as styles from './posts.module.scss'\r\nimport ToTheTop from '@components/to-the-top'\r\nimport Typing from '@components/typing'\r\n\r\nconst PostPage: React.FC<PageProps> = ({ data }) => {\r\n  return (\r\n    <CategoryLayout>\r\n      <div className={styles.container}>\r\n        <h1 className={styles.postGroup}>\r\n          <Typing phrase=\"All the Posts\" speed=\"8\" cursorColor=\"#888888\" />\r\n        </h1>\r\n        <div className={styles.postList}>\r\n          {data.allMarkdownRemark.nodes.map((node) => (\r\n            <PostItem key={node.id} node={node} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <ToTheTop />\r\n    </CategoryLayout>\r\n  )\r\n}\r\n{\r\n  /* <h1 id='typing' className={styles.postGroup}>All the Posts</h1> */\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { isCompleted: { eq: true } }\r\n        fileAbsolutePath: { regex: \"/^(?!.*README).*posts.*$/\" }\r\n      }\r\n      sort: { frontmatter: { title: ASC } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        parent {\r\n          ... on File {\r\n            id\r\n            name\r\n            relativePath\r\n          }\r\n        }\r\n        frontmatter {\r\n          title\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostPage\r\n\r\nexport const Head: HeadFC = () => <title>Post Page</title>\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"posts-module--container--db763\";\nexport var postGroup = \"posts-module--post-group--6038b\";\nexport var postList = \"posts-module--post-list--656a8\";"],"names":["_ref","node","id","parent","frontmatter","excerpt","name","relativePath","title","createdAt","React","className","onClick","navigate","phrase","speed","isInfinite","cursorColor","typingRef","useRef","useEffect","index","textElement","current","interval","setInterval","textContent","length","clearInterval","ref","style","data","CategoryLayout","Typing","allMarkdownRemark","nodes","map","PostItem","key","ToTheTop","Head"],"sourceRoot":""}