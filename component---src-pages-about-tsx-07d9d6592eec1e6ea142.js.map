{"version":3,"file":"component---src-pages-about-tsx-07d9d6592eec1e6ea142.js","mappings":"gKAqEA,MA3DgCA,IAKzB,IAL0B,QAC/BC,EAAO,MACPC,EAAK,MACLC,EAAQ,IAAI,WACZC,GAAa,GACd,EACC,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MAkDzB,OAhDAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAY,EACZC,EAAY,EAChB,MAAMC,EAAcL,EAAUM,QAExBC,EAASA,KACb,MAAMC,EAASZ,EAAQO,GAEvB,KAAIC,EAAYI,EAAOC,QAMvB,OAAIN,EAAYP,EAAQa,OAAS,GAC/BL,EAAY,EACZD,SACAO,EAAYZ,IAKVC,GACFK,EAAY,EACZD,EAAY,OACZO,EAAYZ,SAKda,cAAcC,GArBZP,EAAYQ,aAAeL,EAAOJ,IAqBb,EAInBM,EAAeZ,IACnBa,cAAcC,GACdE,YAAW,KACTT,EAAYQ,YAAc,GAC1BD,EAAWG,YAAYR,EAAQ,IAAOV,EAAM,GAC3CC,EAAM,EAGX,IAAIc,EAAWG,YAAYR,EAAQ,IAAOV,GAE1C,MAAO,KACLc,cAAcC,EAAS,CACxB,GACA,IACII,EAAAA,cAAAA,OAAAA,CAAMC,IAAKjB,EAAWkB,UChEX,+BDgE4C,C,qHE9ChE,MAhB4BC,IAExBH,EAAAA,cAAAA,IAAAA,CAAGE,UCLgB,kCDMjBF,EAAAA,cAACI,EAAAA,EAAM,CACLxB,QAAS,CACP,sCACA,4BAEFC,MAAO,EACPwB,YAAY,UACZtB,YAAY,KEuDpB,MA3DyBJ,IAKX,IALY,MACxB2B,EAAK,OACLd,EAAS,cAAa,UACtBe,EAAY,QAAO,MACnB1B,EAAQ,GACF,EACN,MAAM2B,GAAUvB,EAAAA,EAAAA,QAAO,MACjBwB,GAAUxB,EAAAA,EAAAA,QAAO,MA2CvB,OAzCAC,EAAAA,EAAAA,YAAU,KACYsB,EAAQlB,QAA5B,MACMD,EAAcoB,EAAQnB,QAC5B,IAAIoB,EAAgB,EACF,UAAdH,GACFlB,EAAYsB,MAAMC,eAAiB,WACnCF,EAAgB,IAEhBrB,EAAYsB,MAAMC,eAAiB,aACnCF,GAAiB,GAEnB,IAAIG,EAAc,KACdC,EAAW,EAGf,MAYMC,EAAUA,KAXdD,GAAYjC,EACRiC,EAAWzB,EAAY2B,YAAc,IACvC3B,EAAYsB,MAAMM,UAAS,uBAC3BH,EAAW,GAEbzB,EAAYsB,MAAMM,UAAS,eACzBP,EAAgBI,EAAQ,YAO1BD,EAAcK,OAAOC,sBAAsBJ,EAAQ,EAOrD,OAHAA,IAGO,KACLG,OAAOE,qBAAqBP,EAAY,CACzC,GACA,CAAChC,IAGFmB,EAAAA,cAAAA,MAAAA,CAAKC,IAAKO,EAASN,UAAS,QAAUI,GACpCN,EAAAA,cAAAA,IAAAA,CAAGC,IAAKQ,EAASP,UAAU,cACxB,SAAWV,EAAS,QAA4B6B,OAAO,KAEtD,E,UChDV,MAZ0BC,KACxB,MAAM,MAAEC,GAAUvB,EAAAA,WAAiBwB,EAAAA,IACnC,OACExB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,YACbF,EAAAA,cAAAA,IAAAA,CAAGE,UAAS,kBAAoBqB,GAAS,YACzCvB,EAAAA,cAACyB,EAAM,CAACnB,MAAM,UACdN,EAAAA,cAACyB,EAAM,CAACnB,MAAM,QAAQC,UAAU,SAChCP,EAAAA,cAACyB,EAAM,CAACnB,MAAM,UACV,ECEV,MATuCoB,IAEnC1B,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,gBACbF,EAAAA,cAACG,EAAS,MACVH,EAAAA,cAACsB,EAAO,OAOP,MAAMK,EAAeA,IAAM3B,EAAAA,cAAAA,QAAAA,KAAO,a","sources":["webpack://byongho-s-til/./src/components/typing/index.tsx","webpack://byongho-s-til/./src/components/typing/style.module.scss","webpack://byongho-s-til/./src/components/about-logo/index.tsx","webpack://byongho-s-til/./src/components/about-logo/style.module.scss","webpack://byongho-s-til/./src/components/taping/index.tsx","webpack://byongho-s-til/./src/components/about-me/index.tsx","webpack://byongho-s-til/./src/pages/about.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as styles from './style.module.scss'\n\ntype Props = {\n  phrases: string[]\n  speed: number\n  pause?: number\n  isInfinite?: boolean\n}\n\nconst Typing: React.FC<Props> = ({\n  phrases,\n  speed,\n  pause = 2000,\n  isInfinite = false,\n}) => {\n  const typingRef = useRef(null)\n\n  useEffect(() => {\n    let phraseIdx = 0\n    let stringIdx = 0\n    const textElement = typingRef.current\n\n    const typing = () => {\n      const phrase = phrases[phraseIdx]\n      // 1. 문자가 아직 끝나지 않은 경우\n      if (stringIdx < phrase.length) {\n        textElement.textContent += phrase[stringIdx++]\n        return\n      }\n\n      // 2. 끝난 현재 문구가 마지막 문구가 아닌 경우\n      if (phraseIdx < phrases.length - 1) {\n        stringIdx = 0\n        phraseIdx++\n        retypeAfter(pause)\n        return\n      }\n\n      // 3. 마지막 문구인데 무한 반복인 경우\n      if (isInfinite) {\n        stringIdx = 0\n        phraseIdx = 0\n        retypeAfter(pause)\n        return\n      }\n\n      // 4.종료\n      clearInterval(interval)\n    }\n\n    // 다시 타이핑하는 함수\n    const retypeAfter = (pause) => {\n      clearInterval(interval)\n      setTimeout(() => {\n        textElement.textContent = ''\n        interval = setInterval(typing, 1000 / speed)\n      }, pause)\n    }\n\n    let interval = setInterval(typing, 1000 / speed)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n  return <span ref={typingRef} className={styles.typing}></span>\n}\n\nexport default Typing\n","// extracted by mini-css-extract-plugin\nexport var blink = \"style-module--blink--38e4a\";\nexport var typing = \"style-module--typing--4294b\";","import * as React from 'react'\nimport * as styles from './style.module.scss'\nimport Typing from '@components/typing'\n\nconst AboutLogo: React.FC = () => {\n  return (\n    <p className={styles.container}>\n      <Typing\n        phrases={[\n          \"Hi! I'm Frontend Developer, Byongho\",\n          \"I'm Working on this Blog\",\n        ]}\n        speed={7}\n        cursorColor=\"#888888\"\n        isInfinite={true}\n      />\n    </p>\n  )\n}\n\nexport default AboutLogo\n","// extracted by mini-css-extract-plugin\nexport var container = \"style-module--container--ddcb6\";","import React, { useEffect, useRef } from 'react'\nimport './style.scss'\n\ntype props = {\n  color: 'black' | 'white'\n  phrase?: string\n  direction?: 'right' | 'left'\n  speed?: number\n}\n\nconst Taping: React.FC = ({\n  color,\n  phrase = 'coming soon',\n  direction = 'right',\n  speed = 1,\n}: props) => {\n  const tapeRef = useRef(null)\n  const textRef = useRef(null)\n\n  useEffect(() => {\n    const tapeElement = tapeRef.current\n    const textElement = textRef.current\n    let textDirection = 1\n    if (direction === 'right') {\n      textElement.style.justifyContent = 'flex-end'\n      textDirection = 1\n    } else {\n      textElement.style.justifyContent = 'flex-start'\n      textDirection = -1\n    }\n    let animationId = null\n    let position = 0\n\n    // 텍스트를 이동 시키는 함수\n    const moveText = () => {\n      position += speed\n      if (position > textElement.scrollWidth / 3) {\n        textElement.style.transform = `translate3d(0, 0, 0)`\n        position = 0\n      }\n      textElement.style.transform = `translate3d(${\n        textDirection * position\n      }px, 0, 0)`\n    }\n\n    // 애니메이션 실행 함수\n    const animate = () => {\n      moveText()\n      animationId = window.requestAnimationFrame(animate) // 희한하게 정의되기 전에 쓰네?\n    }\n\n    // 애니메이션 실행\n    animate()\n\n    // 애니메이션 clear\n    return () => {\n      window.cancelAnimationFrame(animationId)\n    }\n  }, [speed])\n\n  return (\n    <div ref={tapeRef} className={`tape ${color}`}>\n      <p ref={textRef} className=\"tape__text\">\n        {'start' + (phrase + '\\u00a0\\u00a0\\u00a0\\u00a0').repeat(30)}\n      </p>\n    </div>\n  )\n}\n\nexport default Taping\n","import React from 'react'\nimport './style.scss'\nimport Taping from '@components/taping'\nimport { ThemeContext } from '@contexts/theme-context'\n\nconst AboutMe: React.FC = () => {\n  const { theme } = React.useContext(ThemeContext)\n  return (\n    <div className=\"about-me\">\n      <p className={`about-me__text ${theme}`}>About Me</p>\n      <Taping color=\"white\" />\n      <Taping color=\"black\" direction=\"left\" />\n      <Taping color=\"white\" />\n    </div>\n  )\n}\n\nexport default AboutMe\n","import * as React from 'react'\nimport './about.scss'\nimport type { HeadFC, PageProps } from 'gatsby'\nimport AboutLogo from '@components/about-logo'\nimport AboutMe from '@components/about-me'\n\nconst AboutPage: React.FC<PageProps> = () => {\n  return (\n    <div className=\"about-layout\">\n      <AboutLogo />\n      <AboutMe />\n    </div>\n  )\n}\n\nexport default AboutPage\n\nexport const Head: HeadFC = () => <title>About Page</title>\n"],"names":["_ref","phrases","speed","pause","isInfinite","typingRef","useRef","useEffect","phraseIdx","stringIdx","textElement","current","typing","phrase","length","retypeAfter","clearInterval","interval","textContent","setTimeout","setInterval","React","ref","className","AboutLogo","Typing","cursorColor","color","direction","tapeRef","textRef","textDirection","style","justifyContent","animationId","position","animate","scrollWidth","transform","window","requestAnimationFrame","cancelAnimationFrame","repeat","AboutMe","theme","ThemeContext","Taping","AboutPage","Head"],"sourceRoot":""}