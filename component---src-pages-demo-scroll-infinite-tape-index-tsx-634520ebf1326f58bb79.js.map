{"version":3,"file":"component---src-pages-demo-scroll-infinite-tape-index-tsx-634520ebf1326f58bb79.js","mappings":"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","sources":["webpack://byongho-s-til/./src/components/seo/index.tsx","webpack://byongho-s-til/./src/pages/demo/scroll-infinite-tape/index.tsx"],"sourcesContent":["import React from 'react'\nimport { useSiteMetadata } from '@hooks/use-site-metadata'\n\ninterface Props {\n  title: string\n  description: string\n  pathname: string\n  children: React.ReactNode\n}\n\ntype SeoType = {\n  title: string\n  description: string\n  image: string\n  url: string\n}\n\nconst SEO: React.FC<Props> = ({ title, description, pathname, children }) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n  } = useSiteMetadata()\n\n  const seo: SeoType = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ''}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:site_name\" content={defaultTitle} />\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","import React, { useEffect, useRef } from 'react'\nimport './style.scss'\nimport SEO from '@components/seo'\nimport type { HeadProps } from 'gatsby'\n\nconst ScrollInfiniteTapePage: React.FC = () => {\n  return (\n    <div className=\"scroll-infinite-tape-page\">\n      <ScrollInfiniteTape\n        text=\"Orange is the New Black\"\n        fontColor=\"black\"\n        tapeColor=\"orange\"\n        isRight={false}\n        rotationDeg={5}\n      />\n      <ScrollInfiniteTape\n        text=\"Easy Peasy Lemon Squeezy\"\n        fontColor=\"ivory\"\n        tapeColor=\"gold\"\n        rotationDeg={10}\n      />\n      <ScrollInfiniteTape\n        text=\"Have a good one\"\n        fontColor=\"white\"\n        tapeColor=\"skyblue\"\n        isRight={false}\n        rotationDeg={-12}\n      />\n      <ScrollInfiniteTape\n        text=\"Super Green\"\n        fontColor=\"beige\"\n        tapeColor=\"green\"\n        rotationDeg={5}\n      />\n      <ScrollInfiniteTape\n        text=\"Friday Night\"\n        fontColor=\"pink\"\n        tapeColor=\"black\"\n        isRight={false}\n        rotationDeg={-3}\n      />\n    </div>\n  )\n}\n\nexport default ScrollInfiniteTapePage\n\nexport const Head = ({ location }: HeadProps) => (\n  <SEO\n    title=\"무한 텍스트 스크롤 애니메이션\"\n    decription=\"무한 텍스트 스크롤 예시 화면을 확인해볼 수 있습니다.\"\n    pathname={location.pathname}\n  />\n)\n\ntype Props = {\n  text?: string\n  fontColor?: string\n  tapeColor?: string\n  isRight?: boolean\n  rotationDeg?: number\n}\n\nconst ScrollInfiniteTape: React.FC = ({\n  text = 'Lorem ipsum',\n  fontColor = 'black',\n  tapeColor = 'yellow',\n  isRight = true,\n  rotationDeg = 0,\n}: Props) => {\n  const tapeRef = useRef<HTMLDivElement>(null)\n  const textRef = useRef<HTMLParagraphElement>(null)\n  const position = useRef(0) // 중간에 Prop이 바뀌더라도, position 유지하기 위해 밖에 선언\n\n  useEffect(() => {\n    const tapeElement = tapeRef.current\n    const textElement = textRef.current\n\n    if (\n      !(tapeElement instanceof HTMLDivElement) ||\n      !(textElement instanceof HTMLParagraphElement)\n    )\n      return\n\n    // 텍스트가 흐르는 방향을 설정\n    let textDirection = 1\n    if (isRight) {\n      tapeElement.style.justifyContent = 'flex-end'\n    } else {\n      tapeElement.style.justifyContent = 'flex-start'\n      textDirection = -1\n    }\n\n    // 텍스트를 이동 시키는 함수\n    const moveText = function () {\n      position.current += 1\n      // 반만큼 이동 했을 때, 다시 원위치로 복귀하여 무한스크롤\n      if (position.current > textElement.scrollWidth / 2) {\n        textElement.style.transform = `translateX(0)`\n        position.current = 0\n      }\n      textElement.style.transform = `translateX(${\n        textDirection * position.current\n      }px)`\n    }\n\n    // 애니메이션 실행 함수\n    let animationId: number = null\n    const animate = function () {\n      moveText()\n      animationId = window.requestAnimationFrame(animate) // 희한하게 정의되기 전에 쓰네?\n    }\n\n    // 애니메이션 실행\n    animate()\n\n    // 스크롤 함수\n    const speedUp = function () {\n      position.current += 10\n    }\n    window.addEventListener('scroll', speedUp)\n\n    // 클린업\n    return () => {\n      window.cancelAnimationFrame(animationId)\n      window.removeEventListener('scroll', speedUp)\n    }\n  }, [isRight])\n\n  return (\n    <div\n      ref={tapeRef}\n      className=\"scroll-infinite-tape__tape\"\n      style={{\n        backgroundColor: tapeColor,\n        transform: `rotate(${rotationDeg}deg) translateX(-10%)`,\n      }}\n    >\n      <p\n        ref={textRef}\n        className=\"scroll-infinite-tape__text\"\n        style={{ color: fontColor }}\n      >\n        {(text + '\\u00a0\\u00a0\\u00a0\\u00a0').repeat(20)}\n      </p>\n    </div>\n  )\n}\n"],"names":["_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","useSiteMetadata","seo","url","React","name","content","property","ScrollInfiniteTapePage","className","ScrollInfiniteTape","text","fontColor","tapeColor","isRight","rotationDeg","Head","location","SEO","decription","_ref2","tapeRef","useRef","textRef","position","useEffect","tapeElement","current","textElement","HTMLDivElement","HTMLParagraphElement","textDirection","style","justifyContent","animationId","animate","scrollWidth","transform","window","requestAnimationFrame","speedUp","addEventListener","cancelAnimationFrame","removeEventListener","ref","backgroundColor","color","repeat"],"sourceRoot":""}